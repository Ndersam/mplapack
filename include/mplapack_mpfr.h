/*
 * Copyright (c) 2008-2010
 *	Nakata, Maho
 * 	All rights reserved.
 *
 * $Id: mplapack_mpfr.h,v 1.5 2010/08/07 03:15:46 nakatamaho Exp $
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _MPLAPACK_MPFR_H_
#define _MPLAPACK_MPFR_H_

#include "mplapack_config.h"
#include "mpc_class.h"
#include "gmpxx.h"
#include "mpreal.h"
#include "mpcomplex.h"

using namespace mpfr;

/* MPLAPACK prototypes */

/* MPLAPACK driver routines */
void Rsyev ( const char *jobz, const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * w, mpreal * work, mplapackint lwork, mplapackint *info );
void Cheev ( const char *jobz, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * w, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint *info );
void Rgesv ( mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mplapackint *ipiv, mpreal * B, mplapackint ldb, mplapackint *info );
void Cgesv ( mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mplapackint *info );

/* MPLAPACK computational routines */
void Rsteqr ( const char *compz, mplapackint n, mpreal * d, mpreal * e, mpreal * Z, mplapackint ldz, mpreal * work, mplapackint *info );
void Csteqr ( const char *compz, mplapackint n, mpreal * d, mpreal * e, mpcomplex * z, mplapackint ldz, mpreal * work, mplapackint *info );
void Rsterf ( mplapackint n, mpreal * d, mpreal * e, mplapackint *info );
void Rorgqr ( mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cungqr ( mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rorgql ( mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cungql ( mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rsytrd ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * d, mpreal * e, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Chetrd ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * d, mpreal * e, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rorgtr ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cungtr ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rpotrf ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mplapackint *info );
void Cpotrf ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *info );
void Rtrtri ( const char *uplo, const char *diag, mplapackint n, mpreal * A, mplapackint lda, mplapackint *info );
void Ctrtri ( const char *uplo, const char *diag, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *info );
void Rgetrf ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Cgetrf ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rgetri ( mplapackint n, mpreal * A, mplapackint lda, mplapackint *ipiv, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgetri ( mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rgetrs ( const char *trans, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mplapackint *ipiv, mpreal * B, mplapackint ldb, mplapackint *info );
void Cgetrs ( const char *trans, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rtrtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mplapackint *info );
void Ctrtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mplapackint *info );

/* MPLAPACK Auxiliary routines */
mpreal Rlamc3 ( mpreal a, mpreal b );
mpreal Rlamch_mpfr(const char *cmach);
mplapackint iMlaenv_mpfr(mplapackint ispec, const char *name, const char *opts, mplapackint n1, mplapackint n2, mplapackint n3, mplapackint n4);
void Rlae2 ( mpreal a, mpreal b, mpreal c, mpreal * rt1, mpreal * rt2 );
void Rlaev2 ( mpreal a, mpreal b, mpreal c, mpreal * rt1, mpreal * rt2, mpreal * cs1, mpreal * sn1 );
void Claev2 ( mpcomplex a, mpcomplex b, mpcomplex c, mpreal * rt1, mpreal * rt2, mpreal * cs1, mpcomplex * sn1 );
void Rlassq ( mplapackint n, mpreal * x, mplapackint incx, mpreal * scale, mpreal * sumsq );
void Classq ( mplapackint n, mpcomplex * x, mplapackint incx, mpreal * scale, mpreal * sumsq );
mpreal Rlanst ( const char *norm, mplapackint n, mpreal * d, mpreal * e );
mpreal Clanht ( const char *norm, mplapackint n, mpreal * d, mpcomplex * e );
mpreal Rlansy ( const char *norm, const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * work );
mpreal Clansy ( const char *norm, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * work );
mpreal Clanhe ( const char *norm, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * work );
mpreal Rlapy2 ( mpreal x, mpreal y );
void Rlarfg ( mplapackint N, mpreal * alpha, mpreal * x, mplapackint incx, mpreal * tau );
mpreal Rlapy3 ( mpreal x, mpreal y, mpreal z );
void Rladiv ( mpreal a, mpreal b, mpreal c, mpreal d, mpreal * p, mpreal * q );
mpcomplex Cladiv ( mpcomplex x, mpcomplex y );
void Clarfg ( mplapackint n, mpcomplex * alpha, mpcomplex * x, mplapackint incx, mpcomplex * tau );
void Rlartg ( mpreal f, mpreal g, mpreal * cs, mpreal * sn, mpreal * r );
void Clartg ( mpcomplex f, mpcomplex g, mpreal * cs, mpcomplex * sn, mpcomplex * r );
void Rlaset ( const char *uplo, mplapackint m, mplapackint n, mpreal alpha, mpreal beta, mpreal * A, mplapackint lda );
void Claset ( const char *uplo, mplapackint m, mplapackint n, mpcomplex alpha, mpcomplex beta, mpcomplex * A, mplapackint lda );
void Rlasr ( const char *side, const char *pivot, const char *direct, mplapackint m, mplapackint n, mpreal * c, mpreal * s, mpreal * A, mplapackint lda );
void Clasr ( const char *side, const char *pivot, const char *direct, mplapackint m, mplapackint n, mpreal * c, mpreal * s, mpcomplex * A, mplapackint lda );
void Rpotf2 ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mplapackint *info );
void Clacgv ( mplapackint n, mpcomplex * x, mplapackint incx );
void Cpotf2 ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *info );
void Rlascl ( const char *type, mplapackint kl, mplapackint ku, mpreal cfrom, mpreal cto, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mplapackint *info );
void Clascl ( const char *type, mplapackint kl, mplapackint ku, mpreal cfrom, mpreal cto, mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *info );
void Rlasrt ( const char *id, mplapackint n, mpreal * d, mplapackint *info );
void Rsytd2 ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * d, mpreal * e, mpreal * tau, mplapackint *info );
void Chetd2 ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * d, mpreal * e, mpcomplex * tau, mplapackint *info );
void Rlarf ( const char *side, mplapackint m, mplapackint n, mpreal * v, mplapackint incv, mpreal tau, mpreal * C, mplapackint ldc, mpreal * work );
void Clarf ( const char *side, mplapackint m, mplapackint n, mpcomplex * v, mplapackint incv, mpcomplex tau, mpcomplex * c, mplapackint ldc, mpcomplex * work );
void Rorg2l ( mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint *info );
void Cung2l ( mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint *info );
void Rorg2r ( mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint *info );
void Cung2r ( mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint *info );
void Rlarft ( const char *direct, const char *storev, mplapackint n, mplapackint k, mpreal * v, mplapackint ldv, mpreal * tau, mpreal * t, mplapackint ldt );
void Clarft ( const char *direct, const char *storev, mplapackint n, mplapackint k, mpcomplex * v, mplapackint ldv, mpcomplex * tau, mpcomplex * t, mplapackint ldt );
void Rlarfb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mpreal * V, mplapackint ldv, mpreal * T, mplapackint ldt, mpreal * C, mplapackint ldc, mpreal * work, mplapackint ldwork );
void Clarfb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mpcomplex * V, mplapackint ldv, mpcomplex * T, mplapackint ldt, mpcomplex * C, mplapackint ldc, mpcomplex * work, mplapackint ldwork );
void Rlatrd ( const char *uplo, mplapackint n, mplapackint nb, mpreal * A, mplapackint lda, mpreal * e, mpreal * tau, mpreal * w, mplapackint ldw );
void Clatrd ( const char *uplo, mplapackint n, mplapackint nb, mpcomplex * A, mplapackint lda, mpreal * e, mpcomplex * tau, mpcomplex * w, mplapackint ldw );
void Clacrm ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * B, mplapackint ldb, mpcomplex * c, mplapackint ldc, mpreal * rwork );
void Rtrti2 ( const char *uplo, const char *diag, mplapackint n, mpreal * A, mplapackint lda, mplapackint *info );
void Ctrti2 ( const char *uplo, const char *diag, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *info );
void Rgetf2 ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Cgetf2 ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rlaswp ( mplapackint n, mpreal * A, mplapackint lda, mplapackint k1, mplapackint k2, mplapackint *ipiv, mplapackint incx );
void Claswp ( mplapackint n, mpcomplex * A, mplapackint lda, mplapackint k1, mplapackint k2, mplapackint *ipiv, mplapackint incx );
void Rlasyf ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, mpreal * A, mplapackint lda, mplapackint *ipiv, mpreal * w, mplapackint ldw, mplapackint *info );
void Clasyf ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * w, mplapackint ldw, mplapackint *info );
void Clahef ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * w, mplapackint ldw, mplapackint *info );
void Clacrt ( mplapackint n, mpcomplex * cx, mplapackint incx, mpcomplex * cy, mplapackint incy, mpcomplex c, mpcomplex s );
void Claesy ( mpcomplex a, mpcomplex b, mpcomplex c, mpcomplex * rt1, mpcomplex * rt2, mpcomplex * evscal, mpcomplex * cs1, mpcomplex * sn1 );
void Crot ( mplapackint n, mpcomplex * cx, mplapackint incx, mpcomplex * cy, mplapackint incy, mpreal c, mpcomplex s );
void Cspmv ( const char *uplo, mplapackint n, mpcomplex alpha, mpcomplex * AP, mpcomplex * x, mplapackint incx, mpcomplex beta, mpcomplex * y, mplapackint incy );
void Cspr ( const char *uplo, mplapackint n, mpcomplex alpha, mpcomplex * x, mplapackint incx, mpcomplex * AP );
void Csymv ( const char *uplo, mplapackint n, mpcomplex alpha, mpcomplex * A, mplapackint lda, mpcomplex * x, mplapackint incx, mpcomplex beta, mpcomplex * y, mplapackint incy );
void Csyr ( const char *uplo, mplapackint n, mpcomplex alpha, mpcomplex * x, mplapackint incx, mpcomplex * A, mplapackint lda );
mplapackint iCmax1 ( mplapackint n, mpcomplex * cx, mplapackint incx );
mpreal RCsum1 ( mplapackint n, mpcomplex * cx, mplapackint incx );
void Rlacn2 ( mplapackint n, mpreal * v, mpreal * x, mplapackint *isgn, mpreal * est, mplapackint *kase, mplapackint *isave );
void Clacn2 ( mplapackint n, mpcomplex * v, mpcomplex * x, mpreal * est, mplapackint *kase, mplapackint *isave );
void Rlatrs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mpreal * A, mplapackint lda, mpreal * x, mpreal * scale, mpreal * cnorm, mplapackint *info );
void Clatrs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * x, mpreal * scale, mpreal * cnorm, mplapackint *info );

/* not yet done ... auxiliary routines */
void Rgbtf2 ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpreal * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Cgbtf2 ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpcomplex * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Rgebd2 ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * d, mpreal * e, mpreal * tauq, mpreal * taup, mpreal * work, mplapackint *info );
void Cgebd2 ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * d, mpreal * e, mpcomplex * tauq, mpcomplex * taup, mpcomplex * work, mplapackint *info );
void Rgehd2 ( mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint *info );
void Cgehd2 ( mplapackint n, mplapackint ilo, mplapackint ihi, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint *info );
void Rgelq2 ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint *info );
void Cgelq2 ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint *info );
void Rgeql2 ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint *info );
void Cgeql2 ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint *info );
void Rgeqr2 ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint *info );
void Cgeqr2 ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint *info );
void Rgerq2 ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint *info );
void Cgerq2 ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint *info );
void Rgesc2 ( mplapackint n, mpreal * A, mplapackint lda, mpreal * rhs, mplapackint *ipiv, mplapackint *jpiv, mpreal * scale );
void Cgesc2 ( mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * rhs, mplapackint *ipiv, mplapackint *jpiv, mpreal * scale );
void Rgetc2 ( mplapackint n, mpreal * A, mplapackint lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint *info );
void Cgetc2 ( mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint *info );
void Rgtts2 ( mplapackint itrans, mplapackint n, mplapackint nrhs, mpreal * dl, mpreal * d, mpreal * du, mpreal * du2, mplapackint *ipiv, mpreal * B, mplapackint ldb );
void Cgtts2 ( mplapackint itrans, mplapackint n, mplapackint nrhs, mpcomplex * dl, mpcomplex * d, mpcomplex * du, mpcomplex * du2, mplapackint *ipiv, mpcomplex * B, mplapackint ldb );
void Rlabrd ( mplapackint m, mplapackint n, mplapackint nb, mpreal * A, mplapackint lda, mpreal * d, mpreal * e, mpreal * tauq, mpreal * taup, mpreal * x, mplapackint ldx, mpreal * y, mplapackint ldy );
void Clabrd ( mplapackint m, mplapackint n, mplapackint nb, mpcomplex * A, mplapackint lda, mpreal * d, mpreal * e, mpcomplex * tauq, mpcomplex * taup, mpcomplex * x, mplapackint ldx, mpcomplex * y, mplapackint ldy );
void Rlacpy ( const char *uplo, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb );
void Clacpy ( const char *uplo, mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb );
void Clarcm ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * c, mplapackint ldc, mpreal * rwork );
void Rlaebz ( mplapackint ijob, mplapackint nitmax, mplapackint n, mplapackint mmax, mplapackint minp, mplapackint nbmin, mpreal abstol, mpreal reltol, mpreal pivmin, mpreal * d, mpreal * e, mpreal * e2, mplapackint *nval, mpreal * AB, mpreal * c, mplapackint *mout, mplapackint *nab, mpreal * work, mplapackint *iwork, mplapackint *info );
void Rlaed0 ( mplapackint icompq, mplapackint qsiz, mplapackint n, mpreal * d, mpreal * e, mpreal * q, mplapackint ldq, mpreal * qstore, mplapackint ldqs, mpreal * work, mplapackint *iwork, mplapackint *info );
void Claed0 ( mplapackint qsiz, mplapackint n, mpreal * d, mpreal * e, mpcomplex * q, mplapackint ldq, mpcomplex * qstore, mplapackint ldqs, mpreal * rwork, mplapackint *iwork, mplapackint *info );
void Rlaed1 ( mplapackint n, mpreal * d, mpreal * q, mplapackint ldq, mplapackint *indxq, mpreal rho, mplapackint cutpnt, mpreal * work, mplapackint *iwork, mplapackint *info );
void Rlaed2 ( mplapackint *k, mplapackint n, mplapackint n1, mpreal * d, mpreal * q, mplapackint ldq, mplapackint *indxq, mpreal * rho, mpreal * z, mpreal * dlamda, mpreal * w, mpreal * q2, mplapackint *indx, mplapackint *indxc, mplapackint *indxp, mplapackint *coltyp, mplapackint *info );
void Rlaed3 ( mplapackint k, mplapackint n, mplapackint n1, mpreal * d, mpreal * q, mplapackint ldq, mpreal * rho, mpreal * dlamda, mpreal * q2, mplapackint *indx, mplapackint *ctot, mpreal * w, mpreal * s, mplapackint *info );
void Rlaed4 ( mplapackint n, mplapackint i, mpreal * d, mpreal * z, mpreal * delta, mpreal rho, mpreal * dlam, mplapackint *info );
void Rlaed5 ( mplapackint i, mpreal * d, mpreal * z, mpreal * delta, mpreal rho, mpreal * dlam );
void Rlaed6 ( mplapackint kniter, mplapackint orgati, mpreal rho, mpreal * d, mpreal * z, mpreal * finit, mpreal * tau, mplapackint *info );
void Rlaed7 ( mplapackint icompq, mplapackint n, mplapackint qsiz, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, mpreal * d, mpreal * q, mplapackint ldq, mplapackint *indxq, mpreal rho, mplapackint cutpnt, mpreal * qstore, mplapackint *qptr, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpreal * givnum, mpreal * work, mplapackint *iwork, mplapackint *info );
void Claed7 ( mplapackint n, mplapackint cutpnt, mplapackint qsiz, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, mpreal * d, mpcomplex * q, mplapackint ldq, mpreal rho, mplapackint *indxq, mpreal * qstore, mplapackint *qptr, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpreal * givnum, mpcomplex * work, mpreal * rwork, mplapackint *iwork, mplapackint *info );
void Rlaed8 ( mplapackint icompq, mplapackint *k, mplapackint n, mplapackint qsiz, mpreal * d, mpreal * q, mplapackint ldq, mplapackint *indxq, mpreal * rho, mplapackint cutpnt, mpreal * z, mpreal * dlamda, mpreal * q2, mplapackint ldq2, mpreal * w, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpreal * givnum, mplapackint *indxp, mplapackint *indx, mplapackint *info );
void Claed8 ( mplapackint *k, mplapackint n, mplapackint qsiz, mpcomplex * q, mplapackint ldq, mpreal * d, mpreal * rho, mplapackint cutpnt, mpreal * z, mpreal * dlamda, mpcomplex * q2, mplapackint ldq2, mpreal * w, mplapackint *indxp, mplapackint *indx, mplapackint *indxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpreal * givnum, mplapackint *info );
void Rlaed9 ( mplapackint k, mplapackint kstart, mplapackint kstop, mplapackint n, mpreal * d, mpreal * q, mplapackint ldq, mpreal rho, mpreal * dlamda, mpreal * w, mpreal * s, mplapackint lds, mplapackint *info );
void Rlaeda ( mplapackint n, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpreal * givnum, mpreal * q, mplapackint *qptr, mpreal * z, mpreal * ztemp, mplapackint *info );
void Rlaein ( mplapackint rightv, mplapackint noinit, mplapackint n, mpreal * h, mplapackint ldh, mpreal wr, mpreal wi, mpreal * vr, mpreal * vi, mpreal * B, mplapackint ldb, mpreal * work, mpreal eps3, mpreal smlnum, mpreal bignum, mplapackint *info );
void Claein ( mplapackint rightv, mplapackint noinit, mplapackint n, mpcomplex * h, mplapackint ldh, mpcomplex w, mpcomplex * v, mpcomplex * B, mplapackint ldb, mpreal * rwork, mpreal eps3, mpreal smlnum, mplapackint *info );
void Rlaexc ( mplapackint wantq, mplapackint n, mpreal * t, mplapackint ldt, mpreal * q, mplapackint ldq, mplapackint j1, mplapackint n1, mplapackint n2, mpreal * work, mplapackint *info );
void Rlag2 ( mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal safmin, mpreal * scale1, mpreal * scale2, mpreal * wr1, mpreal * wr2, mpreal * wi );
void Rlags2 ( mplapackint upper, mpreal a1, mpreal a2, mpreal a3, mpreal b1, mpreal b2, mpreal b3, mpreal * csu, mpreal * snu, mpreal * csv, mpreal * snv, mpreal * csq, mpreal * snq );
void Clags2 ( mplapacklogical * upper, mpreal a1, mpcomplex a2, mpreal a3, mpreal b1, mpcomplex b2, mpreal b3, mpreal * csu, mpcomplex * snu, mpreal * csv, mpcomplex * snv, mpreal * csq, mpcomplex * snq );
void Rlagtf ( mplapackint n, mpreal * a, mpreal lambda, mpreal * b, mpreal * c, mpreal * tol, mpreal * d, mplapackint *in, mplapackint *info );
void Rlagtm ( const char *trans, mplapackint n, mplapackint nrhs, mpreal alpha, mpreal * dl, mpreal * d, mpreal * du, mpreal * x, mplapackint ldx, mpreal * beta, mpreal * B, mplapackint ldb );
void Clagtm ( const char *trans, mplapackint n, mplapackint nrhs, mpreal alpha, mpcomplex * dl, mpcomplex * d, mpcomplex * du, mpcomplex * x, mplapackint ldx, mpreal beta, mpcomplex * B, mplapackint ldb );
void Rlagts ( mplapackint job, mplapackint n, mpreal * a, mpreal * b, mpreal * c, mpreal * d, mplapackint *in, mpreal * y, mpreal * tol, mplapackint *info );
void Rlagv2 ( mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * alphar, mpreal * alphai, mpreal * beta, mpreal * csl, mpreal * snl, mpreal * csr, mpreal * snr );
void Rlahqr ( mplapackint wantt, mplapackint wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * h, mplapackint ldh, mpreal * wr, mpreal * wi, mplapackint iloz, mplapackint ihiz, mpreal * z, mplapackint ldz, mplapackint *info );
void Clahqr ( mplapackint wantt, mplapackint wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpcomplex * h, mplapackint ldh, mpcomplex * w, mplapackint iloz, mplapackint ihiz, mpcomplex * z, mplapackint ldz, mplapackint *info );
void Rlahr2 ( mplapackint n, mplapackint k, mplapackint nb, mpreal * A, mplapackint lda, mpreal * tau, mpreal * t, mplapackint ldt, mpreal * y, mplapackint ldy );
void Clahr2 ( mplapackint n, mplapackint k, mplapackint nb, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * t, mplapackint ldt, mpcomplex * y, mplapackint ldy );
void Rlahrd ( mplapackint n, mplapackint k, mplapackint nb, mpreal * A, mplapackint lda, mpreal * tau, mpreal * t, mplapackint ldt, mpreal * y, mplapackint ldy );
void Clahrd ( mplapackint n, mplapackint k, mplapackint nb, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * t, mplapackint ldt, mpcomplex * y, mplapackint ldy );
void Rlaic1 ( mplapackint job, mplapackint j, mpreal * x, mpreal sest, mpreal * w, mpreal gamma, mpreal * sestpr, mpreal * s, mpreal * c );
void Claic1 ( mplapackint job, mplapackint j, mpcomplex * x, mpreal sest, mpcomplex * w, mpcomplex gamma, mpreal * sestpr, mpcomplex * s, mpcomplex * c );
void Rlaln2 ( mplapackint ltrans, mplapackint na, mplapackint nw, mpreal smin, mpreal ca, mpreal * A, mplapackint lda, mpreal d1, mpreal d2, mpreal * B, mplapackint ldb, mpreal wr, mpreal wi, mpreal * x, mplapackint ldx, mpreal * scale, mpreal * xnorm, mplapackint *info );
void Rlals0 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint nrhs, mpreal * B, mplapackint ldb, mpreal * bx, mplapackint ldbx, mplapackint *perm, mplapackint givptr, mplapackint *givcol, mplapackint ldgcol, mpreal * givnum, mplapackint ldgnum, mpreal * poles, mpreal * difl, mpreal * difr, mpreal * z, mplapackint k, mpreal c, mpreal s, mpreal * work, mplapackint *info );
void Clals0 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint nrhs, mpcomplex * B, mplapackint ldb, mpcomplex * bx, mplapackint ldbx, mplapackint *perm, mplapackint givptr, mplapackint *givcol, mplapackint ldgcol, mpreal * givnum, mplapackint ldgnum, mpreal * poles, mpreal * difl, mpreal * difr, mpreal * z, mplapackint k, mpreal c, mpreal s, mpreal * rwork, mplapackint *info );
void Rlalsa ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint nrhs, mpreal * B, mplapackint ldb, mpreal * bx, mplapackint ldbx, mpreal * u, mplapackint ldu, mpreal * vt, mplapackint *k, mpreal * difl, mpreal * difr, mpreal * z, mpreal * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, mpreal * givnum, mpreal * c, mpreal * s, mpreal * work, mplapackint *iwork, mplapackint *info );
void Clalsa ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint nrhs, mpcomplex * B, mplapackint ldb, mpcomplex * bx, mplapackint ldbx, mpreal * u, mplapackint ldu, mpreal * vt, mplapackint *k, mpreal * difl, mpreal * difr, mpreal * z, mpreal * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, mpreal * givnum, mpreal * c, mpreal * s, mpreal * rwork, mplapackint *iwork, mplapackint *info );
void Rlalsd ( const char *uplo, mplapackint smlsiz, mplapackint n, mplapackint nrhs, mpreal * d, mpreal * e, mpreal * B, mplapackint ldb, mpreal rcond, mplapackint *rank, mpreal * work, mplapackint *iwork, mplapackint *info );
void Clalsd ( const char *uplo, mplapackint smlsiz, mplapackint n, mplapackint nrhs, mpreal * d, mpreal * e, mpcomplex * B, mplapackint ldb, mpreal rcond, mplapackint *rank, mpcomplex * work, mpreal * rwork, mplapackint *iwork, mplapackint *info );
void Rlamrg ( mplapackint n1, mplapackint n2, mpreal * a, mplapackint dtrd1, mplapackint dtrd2, mplapackint *index );
mpreal Rlangb ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, mpreal * ab, mplapackint ldab, mpreal * work );
mpreal Clangb ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, mpcomplex * AB, mplapackint ldab, mpreal * work );
mpreal Rlange ( const char *norm, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * work );
mpreal Clange ( const char *norm, mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * work );
mpreal Rlangt ( const char *norm, mplapackint n, mpreal * dl, mpreal * d, mpreal * du );
mpreal Clangt ( const char *norm, mplapackint n, mpcomplex * dl, mpcomplex * d, mpcomplex * du );
mpreal Rlanhs ( const char *norm, mplapackint n, mpreal * A, mplapackint lda, mpreal * work );
mpreal Clanhs ( const char *norm, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * work );
mpreal Rlansb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, mpreal * AB, mplapackint ldab, mpreal * work );
mpreal Clansb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, mpcomplex * AB, mplapackint ldab, mpreal * work );
mpreal Clanhb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, mpcomplex * AB, mplapackint ldab, mpreal * work );
mpreal Rlansp ( const char *norm, const char *uplo, mplapackint n, mpreal * ap, mpreal * work );
mpreal Clansp ( const char *norm, const char *uplo, mplapackint n, mpcomplex * ap, mpreal * work );
mpreal Clanhp ( const char *norm, const char *uplo, mplapackint n, mpcomplex * ap, mpreal * work );
mpreal Rlantb ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint k, mpreal * AB, mplapackint ldab, mpreal * work );
mpcomplex Clantb ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint k, mpcomplex * AB, mplapackint ldab, mpreal * work );
mpreal Rlantp ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpreal * ap, mpreal * work );
mpcomplex Clantp ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpcomplex * ap, mpreal * work );
mpreal Rlantr ( const char *norm, const char *uplo, const char *diag, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * work );
mpreal Clantr ( const char *norm, const char *uplo, const char *diag, mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * work );
void Rlanv2 ( mpreal * a, mpreal * b, mpreal * c, mpreal * d, mpreal * rt1r, mpreal * rt1i, mpreal * rt2r, mpreal * rt2i, mpreal * cs, mpreal * sn );
void Rlapll ( mplapackint n, mpreal * x, mplapackint incx, mpreal * y, mplapackint incy, mpreal * ssmin );
void Clapll ( mplapackint n, mpcomplex * x, mplapackint incx, mpcomplex * y, mplapackint incy, mpreal * ssmin );
void Rlapmt ( mplapackint *forwrd, mplapackint m, mplapackint n, mpreal * X, mplapackint ldx, mplapackint *k );
void Clapmt ( mplapackint *forwrd, mplapackint m, mplapackint n, mpcomplex * X, mplapackint ldx, mplapackint *k );
void Rlaqgb ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpreal * AB, mplapackint ldab, mpreal * r, mpreal * c, mpreal rowcnd, mpreal colcnd, mpreal amax, char *equed );
void Claqgb ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpcomplex * AB, mplapackint ldab, mpreal * r, mpreal * c, mpreal rowcnd, mpreal colcnd, mpreal amax, char *equed );
void Rlaqge ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * r, mpreal * c, mpreal rowcnd, mpreal colcnd, mpreal amax, char *equed );
void Claqge ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * r, mpreal * c, mpreal rowcnd, mpreal colcnd, mpreal amax, char *equed );
void Rlaqp2 ( mplapackint m, mplapackint n, mplapackint offset, mpreal * A, mplapackint lda, mplapackint *jpvt, mpreal * tau, mpreal * vn1, mpreal * vn2, mpreal * work );
void Claqp2 ( mplapackint m, mplapackint n, mplapackint offset, mpcomplex * A, mplapackint lda, mplapackint *jpvt, mpcomplex * tau, mpreal * vn1, mpreal * vn2, mpcomplex * work );
void Rlaqps ( mplapackint m, mplapackint n, mplapackint offset, mplapackint nb, mplapackint *kb, mpreal * A, mplapackint lda, mplapackint *jpvt, mpreal * tau, mpreal * vn1, mpreal * vn2, mpreal * auxv, mpreal * f, mplapackint ldf );
void Claqps ( mplapackint m, mplapackint n, mplapackint offset, mplapackint nb, mplapackint *kb, mpcomplex * A, mplapackint lda, mplapackint *jpvt, mpcomplex * tau, mpreal * vn1, mpreal * vn2, mpcomplex * auxv, mpcomplex * f, mplapackint ldf );
void Rlaqsb ( const char *uplo, mplapackint n, mplapackint kd, mpreal * ab, mplapackint ldab, mpreal * s, mpreal scond, mpreal amax, char *equed );
void Claqsb ( const char *uplo, mplapackint n, mplapackint kd, mpcomplex * ab, mplapackint ldab, mpreal * s, mpreal scond, mpreal amax, char *equed );
void Claqhb ( const char *uplo, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mpreal * s, mpreal scond, mpreal amax, char *equed );
void Rlaqsp ( const char *uplo, mplapackint n, mpreal * ap, mpreal * s, mpreal scond, mpreal amax, char *equed );
void Claqsp ( const char *uplo, mplapackint n, mpcomplex * ap, mpreal * s, mpreal scond, mpreal amax, char *equed );
void Claqhp ( const char *uplo, mplapackint n, mpcomplex * ap, mpreal * s, mpreal scond, mpreal amax, char *equed );
void Rlaqsy ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * s, mpreal scond, mpreal amax, char *equed );
void Claqsy ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * s, mpreal scond, mpreal amax, char *equed );
void Claqhe ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * s, mpreal scond, mpreal amax, char *equed );
void Rlaqtr ( mplapackint ltran, mplapackint lreal, mplapackint n, mpreal * t, mplapackint ldt, mpreal * B, mpreal w, mpreal * scale, mpreal * x, mpreal * work, mplapackint *info );
void Rlar1v ( mplapackint n, mplapackint b1, mplapackint bn, mpreal lambda, mpreal * d, mpreal * l, mpreal * ld, mpreal * lld, mpreal pivmin, mpreal gaptol, mpreal * z, mplapackint wantnc, mplapackint *negcnt, mpreal * ztz, mpreal * mingma, mplapackint *r, mplapackint *isuppz, mpreal * nrminv, mpreal * resid, mpreal * rqcorr, mpreal * work );
void Clar1v ( mplapackint n, mplapackint b1, mplapackint bn, mpreal lambda, mpreal * d, mpreal * l, mpreal * ld, mpreal * lld, mpreal pivmin, mpreal gaptol, mpcomplex * z, mplapackint wantnc, mplapackint *negcnt, mpreal * ztz, mpreal * mingma, mplapackint *r, mplapackint *isuppz, mpreal * nrminv, mpreal * resid, mpreal * rqcorr, mpreal * work );
void Rlar2v ( mplapackint n, mpreal * x, mpreal * y, mpreal * z, mplapackint incx, mpreal * c, mpreal * s, mplapackint incc );
void Clar2v ( mplapackint n, mpcomplex * x, mpcomplex * y, mpcomplex * z, mplapackint incx, mpreal * c, mpcomplex * s, mplapackint incc );
void Rlarfx ( const char *side, mplapackint m, mplapackint n, mpreal * v, mpreal tau, mpreal * c, mplapackint ldc, mpreal * work );
void Clarfx ( const char *side, mplapackint m, mplapackint n, mpcomplex * v, mpcomplex tau, mpcomplex * c, mplapackint ldc, mpcomplex * work );
void Rlargv ( mplapackint n, mpreal * x, mplapackint incx, mpreal * y, mplapackint incy, mpreal * c, mplapackint incc );
void Clargv ( mplapackint n, mpcomplex * x, mplapackint incx, mpcomplex * y, mplapackint incy, mpreal * c, mplapackint incc );
void Rlarnv ( mplapackint idist, mplapackint *iseed, mplapackint n, mpreal * x );
void Clarnv ( mplapackint idist, mplapackint *iseed, mplapackint n, mpcomplex * x );
mplapackint Rlaneg ( mplapackint n, mpreal * d, mpreal * lld, mpreal sigma, mpreal pivmin, mplapackint r );
void Rlarra ( mplapackint n, mpreal * d, mpreal * e, mpreal * e2, mpreal spltol, mpreal tnrm, mplapackint *nsplit, mplapackint *isplit, mplapackint *info );
void Rlarrb ( mplapackint n, mpreal * d, mpreal * lld, mplapackint ifirst, mplapackint ilast, mpreal rtol1, mpreal rtol2, mplapackint offset, mpreal * w, mpreal * wgap, mpreal * werr, mpreal * work, mplapackint *iwork, mpreal pivmin, mpreal spdiam, mplapackint twist, mplapackint *info );
void Rlarrc ( const char *jobt, mplapackint n, mpreal vl, mpreal vu, mpreal * d, mpreal * e, mpreal pivmin, mplapackint *eigcnt, mplapackint *lcnt, mplapackint *rcnt, mplapackint *info );
void Rlarrd ( const char *range, const char *order, mplapackint n, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal *gers, mpreal reltol, mpreal * d, mpreal * e, mpreal * e2, mpreal pivmin, mplapackint nsplit, mplapackint *isplit, mplapackint *m, mpreal * w, mpreal * werr, mpreal * wl, mpreal * wu, mplapackint *iblock, mplapackint *indexw, mpreal * work, mplapackint *iwork, mplapackint *info );
void Rlarre ( const char *range, mplapackint n, mpreal * vl, mpreal * vu, mplapackint il, mplapackint iu, mpreal * d, mpreal * e, mpreal * e2, mpreal rtol1, mpreal rtol2, mpreal spltol, mplapackint * nsplit, mplapackint *isplit, mplapackint * m, mpreal * w, mpreal * werr, mpreal * wgap, mplapackint *iblock, mplapackint *indexw, mpreal * gers, mpreal * pivmin, mpreal * work, mplapackint *iwork, mplapackint *info );
void Rlarrf ( mplapackint n, mpreal * d, mpreal * l, mpreal * ld, mplapackint clstrt, mplapackint clend, mpreal * w, mpreal * wgap, mpreal * werr, mpreal spdiam, mpreal clgapl, mpreal clgapr, mpreal pivmin, mpreal * sigma, mpreal * dplus, mpreal * lplus, mpreal * work, mplapackint *info );
void Rlarrj ( mplapackint n, mpreal * d, mpreal * e2, mplapackint ifirst, mplapackint ilast, mpreal rtol, mplapackint offset, mpreal * w, mpreal * werr, mpreal * work, mplapackint *iwork, mpreal pivmin, mpreal spdiam, mplapackint *info );
void Rlarrk ( mplapackint n, mplapackint iw, mpreal gl, mpreal gu, mpreal * d, mpreal * e2, mpreal pivmin, mpreal reltol, mpreal * w, mpreal * werr, mplapackint *info );
void Rlarrr ( mplapackint n, mpreal * d, mpreal * e, mplapackint *info );
void Rlartv ( mplapackint n, mpreal * x, mplapackint incx, mpreal * y, mplapackint incy, mpreal * c, mpreal * s, mplapackint incc );
void Clartv ( mplapackint n, mpcomplex * x, mplapackint incx, mpcomplex * y, mplapackint incy, mpreal * c, mpcomplex * s, mplapackint incc );
void Rlarrv ( mplapackint n, mpreal vl, mpreal vu, mpreal * d, mpreal * l, mpreal pivmin, mplapackint * isplit, mplapackint m, mplapackint dol, mplapackint dou, mpreal minrgp, mpreal rtol1, mpreal rtol2, mpreal * w, mpreal * werr, mpreal * wgap, mplapackint * iblock, mplapackint * indexw, mpreal * gers, mpreal * z, mplapackint ldz, mplapackint * isuppz, mpreal * work, mplapackint * iwork, mplapackint * info );
void Clarrv ( mplapackint n, mpreal vl, mpreal vu, mpreal * d, mpreal * l, mpreal pivmin, mplapackint *isplit, mplapackint m, mplapackint dol, mplapackint dou, mpreal minrgp, mpreal rtol1, mpreal rtol2, mpreal * w, mpreal * werr, mpreal * wgap, mplapackint *iblock, mplapackint *indexw, mpreal * gers, mpcomplex * z, mplapackint ldz, mplapackint *isuppz, mpreal * work, mplapackint *iwork, mplapackint *info );
void Rlaruv ( mplapackint *iseed, mplapackint n, mpreal * x );
void Rlarz ( const char *side, mplapackint m, mplapackint n, mplapackint l, mpreal * v, mplapackint incv, mpreal tau, mpreal * C, mplapackint ldc, mpreal * work );
void Clarz ( const char *side, mplapackint m, mplapackint n, mplapackint l, mpcomplex * v, mplapackint incv, mpcomplex tau, mpcomplex * c, mplapackint ldc, mpcomplex * work );
void Rlarzb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpreal * v, mplapackint ldv, mpreal * t, mplapackint ldt, mpreal * c, mplapackint ldc, mpreal * work, mplapackint ldwork );
void Clarzb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpcomplex * v, mplapackint ldv, mpcomplex * t, mplapackint ldt, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint ldwork );
void Rlarzt ( const char *direct, const char *storev, mplapackint n, mplapackint k, mpreal * v, mplapackint ldv, mpreal * tau, mpreal * t, mplapackint ldt );
void Clarzt ( const char *direct, const char *storev, mplapackint n, mplapackint k, mpcomplex * v, mplapackint ldv, mpcomplex * tau, mpcomplex * t, mplapackint ldt );
void Rlas2 ( mpreal f, mpreal g, mpreal h, mpreal * ssmin, mpreal * ssmax );
void Rlasd0 ( mplapackint n, mplapackint sqre, mpreal * d, mpreal * e, mpreal * u, mplapackint ldu, mpreal * vt, mplapackint ldvt, mplapackint smlsiz, mplapackint *iwork, mpreal * work, mplapackint *info );
void Rlasd1 ( mplapackint nl, mplapackint nr, mplapackint *sqre, mpreal * d, mpreal * alpha, mpreal * beta, mpreal * u, mplapackint ldu, mpreal * vt, mplapackint ldvt, mplapackint *idxq, mplapackint *iwork, mpreal * work, mplapackint *info );
void Rlasd2 ( mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint *k, mpreal * d, mpreal * z, mpreal alpha, mpreal beta, mpreal * u, mplapackint ldu, mpreal * vt, mplapackint ldvt, mpreal * dsigma, mpreal * u2, mplapackint ldu2, mpreal * vt2, mplapackint ldvt2, mplapackint *idxp, mplapackint *idx, mplapackint *idxc, mplapackint *idxq, mplapackint *coltyp, mplapackint *info );
void Rlasd3 ( mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint k, mpreal * d, mpreal * q, mplapackint ldq, mpreal * dsigma, mpreal * u, mplapackint ldu, mpreal * u2, mplapackint ldu2, mpreal * vt, mplapackint ldvt, mpreal * vt2, mplapackint ldvt2, mplapackint *idxc, mplapackint *ctot, mpreal * z, mplapackint *info );
void Rlasd4 ( mplapackint n, mplapackint i, mpreal * d, mpreal * z, mpreal * delta, mpreal rho, mpreal * sigma, mpreal * work, mplapackint *info );
void Rlasd5 ( mplapackint i, mpreal * d, mpreal * z, mpreal * delta, mpreal rho, mpreal * dsigma, mpreal * work );
void Rlasd6 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mpreal * d, mpreal * vf, mpreal * vl, mpreal * alpha, mpreal * beta, mplapackint *idxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mpreal * givnum, mplapackint ldgnum, mpreal * poles, mpreal * difl, mpreal * difr, mpreal * z, mplapackint k, mpreal * c, mpreal * s, mpreal * work, mplapackint *iwork, mplapackint *info );
void Rlasd7 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint k, mpreal * d, mpreal * z, mpreal * zw, mpreal * vf, mpreal * vfw, mpreal * vl, mpreal * vlw, mpreal alpha, mpreal beta, mpreal * dsigma, mplapackint *idx, mplapackint *idxp, mplapackint *idxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mpreal * givnum, mplapackint ldgnum, mpreal * c, mpreal * s, mplapackint *info );
void Rlasd8 ( mplapackint icompq, mplapackint k, mpreal * d, mpreal * z, mpreal * vf, mpreal * vl, mpreal * difl, mpreal * difr, mplapackint lddifr, mpreal * dsigma, mpreal * work, mplapackint *info );
void Rlasda ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint sqre, mpreal * d, mpreal * e, mpreal * u, mplapackint ldu, mpreal * vt, mplapackint *k, mpreal * difl, mpreal * difr, mpreal * z, mpreal * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, mpreal * givnum, mpreal * c, mpreal * s, mpreal * work, mplapackint *iwork, mplapackint *info );
void Rlasdq ( const char *uplo, mplapackint sqre, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, mpreal * d, mpreal * e, mpreal * vt, mplapackint ldvt, mpreal * u, mplapackint ldu, mpreal * c, mplapackint ldc, mpreal * work, mplapackint *info );
void Rlasdt ( mplapackint n, mplapackint lvl, mplapackint nd, mplapackint *inode, mplapackint *ndiml, mplapackint *ndimr, mplapackint msub );
void Rlasq1 ( mplapackint n, mpreal * d, mpreal * e, mpreal * work, mplapackint *info );
void Rlasq2 ( mplapackint n, mpreal * z, mplapackint *info );
void Rlasq3 ( mplapackint i0, mplapackint n0, mpreal * z, mplapackint pp, mpreal * dmin, mpreal * sigma, mpreal * desig, mpreal qmax, mplapackint *nfail, mplapackint *iter, mplapackint *ndiv, mplapackint ieee );
void Rlasq4 ( mplapackint i0, mplapackint n0, mpreal * z, mplapackint pp, mplapackint n0in, mpreal dmin, mpreal dmin1, mpreal dmin2, mpreal dn, mpreal dn1, mpreal dn2, mpreal * tau, mplapackint *ttype );
void Rlasq5 ( mplapackint i0, mplapackint n0, mpreal * z, mplapackint pp, mpreal tau, mpreal * dmin, mpreal * dmin1, mpreal * dmin2, mpreal * dn, mpreal * dnm1, mpreal * dnm2, mplapackint ieee );
void Rlasq6 ( mplapackint i0, mplapackint n0, mpreal * z, mplapackint pp, mpreal * dmin, mpreal * dmin1, mpreal * dmin2, mpreal * dn, mpreal * dnm1, mpreal * dnm2 );
void Rlasv2 ( mpreal f, mpreal g, mpreal h, mpreal * ssmin, mpreal * ssmax, mpreal * snr, mpreal * csr, mpreal * snl, mpreal * csl );
void Rlasy2 ( mplapackint ltranl, mplapackint ltranr, mplapackint isgn, mplapackint n1, mplapackint n2, mpreal * tl, mplapackint ldtl, mpreal * tr, mplapackint ldtr, mpreal * B, mplapackint ldb, mpreal * scale, mpreal * x, mplapackint ldx, mpreal * xnorm, mplapackint *info );
void Rlatbs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mplapackint kd, mpreal * AB, mplapackint ldab, mpreal * x, mpreal * scale, mpreal * cnorm, mplapackint *info );
void Clatbs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mpcomplex * x, mpreal * scale, mpreal * cnorm, mplapackint *info );
void Rlatdf ( mplapackint ijob, mplapackint n, mpreal * z, mplapackint ldz, mpreal * rhs, mpreal * rdsum, mpreal * rdscal, mplapackint *ipiv, mplapackint *jpiv );
void Clatdf ( mplapackint ijob, mplapackint n, mpcomplex * z, mplapackint ldz, mpcomplex * rhs, mpreal * rdsum, mpreal * rdscal, mplapackint *ipiv, mplapackint *jpiv );
void Rlatps ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mpreal * ap, mpreal * x, mpreal * scale, mpreal * cnorm, mplapackint *info );
void Clatps ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mpcomplex * ap, mpcomplex * x, mpreal * scale, mpreal * cnorm, mplapackint *info );
void Rlauu2 ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mplapackint *info );
void Clauu2 ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *info );
void Rlauum ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mplapackint *info );
void Clauum ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *info );
void Rlatrz ( mplapackint m, mplapackint n, mplapackint l, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work );
void Clatrz ( mplapackint m, mplapackint n, mplapackint l, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work );
void Rorgl2 ( mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint *info );
void Cungl2 ( mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint *info );
void Rorgr2 ( mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint *info );
void Cungr2 ( mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint *info );
void Rorm2l ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint *info );
void Cunm2l ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint *info );
void Rorm2r ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint *info );
void Cunm2r ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint *info );
void Rorml2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint *info );
void Cunml2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint *info );
void Rormr2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * C, mplapackint ldc, mpreal * work, mplapackint *info );
void Cunmr2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint *info );
void Rormr3 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint *info );
void Cunmr3 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint *info );
void Rpbtf2 ( const char *uplo, mplapackint n, mplapackint kd, mpreal * AB, mplapackint ldab, mplapackint *info );
void Cpbtf2 ( const char *uplo, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mplapackint *info );
void Rptts2 ( mplapackint n, mplapackint nrhs, mpreal * d, mpreal * e, mpreal * b, mplapackint ldb );
void Cptts2 ( mplapackint iuplo, mplapackint n, mplapackint nrhs, mpreal * d, mpcomplex * e, mpcomplex * B, mplapackint ldb );
void Rrscl ( mplapackint n, mpreal sa, mpreal * sx, mplapackint incx );
void CRrscl ( mplapackint n, mpreal sa, mpcomplex * sx, mplapackint incx );
void Rsygs2 ( mplapackint itype, const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mplapackint *info );
void Chegs2 ( mplapackint itype, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rsytf2 ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Csytf2 ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Chetf2 ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rtgex2 ( mplapackint wantq, mplapackint wantz, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * q, mplapackint ldq, mpreal * z, mplapackint ldz, mplapackint j1, mplapackint n1, mplapackint n2, mpreal * work, mplapackint lwork, mplapackint *info );
void Ctgex2 ( mplapackint wantq, mplapackint wantz, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * q, mplapackint ldq, mpcomplex * z, mplapackint ldz, mplapackint j1, mplapackint *info );
void Rtgsy2 ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * c, mplapackint ldc, mpreal * d, mplapackint ldd, mpreal * e, mplapackint lde, mpreal * f, mplapackint ldf, mpreal * scale, mpreal * rdsum, mpreal * rdscal, mplapackint *iwork, mplapackint *pq, mplapackint *info );
void Ctgsy2 ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * C, mplapackint ldc, mpcomplex * d, mplapackint ldd, mpcomplex * e, mplapackint lde, mpcomplex * f, mplapackint ldf, mpreal * scale, mpreal * rdsum, mpreal * rdscal, mplapackint *info );
void Rlazq3 ( mplapackint i0, mplapackint n0, mpreal * z, mplapackint pp, mpreal * dmin, mpreal * sigma, mpreal * desig, mpreal qmax, mplapackint *nfail, mplapackint *iter, mplapackint *ndiv, mplapackint *ieee, mplapackint *ttype, mpreal * dmin1, mpreal * dmin2, mpreal * dn, mpreal * dn1, mpreal * dn2, mpreal * tau );
void Rlazq4 ( mplapackint i0, mplapackint n0, mpreal * z, mplapackint pp, mplapackint n0in, mpreal dmin, mpreal dmin1, mpreal dmin2, mpreal dn, mpreal dn1, mpreal dn2, mpreal * tau, mplapackint *ttype, mpreal * g );
void Rlaqr0 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * h, mplapackint ldh, mpreal * wr, mpreal * wi, mplapackint iloz, mplapackint ihiz, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *info );
void Claqr0 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpcomplex * h, mplapackint ldh, mpcomplex * w, mplapackint *iloz, mplapackint *ihiz, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rlaqr1 ( mplapackint n, mpreal * h, mplapackint ldh, mpreal sr1, mpreal si1, mpreal sr2, mpreal si2, mpreal * v );
void Claqr1 ( mplapackint n, mpcomplex * h, mplapackint ldh, mpcomplex s1, mpcomplex s2, mpcomplex * v );
void Rlaqr2 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, mpreal * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpreal * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, mpreal * sr, mpreal * si, mpreal * v, mplapackint ldv, mplapackint nh, mpreal * t, mplapackint ldt, mplapackint nv, mpreal * wv, mplapackint ldwv, mpreal * work, mplapackint lwork );
void Claqr2 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, mpcomplex * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpcomplex * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, mpcomplex * sh, mpcomplex * v, mplapackint ldv, mplapackint nh, mpcomplex * t, mplapackint ldt, mplapackint nv, mpcomplex * wv, mplapackint ldwv, mpcomplex * work, mplapackint lwork );
void Rlaqr3 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, mpreal * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpreal * z, mplapackint ldz, mplapackint ns, mplapackint nd, mpreal * sr, mpreal * si, mpreal * v, mplapackint ldv, mplapackint nh, mpreal * t, mplapackint ldt, mplapackint nv, mpreal * wv, mplapackint ldwv, mpreal * work, mplapackint lwork );
void Claqr3 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, mpcomplex * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpcomplex * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, mpcomplex * sh, mpcomplex * v, mplapackint ldv, mplapackint nh, mpcomplex * t, mplapackint ldt, mplapackint nv, mpcomplex * wv, mplapackint ldwv, mpcomplex * work, mplapackint lwork );
void Rlaqr4 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * h, mplapackint ldh, mpreal * wr, mpreal * wi, mplapackint iloz, mplapackint ihiz, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *info );
void Claqr4 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpcomplex * h, mplapackint ldh, mpcomplex * w, mplapackint iloz, mplapackint ihiz, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rlaqr5 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint kac22, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nshfts, mpreal * sr, mpreal * si, mpreal * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpreal * z, mplapackint ldz, mpreal * v, mplapackint ldv, mpreal * u, mplapackint ldu, mplapackint nv, mpreal * wv, mplapackint ldwv, mplapackint nh, mpreal * wh, mplapackint ldwh );
void Claqr5 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint kacc22, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nshfts, mpcomplex * s, mpcomplex * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpcomplex * z, mplapackint ldz, mpcomplex * v, mplapackint ldv, mpcomplex * u, mplapackint ldu, mplapackint nv, mpcomplex * wv, mplapackint ldwv, mplapackint nh, mpcomplex * wh, mplapackint ldwh );
void Rlatzm ( const char *side, mplapackint m, mplapackint n, mpreal * v, mplapackint incv, mpreal * tau, mpreal *c1, mpreal * c2, mplapackint ldc, mpreal * work );
void Clatzm ( const char *side, mplapackint m, mplapackint n, mpcomplex * v, mplapackint incv, mpcomplex * tau, mpcomplex * c1, mpcomplex * c2, mplapackint ldc, mpcomplex * work );
void Clacp2 ( const char *uplo, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpcomplex * B, mplapackint ldb );
mplapackint Risnan ( mpreal din );

/* not yet done ... driver and computational routines */
void Rbdsdc ( const char *uplo, const char *compq, mplapackint n, mpreal * d, mpreal * e, mpreal * u, mplapackint ldu, mpreal * vt, mplapackint ldvt, mpreal * q, mplapackint * iq, mpreal * work, mplapackint * iwork, mplapackint * info );
void Rbdsqr ( const char *uplo, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, mpreal * d, mpreal * e, mpreal * vt, mplapackint ldvt, mpreal * u, mplapackint ldu, mpreal * c, mplapackint ldc, mpreal * work, mplapackint *info );
void Cbdsqr ( const char *uplo, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, mpreal * d, mpreal * e, mpcomplex * vt, mplapackint ldvt, mpcomplex * u, mplapackint ldu, mpcomplex * c, mplapackint ldc, mpreal * rwork, mplapackint * info );
void Rdisna ( const char *job, mplapackint m, mplapackint n, mpreal * d, mpreal * sep, mplapackint *info );
void Rgbbrd ( const char *vect, mplapackint m, mplapackint n, mplapackint ncc, mplapackint kl, mplapackint ku, mpreal * AB, mplapackint ldab, mpreal * d, mpreal * e, mpreal * q, mplapackint ldq, mpreal * pt, mplapackint ldpt, mpreal * c, mplapackint ldc, mpreal * work, mplapackint *info );
void Cgbbrd ( const char *vect, mplapackint m, mplapackint n, mplapackint ncc, mplapackint kl, mplapackint ku, mpcomplex * AB, mplapackint ldab, mpreal * d, mpreal * e, mpcomplex * q, mplapackint ldq, mpcomplex * pt, mplapackint ldpt, mpcomplex * c, mplapackint ldc, mpcomplex * work, mpreal * rwork, mplapackint * info );
void Rgbcon ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, mpreal * AB, mplapackint ldab, mplapackint *ipiv, mpreal anorm, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cgbcon ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, mpcomplex * AB, mplapackint ldab, mplapackint *ipiv, mpreal anorm, mpreal * rcond, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rgbequ ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpreal * AB, mplapackint ldab, mpreal * r, mpreal * c, mpreal * rowcnd, mpreal * colcnd, mpreal * amax, mplapackint *info );
void Cgbequ ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpcomplex * AB, mplapackint ldab, mpreal * r, mpreal * c, mpreal * rowcnd, mpreal * colcnd, mpreal * amax, mplapackint *info );
void Rgbrfs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpreal * AB, mplapackint ldab, mpreal * afb, mplapackint ldafb, mplapackint *ipiv, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cgbrfs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpcomplex * AB, mplapackint ldab, mpcomplex * afb, mplapackint ldafb, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rgbsv ( mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpreal * AB, mplapackint ldab, mplapackint *ipiv, mpreal * B, mplapackint ldb, mplapackint *info );
void Cgbsv ( mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpcomplex * ab, mplapackint ldab, mplapackint *ipiv, mpcomplex * b, mplapackint ldb, mplapackint *info );
void Rgbsvx ( const char *fact, const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpreal * AB, mplapackint ldab, mpreal * afb, mplapackint ldafb, mplapackint * ipiv, char *equed, mpreal * r, mpreal * c, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint * iwork, mplapackint * info );
void Cgbsvx ( const char *fact, const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpcomplex * AB, mplapackint ldab, mpcomplex * afb, mplapackint ldafb, mplapackint * ipiv, char *equed, mpreal * r, mpreal * c, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint * info );
void Rgbtrf ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpreal * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Cgbtrf ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpcomplex * ab, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Rgbtrs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpreal * AB, mplapackint ldab, mplapackint *ipiv, mpreal * B, mplapackint ldb, mplapackint *info );
void Cgbtrs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpcomplex * AB, mplapackint ldab, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rgebak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * scale, mplapackint m, mpreal * v, mplapackint ldv, mplapackint *info );
void Cgebak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * scale, mplapackint m, mpcomplex * v, mplapackint ldv, mplapackint *info );
void Rgebal ( const char *job, mplapackint n, mpreal * A, mplapackint lda, mplapackint *ilo, mplapackint *ihi, mpreal * scale, mplapackint *info );
void Cgebal ( const char *job, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ilo, mplapackint *ihi, mpreal * scale, mplapackint *info );
void Rgebrd ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * d, mpreal * e, mpreal * tauq, mpreal * taup, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgebrd ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * d, mpreal * e, mpcomplex * tauq, mpcomplex * taup, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rgecon ( const char *norm, mplapackint n, mpreal * A, mplapackint lda, mpreal anorm, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cgecon ( const char *norm, mplapackint n, mpcomplex * A, mplapackint lda, mpreal anorm, mpreal * rcond, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rgeequ ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * r, mpreal * c, mpreal * rowcnd, mpreal * colcnd, mpreal * amax, mplapackint *info );
void Cgeequ ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * r, mpreal * c, mpreal * rowcnd, mpreal * colcnd, mpreal * amax, mplapackint *info );
void Rgees ( const char *jobvs, const char *sort, LFP select, mplapackint n, mpreal * A, mplapackint lda, mplapackint *sdim, mpreal * wr, mpreal * wi, mpreal * vs, mplapackint ldvs, mpreal * work, mplapackint lwork, mplapacklogical * bwork, mplapackint *info );
void Cgees ( const char *jobvs, const char *sort, LFP select, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *sdim, mpcomplex * w, mpcomplex * vs, mplapackint ldvs, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapacklogical * bwork, mplapackint *info );
void Rgeesx ( const char *jobvs, const char *sort, LFP select, const char *sense, mplapackint n, mpreal * A, mplapackint lda, mplapackint * sdim, mpreal * wr, mpreal * wi, mpreal * vs, mplapackint ldvs, mpreal * rconde, mpreal * rcondv, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Cgeesx ( const char *jobvs, const char *sort, LFP select, const char *sense, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *sdim, mpcomplex * w, mpcomplex * vs, mplapackint ldvs, mpreal * rconde, mpreal * rcondv, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapacklogical * bwork, mplapackint *info );
void Rgeev ( const char *jobvl, const char *jobvr, mplapackint n, mpreal * A, mplapackint lda, mpreal * wr, mpreal * wi, mpreal * vl, mplapackint ldvl, mpreal * vr, mplapackint ldvr, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgeev ( const char *jobvl, const char *jobvr, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * w, mpcomplex * vl, mplapackint ldvl, mpcomplex * vr, mplapackint ldvr, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * info );
void Rgeevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, mpreal * A, mplapackint lda, mpreal * wr, mpreal * wi, mpreal * vl, mplapackint ldvl, mpreal * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, mpreal * scale, mpreal * abnrm, mpreal * rconde, mpreal * rcondv, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Cgeevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * w, mpcomplex * vl, mplapackint ldvl, mpcomplex * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, mpreal * scale, mpreal * abnrm, mpreal * rconde, mpreal * rcondv, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * info );
void Cgehrd ( mplapackint n, mplapackint ilo, mplapackint ihi, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rgehrd ( mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Rgelqf ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgelqf ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rgels ( const char *trans, mplapackint m, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgels ( const char *trans, mplapackint m, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rgelsx ( mplapackint m, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mplapackint *jpvt, mpreal rcond, mplapackint *rank, mpreal * work, mplapackint *info );
void Cgelsx ( mplapackint m, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mplapackint *jpvt, mpreal rcond, mplapackint *rank, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rgelsd ( mplapackint m, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * s, mpreal * rcond, mplapackint *rank, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint *info );
void Cgelsd ( mplapackint m, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpreal * s, mpreal rcond, mplapackint * rank, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * iwork, mplapackint * info );
void Rgelss ( mplapackint m, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * s, mpreal rcond, mplapackint * rank, mpreal * work, mplapackint lwork, mplapackint * info );
void Cgelss ( mplapackint m, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpreal * s, mpreal rcond, mplapackint * rank, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * info );
void Rgelsy ( mplapackint m, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mplapackint *jpvt, mpreal rcond, mplapackint *rank, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgelsy ( mplapackint m, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mplapackint * jpvt, mpreal rcond, mplapackint * rank, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * info );
void Rgeqlf ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgeqlf ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rgeqpf ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mplapackint *jpvt, mpreal * tau, mpreal * work, mplapackint *info );
void Cgeqpf ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *jpvt, mpcomplex * tau, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rgeqp3 ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mplapackint *jpvt, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgeqp3 ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *jpvt, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint *info );
void Rgeqrf ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgeqrf ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rgerfs ( const char *trans, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * af, mplapackint ldaf, mplapackint *ipiv, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cgerfs ( const char *trans, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * af, mplapackint ldaf, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rgerqf ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgerqf ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rgesdd ( const char *jobz, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * s, mpreal * u, mplapackint ldu, mpreal * vt, mplapackint ldvt, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Cgesdd ( const char *jobz, mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * s, mpcomplex * u, mplapackint ldu, mpcomplex * vt, mplapackint ldvt, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * iwork, mplapackint * info );
void Rgesvd ( const char *jobu, const char *jobvt, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * s, mpreal * u, mplapackint ldu, mpreal * vt, mplapackint ldvt, mpreal * work, mplapackint lwork, mplapackint * info );
void Cgesvd ( const char *jobu, const char *jobvt, mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * s, mpcomplex * u, mplapackint ldu, mpcomplex * vt, mplapackint ldvt, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * info );
void Rgesvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * af, mplapackint ldaf, mplapackint * ipiv, char *equed, mpreal * r, mpreal * c, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint * iwork, mplapackint * info );
void Cgesvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * af, mplapackint ldaf, mplapackint * ipiv, char *equed, mpreal * r, mpreal * c, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint * info );
void Rggbak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * lscale, mpreal * rscale, mplapackint m, mpreal * v, mplapackint ldv, mplapackint *info );
void Cggbak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * lscale, mpreal * rscale, mplapackint m, mpcomplex * v, mplapackint ldv, mplapackint *info );
void Rggbal ( const char *job, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mplapackint *ilo, mplapackint *ihi, mpreal * lscale, mpreal * rscale, mpreal * work, mplapackint *info );
void Cggbal ( const char *job, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mplapackint *ilo, mplapackint *ihi, mpreal * lscale, mpreal * rscale, mpreal * work, mplapackint *info );
void Rgges ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mplapackint * sdim, mpreal * alphar, mpreal * alphai, mpreal * beta, mpreal * vsl, mplapackint ldvsl, mpreal * vsr, mplapackint ldvsr, mpreal * work, mplapackint lwork, mplapacklogical * bwork, mplapackint * info );
void Cgges ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mplapackint * sdim, mpcomplex * alpha, mpcomplex * beta, mpcomplex * vsl, mplapackint ldvsl, mpcomplex * vsr, mplapackint ldvsr, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapacklogical * bwork, mplapackint * info );
void Rgegs ( const char *jobvsl, const char *jobvsr, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * alphar, mpreal * alphai, mpreal * beta, mpreal * vsl, mplapackint ldvsl, mpreal * vsr, mplapackint ldvsr, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgegs ( const char *jobvsl, const char *jobvsr, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * alpha, mpcomplex * beta, mpcomplex * vsl, mplapackint ldvsl, mpcomplex * vsr, mplapackint ldvsr, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * info );
void Rggesx ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, const char *sense, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mplapackint * sdim, mpreal * alphar, mpreal * alphai, mpreal * beta, mpreal * vsl, mplapackint ldvsl, mpreal * vsr, mplapackint ldvsr, mpreal * rconde, mpreal * rcondv, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Cggesx ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, const char *sense, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mplapackint * sdim, mpcomplex * alpha, mpcomplex * beta, mpcomplex * vsl, mplapackint ldvsl, mpcomplex * vsr, mplapackint ldvsr, mpreal * rconde, mpreal * rcondv, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Rggev ( const char *jobvl, const char *jobvr, mplapackint n, mpreal * A, mplapackint lda, mpreal * b, mplapackint ldb, mpreal * alphar, mpreal * alphai, mpreal * beta, mpreal * vl, mplapackint ldvl, mpreal * vr, mplapackint ldvr, mpreal * work, mplapackint lwork, mplapackint * info );
void Cggev ( const char *jobvl, const char *jobvr, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * alpha, mpcomplex * beta, mpcomplex * vl, mplapackint ldvl, mpcomplex * vr, mplapackint ldvr, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * info );
void Rgegv ( const char *jobvl, const char *jobvr, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * alphar, mpreal * alphai, mpreal * beta, mpreal * vl, mplapackint ldvl, mpreal * vr, mplapackint ldvr, mpreal * work, mplapackint lwork, mplapackint * info );
void Cgegv ( const char *jobvl, const char *jobvr, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * alpha, mpcomplex * beta, mpcomplex * vl, mplapackint ldvl, mpcomplex * vr, mplapackint ldvr, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * info );
void Rggevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * alphar, mpreal * alphai, mpreal * beta, mpreal * vl, mplapackint ldvl, mpreal * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, mpreal * lscale, mpreal * rscale, mpreal * abnrm, mpreal * bbnrm, mpreal * rconde, mpreal * rcondv, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapacklogical * bwork, mplapackint * info );
void Cggevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * alpha, mpcomplex * beta, mpcomplex * vl, mplapackint ldvl, mpcomplex * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, mpreal * lscale, mpreal * rscale, mpreal * abnrm, mpreal * bbnrm, mpreal * rconde, mpreal * rcondv, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint * iwork, mplapacklogical * bwork, mplapackint * info );
void Rggglm ( mplapackint n, mplapackint m, mplapackint p, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * d, mpreal * x, mpreal * y, mpreal * work, mplapackint lwork, mplapackint *info );
void Cggglm ( mplapackint n, mplapackint m, mplapackint p, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * d, mpcomplex * x, mpcomplex * y, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rgghrd ( const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * q, mplapackint ldq, mpreal * z, mplapackint ldz, mplapackint *info );
void Cgghrd ( const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * q, mplapackint ldq, mpcomplex * z, mplapackint ldz, mplapackint *info );
void Rgglse ( mplapackint m, mplapackint n, mplapackint p, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * c, mpreal * d, mpreal * x, mpreal * work, mplapackint lwork, mplapackint *info );
void Cgglse ( mplapackint m, mplapackint n, mplapackint p, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * c, mpcomplex * d, mpcomplex * x, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rggqrf ( mplapackint n, mplapackint m, mplapackint p, mpreal * A, mplapackint lda, mpreal * taua, mpreal * B, mplapackint ldb, mpreal * taub, mpreal * work, mplapackint lwork, mplapackint *info );
void Cggqrf ( mplapackint n, mplapackint m, mplapackint p, mpcomplex * A, mplapackint lda, mpcomplex * taua, mpcomplex * B, mplapackint ldb, mpcomplex * taub, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rggrqf ( mplapackint m, mplapackint p, mplapackint n, mpreal * A, mplapackint lda, mpreal * taua, mpreal * B, mplapackint ldb, mpreal * taub, mpreal * work, mplapackint lwork, mplapackint *info );
void Cggrqf ( mplapackint m, mplapackint p, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * taua, mpcomplex * B, mplapackint ldb, mpcomplex * taub, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rggsvd ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint n, mplapackint p, mplapackint *k, mplapackint *l, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * alpha, mpreal * beta, mpreal * u, mplapackint ldu, mpreal * v, mplapackint ldv, mpreal * q, mplapackint ldq, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cggsvd ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint n, mplapackint p, mplapackint *k, mplapackint *l, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpreal * alpha, mpreal * beta, mpcomplex * u, mplapackint ldu, mpcomplex * v, mplapackint ldv, mpcomplex * q, mplapackint ldq, mpcomplex * work, mpreal * rwork, mplapackint *iwork, mplapackint *info );
void Rggsvp ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal tola, mpreal tolb, mplapackint *k, mplapackint *l, mpreal * u, mplapackint ldu, mpreal * v, mplapackint ldv, mpreal * q, mplapackint ldq, mplapackint *iwork, mpreal * tau, mpreal * work, mplapackint *info );
void Cggsvp ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpreal tola, mpreal tolb, mplapackint *k, mplapackint *l, mpcomplex * u, mplapackint ldu, mpcomplex * v, mplapackint ldv, mpcomplex * q, mplapackint ldq, mplapackint *iwork, mpreal * rwork, mpcomplex * tau, mpcomplex * work, mplapackint *info );
void Rgtcon ( const char *norm, mplapackint n, mpreal * dl, mpreal * d, mpreal * du, mpreal * du2, mplapackint *ipiv, mpreal anorm, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cgtcon ( const char *norm, mplapackint n, mpcomplex * dl, mpcomplex * d, mpcomplex * du, mpcomplex * du2, mplapackint *ipiv, mpreal anorm, mpreal * rcond, mpcomplex * work, mplapackint *info );
void Rgtrfs ( const char *trans, mplapackint n, mplapackint nrhs, mpreal * dl, mpreal * d, mpreal * du, mpreal * dlf, mpreal * df, mpreal * duf, mpreal * du2, mplapackint *ipiv, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cgtrfs ( const char *trans, mplapackint n, mplapackint nrhs, mpcomplex * dl, mpcomplex * d, mpcomplex * du, mpcomplex * dlf, mpcomplex * df, mpcomplex * duf, mpcomplex * du2, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rgtsv ( mplapackint n, mplapackint nrhs, mpreal * dl, mpreal * d, mpreal * du, mpreal * B, mplapackint ldb, mplapackint *info );
void Cgtsv ( mplapackint n, mplapackint nrhs, mpcomplex * dl, mpcomplex * d, mpcomplex * du, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rgtsvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, mpreal * dl, mpreal * d, mpreal * du, mpreal * dlf, mpreal * df, mpreal * duf, mpreal * du2, mplapackint *ipiv, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cgtsvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, mpcomplex * dl, mpcomplex * d, mpcomplex * du, mpcomplex * dlf, mpcomplex * df, mpcomplex * duf, mpcomplex * du2, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rgttrf ( mplapackint n, mpreal * dl, mpreal * d, mpreal * du, mpreal * du2, mplapackint *ipiv, mplapackint *info );
void Cgttrf ( mplapackint n, mpcomplex * dl, mpcomplex * d, mpcomplex * du, mpcomplex * du2, mplapackint *ipiv, mplapackint *info );
void Rgttrs ( const char *trans, mplapackint n, mplapackint nrhs, mpreal * dl, mpreal * d, mpreal * du, mpreal * du2, mplapackint *ipiv, mpreal * B, mplapackint ldb, mplapackint *info );
void Cgttrs ( const char *trans, mplapackint n, mplapackint nrhs, mpcomplex * dl, mpcomplex * d, mpcomplex * du, mpcomplex * du2, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rhgeqz ( const char *job, const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * h, mplapackint ldh, mpreal * t, mplapackint ldt, mpreal * alphar, mpreal * alphai, mpreal * beta, mpreal * q, mplapackint ldq, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *info );
void Chgeqz ( const char *job, const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpcomplex * h, mplapackint ldh, mpcomplex * t, mplapackint ldt, mpcomplex * alpha, mpcomplex * beta, mpcomplex * q, mplapackint ldq, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint *info );
void Rhsein ( const char *side, const char *eigsrc, const char *initv, mplapacklogical *select, mplapackint n, mpreal * h, mplapackint ldh, mpreal * wr, mpreal * wi, mpreal * vl, mplapackint ldvl, mpreal * vr, mplapackint ldvr, mplapackint mm, mplapackint m, mpreal * work, mplapackint *ifaill, mplapackint *ifailr, mplapackint *info );
void Chsein ( const char *side, const char *eigsrc, const char *initv, mplapacklogical * select, mplapackint n, mpcomplex * h, mplapackint ldh, mpcomplex * w, mpcomplex * vl, mplapackint ldvl, mpcomplex * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, mpcomplex * work, mpreal * rwork, mplapackint *ifaill, mplapackint *ifailr, mplapackint *info );
void Rhseqr ( const char *job, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * h, mplapackint ldh, mpreal * wr, mpreal * wi, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *info );
void Chseqr ( const char *job, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpcomplex * h, mplapackint ldh, mpcomplex * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Ropgtr ( const char *uplo, mplapackint n, mpreal * ap, mpreal * tau, mpreal * q, mplapackint ldq, mpreal * work, mplapackint *info );
void Cupgtr ( const char *uplo, mplapackint n, mpcomplex * ap, mpcomplex * tau, mpcomplex * q, mplapackint ldq, mpcomplex * work, mplapackint *info );
void Ropmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, mpreal * ap, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint *info );
void Cupmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, mpcomplex * ap, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint *info );
void Rorgbr ( const char *vect, mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cungbr ( const char *vect, mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rorghr ( mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cunghr ( mplapackint n, mplapackint ilo, mplapackint ihi, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rorglq ( mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cunglq ( mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rorgrq ( mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Cungrq ( mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rormbr ( const char *vect, const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint lwork, mplapackint *info );
void Cunmbr ( const char *vect, const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rormhr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint ilo, mplapackint ihi, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint lwork, mplapackint *info );
void Cunmhr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint ilo, mplapackint ihi, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rormlq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint lwork, mplapackint *info );
void Cunmlq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rormql ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint lwork, mplapackint *info );
void Cunmql ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rormqr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint lwork, mplapackint *info );
void Cunmqr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rormrq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint lwork, mplapackint *info );
void Cunmrq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rormrz ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint lwork, mplapackint *info );
void Cunmrz ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rormtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * c, mplapackint ldc, mpreal * work, mplapackint lwork, mplapackint *info );
void Cunmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * c, mplapackint ldc, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rpbcon ( const char *uplo, mplapackint n, mplapackint kd, mpreal * AB, mplapackint ldab, mpreal anorm, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cpbcon ( const char *uplo, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mpreal anorm, mpreal * rcond, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rpbequ ( const char *uplo, mplapackint n, mplapackint kd, mpreal * ab, mplapackint ldab, mpreal * s, mpreal * scond, mpreal * amax, mplapackint *info );
void Cpbequ ( const char *uplo, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mpreal * s, mpreal * scond, mpreal * amax, mplapackint *info );
void Rpbrfs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpreal * AB, mplapackint ldab, mpreal * afb, mplapackint ldafb, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cpbrfs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpcomplex * AB, mplapackint ldab, mpcomplex * afb, mplapackint ldafb, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rpbstf ( const char *uplo, mplapackint n, mplapackint kd, mpreal * AB, mplapackint ldab, mplapackint *info );
void Cpbstf ( const char *uplo, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mplapackint *info );
void Rpbsv ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpreal * AB, mplapackint ldab, mpreal * B, mplapackint ldb, mplapackint *info );
void Cpbsv ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpcomplex * ab, mplapackint ldab, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rpbsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpreal * AB, mplapackint ldab, mpreal * afb, mplapackint ldafb, char *equed, mpreal * s, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint * iwork, mplapackint * info );
void Cpbsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpcomplex * AB, mplapackint ldab, mpcomplex * afb, mplapackint ldafb, char *equed, mpreal * s, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint * info );
void Rpbtrf ( const char *uplo, mplapackint n, mplapackint kd, mpreal * AB, mplapackint ldab, mplapackint *info );
void Cpbtrf ( const char *uplo, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mplapackint *info );
void Rpbtrs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpreal * ab, mplapackint ldab, mpreal * B, mplapackint ldb, mplapackint *info );
void Cpbtrs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpcomplex * AB, mplapackint ldab, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rpocon ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal anorm, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cpocon ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal anorm, mpreal * rcond, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rpoequ ( mplapackint n, mpreal * A, mplapackint lda, mpreal * s, mpreal * scond, mpreal * amax, mplapackint *info );
void Cpoequ ( mplapackint n, mpcomplex * A, mplapackint lda, mpreal * s, mpreal * scond, mpreal * amax, mplapackint *info );
void Rporfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * af, mplapackint ldaf, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cporfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * af, mplapackint ldaf, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rposv ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mplapackint *info );
void Cposv ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rposvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * af, mplapackint ldaf, char *equed, mpreal * s, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint * iwork, mplapackint * info );
void Cposvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * af, mplapackint ldaf, char *equed, mpreal * s, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint * info );
void Rpotri ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mplapackint *info );
void Cpotri ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *info );
void Rpotrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mplapackint *info );
void Cpotrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rppcon ( const char *uplo, mplapackint n, mpreal * ap, mpreal anorm, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cppcon ( const char *uplo, mplapackint n, mpcomplex * ap, mpreal * anorm, mpreal * rcond, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rppequ ( const char *uplo, mplapackint n, mpreal * ap, mpreal * s, mpreal * scond, mpreal * amax, mplapackint *info );
void Cppequ ( const char *uplo, mplapackint n, mpcomplex * ap, mpreal * s, mpreal * scond, mpreal * amax, mplapackint *info );
void Rpptrf ( const char *uplo, mplapackint n, mpreal * ap, mplapackint *info );
void Cpptrf ( const char *uplo, mplapackint n, mpcomplex * ap, mplapackint *info );
void Rpptri ( const char *uplo, mplapackint n, mpreal * ap, mplapackint *info );
void Cpptri ( const char *uplo, mplapackint n, mpcomplex * ap, mplapackint *info );
void Rpptrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * ap, mpreal * B, mplapackint ldb, mplapackint *info );
void Cpptrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rpprfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * ap, mpreal * afp, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cpprfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mpcomplex * afp, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rppsv ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * ap, mpreal * B, mplapackint ldb, mplapackint *info );
void Cppsv ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rppsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpreal * ap, mpreal * afp, char *equed, mpreal * s, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cppsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mpcomplex * afp, char *equed, mpreal * s, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint * info );
void Rptcon ( mplapackint n, mpreal * d, mpreal * e, mpreal anorm, mpreal * rcond, mpreal * work, mplapackint *info );
void Cptcon ( mplapackint n, mpreal * d, mpcomplex * e, mpreal anorm, mpreal * rcond, mpreal * rwork, mplapackint *info );
void Rpteqr ( const char *compz, mplapackint n, mpreal * d, mpreal * e, mpreal * z, mplapackint ldz, mpreal * work, mplapackint * info );
void Cpteqr ( const char *compz, mplapackint n, mpreal * d, mpreal * e, mpcomplex * z, mplapackint ldz, mpreal * work, mplapackint *info );
void Rptrfs ( mplapackint n, mplapackint nrhs, mpreal * d, mpreal * e, mpreal * df, mpreal * ef, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *info );
void Cptrfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * d, mpcomplex * e, mpreal * df, mpcomplex * ef, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rptsv ( mplapackint n, mplapackint nrhs, mpreal * d, mpreal * e, mpreal * B, mplapackint ldb, mplapackint *info );
void Cptsv ( mplapackint n, mplapackint nrhs, mpreal * d, mpcomplex * e, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rptsvx ( const char *fact, mplapackint n, mplapackint nrhs, mpreal * d, mpreal * e, mpreal * df, mpreal * ef, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *info );
void Cptsvx ( const char *fact, mplapackint n, mplapackint nrhs, mpreal * d, mpcomplex * e, mpreal * df, mpcomplex * ef, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rpttrf ( mplapackint n, mpreal * d, mpreal * e, mplapackint *info );
void Cpttrf ( mplapackint n, mpreal * d, mpcomplex * e, mplapackint *info );
void Rpttrs ( mplapackint n, mplapackint nrhs, mpreal * d, mpreal * e, mpreal * B, mplapackint ldb, mplapackint *info );
void Cpttrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * d, mpcomplex * e, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rsbev ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, mpreal * AB, mplapackint ldab, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *info );
void Chbev ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rsbevd ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, mpreal * AB, mplapackint ldab, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chbevd ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsbevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint kd, mpreal * AB, mplapackint ldab, mpreal * q, mplapackint ldq, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint * m, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chbevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mpcomplex * q, mplapackint ldq, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint * m, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mpreal * rwork, mplapackint * iwork, mplapackint * ifail, mplapackint * info );
void Rsbgst ( const char *vect, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpreal * AB, mplapackint ldab, mpreal * bb, mplapackint ldbb, mpreal * x, mplapackint ldx, mpreal * work, mplapackint *info );
void Chbgst ( const char *vect, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpcomplex * AB, mplapackint ldab, mpcomplex * bb, mplapackint ldbb, mpcomplex * x, mplapackint ldx, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rsbgv ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpreal * AB, mplapackint ldab, mpreal * bb, mplapackint ldbb, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *info );
void Chbgv ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpcomplex * AB, mplapackint ldab, mpcomplex * bb, mplapackint ldbb, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rsbgvd ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpreal * AB, mplapackint ldab, mpreal * BB, mplapackint ldbb, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chbgvd ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpcomplex * AB, mplapackint ldab, mpcomplex * BB, mplapackint ldbb, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsbgvx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpreal * AB, mplapackint ldab, mpreal * BB, mplapackint ldbb, mpreal * q, mplapackint ldq, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint *m, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chbgvx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpcomplex * ab, mplapackint ldab, mpcomplex * bb, mplapackint ldbb, mpcomplex * q, mplapackint ldq, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint *m, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mpreal * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsbtrd ( const char *vect, const char *uplo, mplapackint n, mplapackint kd, mpreal * AB, mplapackint ldab, mpreal * d, mpreal * e, mpreal * q, mplapackint ldq, mpreal * work, mplapackint *info );
void Chbtrd ( const char *vect, const char *uplo, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mpreal * d, mpreal * e, mpcomplex * q, mplapackint ldq, mpcomplex * work, mplapackint *info );
void Rspcon ( const char *uplo, mplapackint n, mpreal * ap, mplapackint *ipiv, mpreal anorm, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cspcon ( const char *uplo, mplapackint n, mpcomplex * ap, mplapackint *ipiv, mpreal anorm, mpreal * rcond, mpcomplex * work, mplapackint *info );
void Chpcon ( const char *uplo, mplapackint n, mpcomplex * ap, mplapackint *ipiv, mpreal anorm, mpreal * rcond, mpcomplex * work, mplapackint *info );
void Rspev ( const char *jobz, const char *uplo, mplapackint n, mpreal * ap, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *info );
void Chpev ( const char *jobz, const char *uplo, mplapackint n, mpcomplex * ap, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rspevd ( const char *jobz, const char *uplo, mplapackint n, mpreal * ap, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chpevd ( const char *jobz, const char *uplo, mplapackint n, mpcomplex * ap, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rspevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpreal * ap, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint *m, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chpevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpcomplex * ap, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint * m, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mpreal * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rspgst ( mplapackint itype, const char *uplo, mplapackint n, mpreal * ap, mpreal * bp, mplapackint *info );
void Chpgst ( mplapackint *itype, const char *uplo, mplapackint n, mpcomplex * ap, mpcomplex * bp, mplapackint *info );
void Rspgv ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpreal * ap, mpreal * bp, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *info );
void Chpgv ( mplapackint *itype, const char *jobz, const char *uplo, mplapackint n, mpcomplex * ap, mpcomplex * bp, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rspgvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpreal * ap, mpreal * bp, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chpgvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpcomplex * ap, mpcomplex * bp, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rspgvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, mpreal * ap, mpreal * bp, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint m, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chpgvx ( mplapackint itype, const char *jobz, char *range, const char *uplo, mplapackint n, mpcomplex * ap, mpcomplex * bp, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint *m, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mpreal * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsprfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * ap, mpreal * afp, mplapackint *ipiv, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Csprfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mpcomplex * afp, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Chprfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mpcomplex * afp, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rspsv ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * ap, mplapackint *ipiv, mpreal * B, mplapackint ldb, mplapackint *info );
void Cspsv ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Chpsv ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rspsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpreal * ap, mpreal * afp, mplapackint *ipiv, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Cspsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mpcomplex * afp, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Chpsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mpcomplex * afp, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rsptrd ( const char *uplo, mplapackint n, mpreal * ap, mpreal * d, mpreal * e, mpreal * tau, mplapackint *info );
void Chptrd ( const char *uplo, mplapackint n, mpcomplex * ap, mpreal * d, mpreal * e, mpcomplex * tau, mplapackint *info );
void Rsptrf ( const char *uplo, mplapackint n, mpreal * ap, mplapackint *ipiv, mplapackint *info );
void Csptrf ( const char *uplo, mplapackint n, mpcomplex * ap, mplapackint *ipiv, mplapackint *info );
void Chptrf ( const char *uplo, mplapackint n, mpcomplex * ap, mplapackint *ipiv, mplapackint *info );
void Rsptri ( const char *uplo, mplapackint n, mpreal * ap, mplapackint *ipiv, mpreal * work, mplapackint *info );
void Csptri ( const char *uplo, mplapackint n, mpcomplex * ap, mplapackint *ipiv, mpcomplex * work, mplapackint *info );
void Chptri ( const char *uplo, mplapackint n, mpcomplex * ap, mplapackint *ipiv, mpcomplex * work, mplapackint *info );
void Rsptrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * ap, mplapackint *ipiv, mpreal * B, mplapackint ldb, mplapackint *info );
void Csptrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Chptrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * ap, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rstebz ( const char *range, const char *order, mplapackint n, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mpreal * d, mpreal * e, mplapackint * m, mplapackint * nsplit, mpreal * w, mplapackint *iblock, mplapackint *isplit, mpreal * work, mplapackint *iwork, mplapackint *info );
void Rstedc ( const char *compz, mplapackint n, mpreal * d, mpreal * e, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Cstedc ( const char *compz, mplapackint n, mpreal * d, mpreal * e, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstegr ( const char *jobz, const char *range, mplapackint n, mpreal * d, mpreal * e, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint * m, mpreal * w, mpreal * z, mplapackint ldz, mplapackint * isuppz, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cstegr ( const char *jobz, const char *range, mplapackint n, mpreal *d, mpreal * e, mpreal * vl, mpreal * vu, mplapackint *il, mplapackint *iu, mpreal * abstol, mplapackint m, mpreal * w, mpcomplex * z, mplapackint ldz, mplapackint *isuppz, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstein ( mplapackint n, mpreal * d, mpreal * e, mplapackint m, mpreal * w, mplapackint *iblock, mplapackint *isplit, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Cstein ( mplapackint n, mpreal * d, mpreal * e, mplapackint m, mpreal * w, mplapackint *iblock, mplapackint *isplit, mpcomplex * z, mplapackint ldz, mpreal * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rstev ( const char *jobz, mplapackint n, mpreal * d, mpreal * e, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *info );
void Rstevd ( const char *jobz, mplapackint n, mpreal * d, mpreal * e, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstevr ( const char *jobz, const char *range, mplapackint n, mpreal * d, mpreal * e, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint * m, mpreal * w, mpreal * z, mplapackint ldz, mplapackint * isuppz, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rstevx ( const char *jobz, const char *range, mplapackint n, mpreal * d, mpreal * e, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint *m, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rstemr ( const char *jobz, const char *range, mplapackint n, mpreal * d, mpreal * e, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mplapackint * m, mpreal * w, mpreal * z, mplapackint ldz, mplapackint nzc, mplapackint * isuppz, mplapacklogical * tryrac, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cstemr ( const char *jobz, const char *range, mplapackint n, mpreal * d, mpreal * e, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mplapackint * m, mpreal * w, mpcomplex * z, mplapackint ldz, mplapackint nzc, mplapackint *isuppz, mplapacklogical * tryrac, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsycon ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mplapackint *ipiv, mpreal anorm, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Csycon ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpreal anorm, mpreal * rcond, mpcomplex * work, mplapackint *info );
void Checon ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpreal anorm, mpreal * rcond, mpcomplex * work, mplapackint *info );
void Rsyevd ( const char *jobz, const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * w, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Cheevd ( const char *jobz, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * w, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsyevr ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint * m, mpreal * w, mpreal * z, mplapackint ldz, mplapackint * isuppz, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cheevr ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint * m, mpreal * w, mpcomplex * z, mplapackint ldz, mplapackint * isuppz, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint lrwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rsyevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint *m, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Cheevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint *m, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsygst ( mplapackint itype, const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mplapackint *info );
void Chegst ( mplapackint itype, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rsygv ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * w, mpreal * work, mplapackint lwork, mplapackint *info );
void Chegv ( mplapackint *itype, const char *jobz, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpreal * w, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint *info );
void Rsygvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * w, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chegvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpreal * w, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsygvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint *m, mpreal * w, mpreal * z, mplapackint ldz, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chegvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpreal vl, mpreal vu, mplapackint il, mplapackint iu, mpreal abstol, mplapackint * m, mpreal * w, mpcomplex * z, mplapackint ldz, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsyrfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * af, mplapackint ldaf, mplapackint *ipiv, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Csyrfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * af, mplapackint ldaf, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Cherfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * af, mplapackint ldaf, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rsysv ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mplapackint *ipiv, mpreal * B, mplapackint ldb, mpreal * work, mplapackint lwork, mplapackint *info );
void Csysv ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Chesv ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rsysvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * af, mplapackint ldaf, mplapackint *ipiv, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint *info );
void Csysvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * af, mplapackint ldaf, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint *info );
void Chesvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * af, mplapackint ldaf, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * rcond, mpreal * ferr, mpreal * berr, mpcomplex * work, mplapackint lwork, mpreal * rwork, mplapackint *info );
void Rsytrf ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mplapackint *ipiv, mpreal * work, mplapackint lwork, mplapackint *info );
void Csytrf ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Chetrf ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rsytri ( const char *uplo, mplapackint n, mpreal * A, mplapackint lda, mplapackint *ipiv, mpreal * work, mplapackint *info );
void Csytri ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * work, mplapackint *info );
void Chetri ( const char *uplo, mplapackint n, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * work, mplapackint *info );
void Rsytrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mplapackint *ipiv, mpreal * B, mplapackint ldb, mplapackint *info );
void Csytrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Chetrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mplapackint *ipiv, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rtbcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint kd, mpreal * AB, mplapackint ldab, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Ctbcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint kd, mpcomplex * AB, mplapackint ldab, mpreal * rcond, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rtbrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, mpreal * AB, mplapackint ldab, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Ctbrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, mpcomplex * AB, mplapackint ldab, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint * info );
void Rtbtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, mpreal * ab, mplapackint ldab, mpreal * B, mplapackint ldb, mplapackint *info );
void Ctbtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, mpcomplex * ab, mplapackint ldab, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rtgevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, mpreal * s, mplapackint lds, mpreal *p, mplapackint ldp, mpreal * vl, mplapackint ldvl, mpreal * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, mpreal * work, mplapackint * info );
void Ctgevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, mpcomplex * s, mplapackint lds, mpcomplex * p, mplapackint ldp, mpcomplex * vl, mplapackint ldvl, mpcomplex * vr, mplapackint ldvr, mplapackint mm, mplapackint * m, mpcomplex * work, mpreal * rwork, mplapackint * info );
void Rtgexc ( mplapacklogical wantq, mplapacklogical wantz, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * q, mplapackint ldq, mpreal * z, mplapackint ldz, mplapackint * ifst, mplapackint * ilst, mpreal * work, mplapackint lwork, mplapackint * info );
void Ctgexc ( mplapacklogical wantq, mplapacklogical wantz, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * q, mplapackint ldq, mpcomplex * z, mplapackint ldz, mplapackint ifst, mplapackint *ilst, mplapackint *info );
void Rtgsen ( mplapackint ijob, mplapacklogical wantq, mplapacklogical wantz, mplapacklogical *select, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * alphar, mpreal * alphai, mpreal * beta, mpreal * q, mplapackint ldq, mpreal * z, mplapackint ldz, mplapackint * m, mpreal * pl, mpreal * pr, mpreal * dif, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Ctgsen ( mplapackint ijob, mplapacklogical wantq, mplapacklogical wantz, mplapacklogical * select, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * alpha, mpcomplex * beta, mpcomplex * q, mplapackint ldq, mpcomplex * z, mplapackint ldz, mplapackint * m, mpreal * pl, mpreal * pr, mpreal * dif, mpcomplex * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rtgsja ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mplapackint k, mplapackint l, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal tola, mpreal tolb, mpreal * alpha, mpreal * beta, mpreal * u, mplapackint ldu, mpreal * v, mplapackint ldv, mpreal * q, mplapackint ldq, mpreal * work, mplapackint ncycle, mplapackint *info );
void Ctgsja ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mplapackint k, mplapackint l, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpreal tola, mpreal tolb, mpreal * alpha, mpreal * beta, mpcomplex * u, mplapackint ldu, mpcomplex * v, mplapackint ldv, mpcomplex * q, mplapackint ldq, mpcomplex * work, mplapackint * ncycle, mplapackint *info );
void Rtgsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * vl, mplapackint ldvl, mpreal * vr, mplapackint ldvr, mpreal * s, mpreal * dif, mplapackint mm, mplapackint * m, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Ctgsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * vl, mplapackint ldvl, mpcomplex * vr, mplapackint ldvr, mpreal * s, mpreal * dif, mplapackint mm, mplapackint * m, mpcomplex * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Rtgsyl ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * c, mplapackint ldc, mpreal * d, mplapackint ldd, mpreal * e, mplapackint lde, mpreal * f, mplapackint ldf, mpreal * scale, mpreal * dif, mpreal * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Ctgsyl ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * c, mplapackint ldc, mpcomplex * d, mplapackint ldd, mpcomplex * e, mplapackint lde, mpcomplex * f, mplapackint ldf, mpreal * scale, mpreal * dif, mpcomplex * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Rtpcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpreal * ap, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Ctpcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpcomplex * ap, mpreal * rcond, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rtprfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpreal * ap, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Ctprfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpcomplex * ap, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rtptri ( const char *uplo, const char *diag, mplapackint n, mpreal * ap, mplapackint *info );
void Ctptri ( const char *uplo, const char *diag, mplapackint n, mpcomplex * ap, mplapackint *info );
void Rtptrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpreal * ap, mpreal * B, mplapackint ldb, mplapackint *info );
void Ctptrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpcomplex * ap, mpcomplex * B, mplapackint ldb, mplapackint *info );
void Rtrcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpreal * A, mplapackint lda, mpreal * rcond, mpreal * work, mplapackint *iwork, mplapackint *info );
void Ctrcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpcomplex * A, mplapackint lda, mpreal * rcond, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rtrevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, mpreal * t, mplapackint ldt, mpreal * vl, mplapackint ldvl, mpreal * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, mpreal * work, mplapackint *info );
void Ctrevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, mpcomplex * t, mplapackint ldt, mpcomplex * vl, mplapackint ldvl, mpcomplex * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rtrexc ( const char *compq, mplapackint n, mpreal * t, mplapackint ldt, mpreal * q, mplapackint ldq, mplapackint *ifst, mplapackint *ilst, mpreal * work, mplapackint *info );
void Ctrexc ( const char *compq, mplapackint n, mpcomplex * t, mplapackint ldt, mpcomplex * q, mplapackint ldq, mplapackint ifst, mplapackint ilst, mplapackint *info );
void Rtrrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpreal * work, mplapackint *iwork, mplapackint *info );
void Ctrrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * x, mplapackint ldx, mpreal * ferr, mpreal * berr, mpcomplex * work, mpreal * rwork, mplapackint *info );
void Rtrsen ( const char *job, const char *compq, mplapacklogical * select, mplapackint n, mpreal * t, mplapackint ldt, mpreal * q, mplapackint ldq, mpreal * wr, mpreal * wi, mplapackint m, mpreal * s, mpreal * sep, mpreal * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Ctrsen ( const char *job, const char *compq, mplapacklogical * select, mplapackint n, mpcomplex * t, mplapackint ldt, mpcomplex * q, mplapackint ldq, mpcomplex * w, mplapackint m, mpreal * s, mpreal * sep, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rtrsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, mpreal * t, mplapackint ldt, mpreal * vl, mplapackint ldvl, mpreal * vr, mplapackint ldvr, mpreal * s, mpreal * sep, mplapackint mm, mplapackint *m, mpreal * work, mplapackint ldwork, mplapackint *iwork, mplapackint *info );
void Ctrsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, mpcomplex * t, mplapackint ldt, mpcomplex * vl, mplapackint ldvl, mpcomplex * vr, mplapackint ldvr, mpreal * s, mpreal * sep, mplapackint mm, mplapackint *m, mpcomplex * work, mplapackint ldwork, mpreal * rwork, mplapackint *info );
void Rtrsyl ( const char *trana, const char *tranb, mplapackint isgn, mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * B, mplapackint ldb, mpreal * c, mplapackint ldc, mpreal * scale, mplapackint *info );
void Ctrsyl ( const char *trana, const char *tranb, mplapackint isgn, mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * B, mplapackint ldb, mpcomplex * c, mplapackint ldc, mpreal * scale, mplapackint *info );
void Rtzrzf ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mpreal * work, mplapackint lwork, mplapackint *info );
void Ctzrzf ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mpcomplex * work, mplapackint lwork, mplapackint *info );
void Rtzrqf ( mplapackint m, mplapackint n, mpreal * A, mplapackint lda, mpreal * tau, mplapackint *info );
void Ctzrqf ( mplapackint m, mplapackint n, mpcomplex * A, mplapackint lda, mpcomplex * tau, mplapackint *info );

#endif
