/*
 * Copyright (c) 2008-2021
 *	Nakata, Maho
 * 	All rights reserved.
 *
 * $Id: mplapack_dd.h,v 1.31 2010/08/07 03:15:46 nakatamaho Exp $
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _MPLAPACK_DD_H_
#define _MPLAPACK_DD_H_

#include "mplapack_config.h"
#include "qd/dd_real.h"
#include "dd_complex.h"

bool Risnan(dd_real const din);
bool Rlaisnan(dd_real const din1, dd_real const din2);
dd_complex Cladiv(dd_complex const x, dd_complex const y);
dd_real Clangt(const char *norm, mplapackint const n, dd_complex *dl, dd_complex *d, dd_complex *du);
dd_real Clanhe(const char *norm, const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_real *work);
dd_real Clanht(const char *norm, mplapackint const n, dd_real *d, dd_complex *e);
dd_real Clansy(const char *norm, const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_real *work);
dd_real RCsum1(mplapackint const n, dd_complex *cx, mplapackint const incx);
dd_real Rla_gerpvgrw(mplapackint const n, mplapackint const ncols, dd_real *a, mplapackint const lda, dd_real *af, mplapackint const ldaf);
dd_real Rladiv2(dd_real const &a, dd_real const &b, dd_real const &c, dd_real const &d, dd_real const &r, dd_real const &t);
dd_real Rladiv2(dd_real const &a, dd_real const &b, dd_real const &c, dd_real const &d, dd_real const &r, dd_real const &t);
dd_real Rlamch_dd(const char *cmach);
dd_real Rlangt(const char *norm, mplapackint const n, dd_real *dl, dd_real *d, dd_real *du);
dd_real Rlanst(const char *norm, mplapackint const n, dd_real *d, dd_real *e);
dd_real Rlansy(const char *norm, const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *work);
dd_real Rlapy2(dd_real const x, dd_real const y);
dd_real Rlapy3(dd_real const x, dd_real const y, dd_real const z);
dd_real abs1(dd_complex ff);
dd_real abs1(dd_complex ff);
dd_real abs1(dd_complex ff);
dd_real abssq(dd_complex ff);
dd_real abssq(dd_complex ff);
mplapackint Rlaneg(mplapackint const n, dd_real *d, dd_real *lld, dd_real const sigma, dd_real const, mplapackint const r);
mplapackint iCmax1(mplapackint const n, dd_complex *zx, mplapackint const incx);
mplapackint iMladlc(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda);
mplapackint iMladlr(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda);
mplapackint iMlaenv_dd(mplapackint ispec, const char *name, const char *opts, mplapackint n1, mplapackint n2, mplapackint n3, mplapackint n4);
mplapackint iMlazlc(mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda);
mplapackint iMlazlr(mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda);
void CRrscl(mplapackint const n, dd_real const sa, dd_complex *sx, mplapackint const incx);
void Cgebak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, dd_real *scale, mplapackint const m, dd_complex *v, mplapackint const ldv, mplapackint &info);
void Cgelq(mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *t, mplapackint const tsize, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Cgelqt(mplapackint const m, mplapackint const n, mplapackint const mb, dd_complex *a, mplapackint const lda, dd_complex *t, mplapackint const ldt, dd_complex *work, mplapackint &info);
void Cgemlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const mb, dd_complex *v, mplapackint const ldv, dd_complex *t, mplapackint const ldt, dd_complex *c, mplapackint const ldc, dd_complex *work, mplapackint &info);
void Cgemqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const nb, dd_complex *v, mplapackint const ldv, dd_complex *t, mplapackint const ldt, dd_complex *c, mplapackint const ldc, dd_complex *work, mplapackint &info);
void Cgeqr(mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *t, mplapackint const tsize, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Cgeqrt(mplapackint const m, mplapackint const n, mplapackint const nb, dd_complex *a, mplapackint const lda, dd_complex *t, mplapackint const ldt, dd_complex *work, mplapackint &info);
void Cgesv(mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cgetc2(mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint &info);
void Cgetf2(mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Cgetrf(mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Cgetrf2(mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Cgetri(mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Cgetrs(const char *trans, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cggbak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, dd_real *lscale, dd_real *rscale, mplapackint const m, dd_complex *v, mplapackint const ldv, mplapackint &info);
void Cgtts2(mplapackint const itrans, mplapackint const n, mplapackint const nrhs, dd_complex *dl, dd_complex *d, dd_complex *du, dd_complex *du2, mplapackint *ipiv, dd_complex *b, mplapackint const ldb);
void Cheev(const char *jobz, const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_real *w, dd_complex *work, mplapackint const lwork, dd_real *rwork, mplapackint &info);
void Chegst(mplapackint const itype, const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Chesv(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Chesv_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Chetd2(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_real *d, dd_real *e, dd_complex *tau, mplapackint &info);
void Chetrd(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_real *d, dd_real *e, dd_complex *tau, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Chetri(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *work, mplapackint &info);
void Chetri2(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Chetri_3(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *e, mplapackint *ipiv, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Chetri_rook(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *work, mplapackint &info);
void Chetrs(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Chetrs2(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, dd_complex *work, mplapackint &info);
void Chetrs_3(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, dd_complex *e, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Chetrs_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Chetrs_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Chfrk(const char *transr, const char *uplo, const char *trans, mplapackint const n, mplapackint const k, dd_real const alpha, dd_complex *a, mplapackint const lda, dd_real const beta, dd_complex *c);
void Chpsv(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *ap, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cla_wwaddw(mplapackint const n, dd_complex *x, dd_complex *y, dd_complex *w);
void Clacgv(mplapackint const n, dd_complex *x, mplapackint const incx);
void Clacp2(const char *uplo, mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_complex *b, mplapackint const ldb);
void Clacpy(const char *uplo, mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb);
void Clacrm(mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda, dd_real *b, mplapackint const ldb, dd_complex *c, mplapackint const ldc, dd_real *rwork);
void Clacrt(mplapackint const n, dd_complex *cx, mplapackint const incx, dd_complex *cy, mplapackint const incy, dd_complex const c, dd_complex const s);
void Claesy(dd_complex const a, dd_complex const b, dd_complex const c, dd_complex &rt1, dd_complex &rt2, dd_complex &evscal, dd_complex &cs1, dd_complex &sn1);
void Claev2(dd_complex const a, dd_complex const b, dd_complex const c, dd_real &rt1, dd_real &rt2, dd_real &cs1, dd_complex &sn1);
void Clagtm(const char *trans, mplapackint const n, mplapackint const nrhs, dd_real const alpha, dd_complex *dl, dd_complex *d, dd_complex *du, dd_complex *x, mplapackint const ldx, dd_real const beta, dd_complex *b, mplapackint const ldb);
void Clahef(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *w, mplapackint const ldw, mplapackint &info);
void Clapmr(bool const forwrd, mplapackint const m, mplapackint const n, dd_complex *x, mplapackint const ldx, mplapackint *k);
void Clapmt(bool const forwrd, mplapackint const m, mplapackint const n, dd_complex *x, mplapackint const ldx, mplapackint *k);
void Claqgb(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, dd_complex *ab, mplapackint const ldab, dd_real *r, dd_real *c, dd_real const rowcnd, dd_real const colcnd, dd_real const amax, char *equed);
void Claqge(mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda, dd_real *r, dd_real *c, dd_real const rowcnd, dd_real const colcnd, dd_real const amax, char *equed);
void Claqhb(const char *uplo, mplapackint const n, mplapackint const kd, dd_complex *ab, mplapackint const ldab, dd_real *s, dd_real const scond, dd_real const amax, char *equed);
void Claqhe(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_real *s, dd_real const scond, dd_real const amax, char *equed);
void Claqhp(const char *uplo, mplapackint const n, dd_complex *ap, dd_real *s, dd_real const scond, dd_real const amax, char *equed);
void Claqsb(const char *uplo, mplapackint const n, mplapackint const kd, dd_complex *ab, mplapackint const ldab, dd_real *s, dd_real const scond, dd_real const amax, char *equed);
void Claqsp(const char *uplo, mplapackint const n, dd_complex *ap, dd_real *s, dd_real const scond, dd_real const amax, char *equed);
void Claqsy(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_real *s, dd_real const scond, dd_real const amax, char *equed);
void Clar2v(mplapackint const n, dd_complex *x, dd_complex *y, dd_complex *z, mplapackint const incx, dd_real *c, dd_complex *s, mplapackint const incc);
void Clarf(const char *side, mplapackint const m, mplapackint const n, dd_complex *v, mplapackint const incv, dd_complex const tau, dd_complex *c, mplapackint const ldc, dd_complex *work);
void Clarfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *v, mplapackint const ldv, dd_complex *t, mplapackint const ldt, dd_complex *c, mplapackint const ldc, dd_complex *work, mplapackint const ldwork);
void Clarfb_gett(const char *ident, mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *t, mplapackint const ldt, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, dd_complex *work, mplapackint const ldwork);
void Clarfg(mplapackint const n, dd_complex &alpha, dd_complex *x, mplapackint const incx, dd_complex &tau);
void Clarft(const char *direct, const char *storev, mplapackint const n, mplapackint const k, dd_complex *v, mplapackint const ldv, dd_complex *tau, dd_complex *t, mplapackint const ldt);
void Clarfx(const char *side, mplapackint const m, mplapackint const n, dd_complex *v, dd_complex const tau, dd_complex *c, mplapackint const ldc, dd_complex *work);
void Clarfy(const char *uplo, mplapackint const n, dd_complex *v, mplapackint const incv, dd_complex const tau, dd_complex *c, mplapackint const ldc, dd_complex *work);
void Clarscl2(mplapackint const m, mplapackint const n, dd_real *d, dd_complex *x, mplapackint const ldx);
void Clartg(dd_complex const f, dd_complex const g, dd_real &cs, dd_complex &sn, dd_complex &r);
void Clartv(mplapackint const n, dd_complex *x, mplapackint const incx, dd_complex *y, mplapackint const incy, dd_real *c, dd_complex *s, mplapackint const incc);
void Clarz(const char *side, mplapackint const m, mplapackint const n, mplapackint const l, dd_complex *v, mplapackint const incv, dd_complex const tau, dd_complex *c, mplapackint const ldc, dd_complex *work);
void Clarzt(const char *direct, const char *storev, mplapackint const n, mplapackint const k, dd_complex *v, mplapackint const ldv, dd_complex *tau, dd_complex *t, mplapackint const ldt);
void Clascl(const char *type, mplapackint const kl, mplapackint const ku, dd_real const cfrom, dd_real const cto, mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint &info);
void Clascl2(mplapackint const m, mplapackint const n, dd_real *d, dd_complex *x, mplapackint const ldx);
void Claset(const char *uplo, mplapackint const m, mplapackint const n, dd_complex const alpha, dd_complex const beta, dd_complex *a, mplapackint const lda);
void Clasr(const char *side, const char *pivot, const char *direct, mplapackint const m, mplapackint const n, dd_real *c, dd_real *s, dd_complex *a, mplapackint const lda);
void Classq(mplapackint const n, dd_complex *x, mplapackint const incx, dd_real &scale, dd_real &sumsq);
void Claswlq(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, dd_complex *a, mplapackint const lda, dd_complex *t, mplapackint const ldt, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Claswp(mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint const k1, mplapackint const k2, mplapackint *ipiv, mplapackint const incx);
void Clasyf(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *w, mplapackint const ldw, mplapackint &info);
void Clatrd(const char *uplo, mplapackint const n, mplapackint const nb, dd_complex *a, mplapackint const lda, dd_real *e, dd_complex *tau, dd_complex *w, mplapackint const ldw);
void Clatsqr(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, dd_complex *a, mplapackint const lda, dd_complex *t, mplapackint const ldt, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Claunhr_col_getrfnp(mplapackint const m, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *d, mplapackint &info);
void Clauum(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint &info);
void Cpbequ(const char *uplo, mplapackint const n, mplapackint const kd, dd_complex *ab, mplapackint const ldab, dd_real *s, dd_real &scond, dd_real &amax, mplapackint &info);
void Cpbsv(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, dd_complex *ab, mplapackint const ldab, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cpbtrs(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, dd_complex *ab, mplapackint const ldab, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cpoequ(mplapackint const n, dd_complex *a, mplapackint const lda, dd_real *s, dd_real &scond, dd_real &amax, mplapackint &info);
void Cposv(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cpotf2(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint &info);
void Cpotrf(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint &info);
void Cpotrf2(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint &info);
void Cpotri(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint &info);
void Cpotrs(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cppequ(const char *uplo, mplapackint const n, dd_complex *ap, dd_real *s, dd_real &scond, dd_real &amax, mplapackint &info);
void Cppsv(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *ap, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cpptrs(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *ap, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cptcon(mplapackint const n, dd_real *d, dd_complex *e, dd_real const anorm, dd_real &rcond, dd_real *rwork, mplapackint &info);
void Cptsv(mplapackint const n, mplapackint const nrhs, dd_real *d, dd_complex *e, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cpttrf(mplapackint const n, dd_real *d, dd_complex *e, mplapackint &info);
void Cpttrs(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *d, dd_complex *e, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Cptts2(mplapackint const iuplo, mplapackint const n, mplapackint const nrhs, dd_real *d, dd_complex *e, dd_complex *b, mplapackint const ldb);
void Crot(mplapackint const n, dd_complex *cx, mplapackint const incx, dd_complex *cy, mplapackint const incy, dd_real const c, dd_complex const s);
void Cspmv(const char *uplo, mplapackint const n, dd_complex const alpha, dd_complex *ap, dd_complex *x, mplapackint const incx, dd_complex const beta, dd_complex *y, mplapackint const incy);
void Cspr(const char *uplo, mplapackint const n, dd_complex const alpha, dd_complex *x, mplapackint const incx, dd_complex *ap);
void Cspsv(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *ap, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Csteqr(const char *compz, mplapackint const n, dd_real *d, dd_real *e, dd_complex *z, mplapackint const ldz, dd_real *work, mplapackint &info);
void Csyconv(const char *uplo, const char *way, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *e, mplapackint &info);
void Csyconvf(const char *uplo, const char *way, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *e, mplapackint *ipiv, mplapackint &info);
void Csyconvf_rook(const char *uplo, const char *way, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *e, mplapackint *ipiv, mplapackint &info);
void Csymv(const char *uplo, mplapackint const n, dd_complex const alpha, dd_complex *a, mplapackint const lda, dd_complex *x, mplapackint const incx, dd_complex const beta, dd_complex *y, mplapackint const incy);
void Csyr(const char *uplo, mplapackint const n, dd_complex const alpha, dd_complex *x, mplapackint const incx, dd_complex *a, mplapackint const lda);
void Csytri2(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Csytri_3(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *e, mplapackint *ipiv, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Csytrs(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Csytrs2(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, dd_complex *work, mplapackint &info);
void Csytrs_3(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, dd_complex *e, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Csytrs_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Csytrs_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, mplapackint *ipiv, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Ctbtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const kd, mplapackint const nrhs, dd_complex *ab, mplapackint const ldab, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Ctgexc(bool const wantq, bool const wantz, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, dd_complex *q, mplapackint const ldq, dd_complex *z, mplapackint const ldz, mplapackint const ifst, mplapackint &ilst, mplapackint &info);
void Ctplqt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const mb, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, dd_complex *t, mplapackint const ldt, dd_complex *work, mplapackint &info);
void Ctpmlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const mb, dd_complex *v, mplapackint const ldv, dd_complex *t, mplapackint const ldt, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, dd_complex *work, mplapackint &info);
void Ctpmqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const nb, dd_complex *v, mplapackint const ldv, dd_complex *t, mplapackint const ldt, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, dd_complex *work, mplapackint &info);
void Ctpqrt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const nb, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, dd_complex *t, mplapackint const ldt, dd_complex *work, mplapackint &info);
void Ctprfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, dd_complex *v, mplapackint const ldv, dd_complex *t, mplapackint const ldt, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, dd_complex *work, mplapackint const ldwork);
void Ctptrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, dd_complex *ap, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Ctpttr(const char *uplo, mplapackint const n, dd_complex *ap, dd_complex *a, mplapackint const lda, mplapackint &info);
void Ctrti2(const char *uplo, const char *diag, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint &info);
void Ctrtri(const char *uplo, const char *diag, mplapackint const n, dd_complex *a, mplapackint const lda, mplapackint &info);
void Ctrtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, dd_complex *a, mplapackint const lda, dd_complex *b, mplapackint const ldb, mplapackint &info);
void Ctrttp(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *ap, mplapackint &info);
void Cunbdb5(mplapackint const m1, mplapackint const m2, mplapackint const n, dd_complex *x1, mplapackint const incx1, dd_complex *x2, mplapackint const incx2, dd_complex *q1, mplapackint const ldq1, dd_complex *q2, mplapackint const ldq2, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Cunbdb6(mplapackint const m1, mplapackint const m2, mplapackint const n, dd_complex *x1, mplapackint const incx1, dd_complex *x2, mplapackint const incx2, dd_complex *q1, mplapackint const ldq1, dd_complex *q2, mplapackint const ldq2, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Cung2l(mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *work, mplapackint &info);
void Cung2r(mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *work, mplapackint &info);
void Cunghr(mplapackint const n, mplapackint const ilo, mplapackint const ihi, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Cungl2(mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *work, mplapackint &info);
void Cungql(mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Cungqr(mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Cungr2(mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *work, mplapackint &info);
void Cungtr(const char *uplo, mplapackint const n, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Cungtsqr(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, dd_complex *a, mplapackint const lda, dd_complex *t, mplapackint const ldt, dd_complex *work, mplapackint const lwork, mplapackint &info);
void Cunhr_col(mplapackint const m, mplapackint const n, mplapackint const nb, dd_complex *a, mplapackint const lda, dd_complex *t, mplapackint const ldt, dd_complex *d, mplapackint &info);
void Cunm2l(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *c, mplapackint const ldc, dd_complex *work, mplapackint &info);
void Cunm2r(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *c, mplapackint const ldc, dd_complex *work, mplapackint &info);
void Cunml2(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *c, mplapackint const ldc, dd_complex *work, mplapackint &info);
void Cunmr2(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *c, mplapackint const ldc, dd_complex *work, mplapackint &info);
void Cunmr3(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, dd_complex *a, mplapackint const lda, dd_complex *tau, dd_complex *c, mplapackint const ldc, dd_complex *work, mplapackint &info);
void Rbdsqr(const char *uplo, mplapackint const n, mplapackint const ncvt, mplapackint const nru, mplapackint const ncc, dd_real *d, dd_real *e, dd_real *vt, mplapackint const ldvt, dd_real *u, mplapackint const ldu, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint &info);
void Rcombssq(dd_real *v1, dd_real *v2);
void Rgebak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, dd_real *scale, mplapackint const m, dd_real *v, mplapackint const ldv, mplapackint &info);
void Rgebd2(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *d, dd_real *e, dd_real *tauq, dd_real *taup, dd_real *work, mplapackint &info);
void Rgebrd(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *d, dd_real *e, dd_real *tauq, dd_real *taup, dd_real *work, mplapackint const lwork, int &info);
void Rgelq(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *t, mplapackint const tsize, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rgelq2(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint &info);
void Rgelqf(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rgelqt(mplapackint const m, mplapackint const n, mplapackint const mb, dd_real *a, mplapackint const lda, dd_real *t, mplapackint const ldt, dd_real *work, mplapackint &info);
void Rgemlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const mb, dd_real *v, mplapackint const ldv, dd_real *t, mplapackint const ldt, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint &info);
void Rgemqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const nb, dd_real *v, mplapackint const ldv, dd_real *t, mplapackint const ldt, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint &info);
void Rgeqr(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *t, mplapackint const tsize, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rgeqr2(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint &info);
void Rgeqrf(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rgeqrt(mplapackint const m, mplapackint const n, mplapackint const nb, dd_real *a, mplapackint const lda, dd_real *t, mplapackint const ldt, dd_real *work, mplapackint &info);
void Rgesv(mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rgesvd(const char *jobu, const char *jobvt, mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *s, dd_real *u, mplapackint const ldu, dd_real *vt, mplapackint const ldvt, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rgetc2(mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint &info);
void Rgetf2(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rgetrf(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rgetrf2(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rgetri(mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rgetrs(const char *trans, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rggbak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, dd_real *lscale, dd_real *rscale, mplapackint const m, dd_real *v, mplapackint const ldv, mplapackint &info);
void Rgtsv(mplapackint const n, mplapackint const nrhs, dd_real *dl, dd_real *d, dd_real *du, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rgttrf(mplapackint const n, dd_real *dl, dd_real *d, dd_real *du, dd_real *du2, mplapackint *ipiv, mplapackint &info);
void Rgtts2(mplapackint const itrans, mplapackint const n, mplapackint const nrhs, dd_real *dl, dd_real *d, dd_real *du, dd_real *du2, mplapackint *ipiv, dd_real *b, mplapackint const ldb);
void Rla_wwaddw(mplapackint const n, dd_real *x, dd_real *y, dd_real *w);
void Rlabad(dd_real &small, dd_real &large);
void Rlabrd(mplapackint const m, mplapackint const n, mplapackint const nb, dd_real *a, mplapackint const lda, dd_real *d, dd_real *e, dd_real *tauq, dd_real *taup, dd_real *x, mplapackint const ldx, dd_real *y, mplapackint const ldy);
void Rlacpy(const char *uplo, mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb);
void Rladiv(dd_real const &a, dd_real const &b, dd_real const &c, dd_real const &d, dd_real &p, dd_real &q);
void Rladiv(dd_real const &a, dd_real const &b, dd_real const &c, dd_real const &d, dd_real &p, dd_real &q);
void Rladiv1(dd_real &a, dd_real const &b, dd_real const &c, dd_real const &d, dd_real &p, dd_real &q);
void Rladiv1(dd_real &a, dd_real const &b, dd_real const &c, dd_real const &d, dd_real &p, dd_real &q);
void Rlae2(dd_real const a, dd_real const b, dd_real const c, dd_real &rt1, dd_real &rt2);
void Rlaed5(mplapackint const i, dd_real *d, dd_real *z, dd_real *delta, dd_real const rho, dd_real &dlam);
void Rlaev2(dd_real const a, dd_real const b, dd_real const c, dd_real &rt1, dd_real &rt2, dd_real &cs1, dd_real &sn1);
void Rlagtf(mplapackint const n, dd_real *a, dd_real const lambda, dd_real *b, dd_real *c, dd_real const tol, dd_real *d, mplapackint *in, mplapackint &info);
void Rlagtm(const char *trans, mplapackint const n, mplapackint const nrhs, dd_real const alpha, dd_real *dl, dd_real *d, dd_real *du, dd_real *x, mplapackint const ldx, dd_real const beta, dd_real *b, mplapackint const ldb);
void Rlaic1(mplapackint const job, mplapackint const j, dd_real *x, dd_real const sest, dd_real *w, dd_real const gamma, dd_real &sestpr, dd_real &s, dd_real &c);
void Rlamrg(mplapackint const n1, mplapackint const n2, dd_real *a, mplapackint const dtrd1, mplapackint const dtrd2, mplapackint *index);
void Rlanv2(dd_real &a, dd_real &b, dd_real &c, dd_real &d, dd_real &rt1r, dd_real &rt1i, dd_real &rt2r, dd_real &rt2i, dd_real &cs, dd_real &sn);
void Rlaorhr_col_getrfnp(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *d, mplapackint &info);
void Rlaorhr_col_getrfnp2(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *d, mplapackint &info);
void Rlapmr(bool const forwrd, mplapackint const m, mplapackint const n, dd_real *x, mplapackint const ldx, mplapackint *k);
void Rlapmt(bool const forwrd, mplapackint const m, mplapackint const n, dd_real *x, mplapackint const ldx, mplapackint *k);
void Rlaqgb(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, dd_real *ab, mplapackint const ldab, dd_real *r, dd_real *c, dd_real const rowcnd, dd_real const colcnd, dd_real const amax, char *equed);
void Rlaqge(mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *r, dd_real *c, dd_real const rowcnd, dd_real const colcnd, dd_real const amax, char *equed);
void Rlaqr1(mplapackint const n, dd_real *h, mplapackint const ldh, dd_real const sr1, dd_real const si1, dd_real const sr2, dd_real const si2, dd_real *v);
void Rlaqsb(const char *uplo, mplapackint const n, mplapackint const kd, dd_real *ab, mplapackint const ldab, dd_real *s, dd_real const scond, dd_real const amax, char *equed);
void Rlaqsp(const char *uplo, mplapackint const n, dd_real *ap, dd_real *s, dd_real const scond, dd_real const amax, char *equed);
void Rlaqsy(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *s, dd_real const scond, dd_real const amax, char *equed);
void Rlar1v(mplapackint const n, mplapackint const b1, mplapackint const bn, dd_real const lambda, dd_real *d, dd_real *l, dd_real *ld, dd_real *lld, dd_real const pivmin, dd_real const gaptol, dd_real *z, bool const wantnc, mplapackint &negcnt, dd_real &ztz, dd_real &mingma, mplapackint &r, mplapackint *isuppz, dd_real &nrminv, dd_real &resid, dd_real &rqcorr, dd_real *work);
void Rlar2v(mplapackint const n, dd_real *x, dd_real *y, dd_real *z, mplapackint const incx, dd_real *c, dd_real *s, mplapackint const incc);
void Rlarf(const char *side, mplapackint const m, mplapackint const n, dd_real *v, mplapackint const incv, dd_real const tau, dd_real *c, mplapackint const ldc, dd_real *work);
void Rlarfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, dd_real *v, mplapackint const ldv, dd_real *t, mplapackint const ldt, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint const ldwork);
void Rlarfb_gett(const char *ident, mplapackint const m, mplapackint const n, mplapackint const k, dd_real *t, mplapackint const ldt, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint const ldwork);
void Rlarfg(mplapackint const n, dd_real &alpha, dd_real *x, mplapackint const incx, dd_real &tau);
void Rlarfgp(mplapackint const n, dd_real &alpha, dd_real *x, mplapackint const incx, dd_real &tau);
void Rlarft(const char *direct, const char *storev, mplapackint const n, mplapackint const k, dd_real *v, mplapackint const ldv, dd_real *tau, dd_real *t, mplapackint const ldt);
void Rlarfx(const char *side, mplapackint const m, mplapackint const n, dd_real *v, dd_real const tau, dd_real *c, mplapackint const ldc, dd_real *work);
void Rlarfy(const char *uplo, mplapackint const n, dd_real *v, mplapackint const incv, dd_real const tau, dd_real *c, mplapackint const ldc, dd_real *work);
void Rlargv(mplapackint const n, dd_real *x, mplapackint const incx, dd_real *y, mplapackint const incy, dd_real *c, mplapackint const incc);
void Rlarra(mplapackint const n, dd_real *d, dd_real *e, dd_real *e2, dd_real const spltol, dd_real const tnrm, mplapackint &nsplit, mplapackint *isplit, mplapackint &info);
void Rlarrc(const char *jobt, mplapackint const n, dd_real const vl, dd_real const vu, dd_real *d, dd_real *e, dd_real const, mplapackint &eigcnt, mplapackint &lcnt, mplapackint &rcnt, mplapackint &info);
void Rlarrj(mplapackint const n, dd_real *d, dd_real *e2, mplapackint const ifirst, mplapackint const ilast, dd_real const rtol, mplapackint const offset, dd_real *w, dd_real *werr, dd_real *work, mplapackint *iwork, dd_real const pivmin, dd_real const spdiam, mplapackint &info);
void Rlarrr(mplapackint const n, dd_real *d, dd_real *e, mplapackint &info);
void Rlarscl2(mplapackint const m, mplapackint const n, dd_real *d, dd_real *x, mplapackint const ldx);
void Rlartg(dd_real const f, dd_real const g, dd_real &cs, dd_real &sn, dd_real &r);
void Rlartgp(dd_real const f, dd_real const g, dd_real &cs, dd_real &sn, dd_real &r);
void Rlartgs(dd_real const x, dd_real const y, dd_real const sigma, dd_real cs, dd_real sn);
void Rlartv(mplapackint const n, dd_real *x, mplapackint const incx, dd_real *y, mplapackint const incy, dd_real *c, dd_real *s, mplapackint const incc);
void Rlarz(const char *side, mplapackint const m, mplapackint const n, mplapackint const l, dd_real *v, mplapackint const incv, dd_real const tau, dd_real *c, mplapackint const ldc, dd_real *work);
void Rlarzt(const char *direct, const char *storev, mplapackint const n, mplapackint const k, dd_real *v, mplapackint const ldv, dd_real *tau, dd_real *t, mplapackint const ldt);
void Rlas2(dd_real const f, dd_real const g, dd_real const h, dd_real &ssmin, dd_real &ssmax);
void Rlascl(const char *type, mplapackint const kl, mplapackint const ku, dd_real const cfrom, dd_real const cto, mplapackint const m, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint &info);
void Rlascl2(mplapackint const m, mplapackint const n, dd_real *d, dd_real *x, mplapackint const ldx);
void Rlasd5(mplapackint const i, dd_real *d, dd_real *z, dd_real *delta, dd_real const rho, dd_real &dsigma, dd_real *work);
void Rlaset(const char *uplo, mplapackint const m, mplapackint const n, dd_real const alpha, dd_real const beta, dd_real *a, mplapackint const lda);
void Rlasq1(mplapackint const n, dd_real *d, dd_real *e, dd_real *work, mplapackint &info);
void Rlasq2(mplapackint const n, dd_real *z, mplapackint &info);
void Rlasq3(mplapackint const i0, mplapackint &n0, dd_real *z, mplapackint &pp, dd_real &dmin, dd_real &sigma, dd_real &desig, dd_real &qmax, mplapackint &nfail, mplapackint &iter, mplapackint &ndiv, bool const ieee, mplapackint &ttype, dd_real const dmin1, dd_real &dmin2, dd_real const dn, dd_real const dn1, dd_real const dn2, dd_real const g, dd_real &tau);
void Rlasq4(mplapackint const i0, mplapackint const n0, dd_real *z, mplapackint const pp, mplapackint const n0in, dd_real const dmin, dd_real const dmin1, dd_real const dmin2, dd_real const dn, dd_real const dn1, dd_real const dn2, dd_real &tau, mplapackint &ttype, dd_real &g);
void Rlasq6(mplapackint const i0, mplapackint const n0, dd_real *z, mplapackint const pp, dd_real &dmin, dd_real &dmin1, dd_real &dmin2, dd_real &dn, dd_real &dnm1, dd_real &dnm2);
void Rlasr(const char *side, const char *pivot, const char *direct, mplapackint const m, mplapackint const n, dd_real *c, dd_real *s, dd_real *a, mplapackint const lda);
void Rlasrt(const char *id, mplapackint const n, dd_real *d, mplapackint &info);
void Rlassq(mplapackint const n, dd_real *x, mplapackint const incx, dd_real &scale, dd_real &sumsq);
void Rlasv2(dd_real const f, dd_real const g, dd_real const h, dd_real &ssmin, dd_real &ssmax, dd_real &snr, dd_real &csr, dd_real &snl, dd_real &csl);
void Rlaswlq(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, dd_real *a, mplapackint const lda, dd_real *t, mplapackint const ldt, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rlaswp(mplapackint const n, dd_real *a, mplapackint const lda, mplapackint const k1, mplapackint const k2, mplapackint *ipiv, mplapackint const incx);
void Rlasyf(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *w, mplapackint const ldw, mplapackint &info);
void Rlasyf_aa(const char *uplo, mplapackint const j1, mplapackint const m, mplapackint const nb, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *h, mplapackint const ldh, dd_real *work);
void Rlasyf_rk(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, dd_real *a, mplapackint const lda, dd_real *e, mplapackint *ipiv, dd_real *w, mplapackint const ldw, mplapackint &info);
void Rlasyf_rook(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *w, mplapackint const ldw, mplapackint &info);
void Rlatrd(const char *uplo, mplapackint const n, mplapackint const nb, dd_real *a, mplapackint const lda, dd_real *e, dd_real *tau, dd_real *w, mplapackint const ldw);
void Rlatsqr(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, dd_real *a, mplapackint const lda, dd_real *t, mplapackint const ldt, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rlauu2(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint &info);
void Rlauum(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint &info);
void Rorbdb5(mplapackint const m1, mplapackint const m2, mplapackint const n, dd_real *x1, mplapackint const incx1, dd_real *x2, mplapackint const incx2, dd_real *q1, mplapackint const ldq1, dd_real *q2, mplapackint const ldq2, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rorbdb6(mplapackint const m1, mplapackint const m2, mplapackint const n, dd_real *x1, mplapackint const incx1, dd_real *x2, mplapackint const incx2, dd_real *q1, mplapackint const ldq1, dd_real *q2, mplapackint const ldq2, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rorg2l(mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint &info);
void Rorg2r(mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint &info);
void Rorgbr(const char *vect, mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rorghr(mplapackint const n, mplapackint const ilo, mplapackint const ihi, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rorgl2(mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint &info);
void Rorglq(mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rorgql(mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rorgqr(mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rorgtr(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rorhr_col(mplapackint const m, mplapackint const n, mplapackint const nb, dd_real *a, mplapackint const lda, dd_real *t, mplapackint const ldt, dd_real *d, mplapackint &info);
void Rorm2r(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint &info);
void Rormbr(const char *vect, const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rorml2(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint &info);
void Rormlq(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rormql(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rormql(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rormqr(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, dd_real *a, mplapackint const lda, dd_real *tau, dd_real *c, mplapackint const ldc, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rpbequ(const char *uplo, mplapackint const n, mplapackint const kd, dd_real *ab, mplapackint const ldab, dd_real *s, dd_real &scond, dd_real &amax, mplapackint &info);
void Rpbsv(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, dd_real *ab, mplapackint const ldab, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rpbtrs(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, dd_real *ab, mplapackint const ldab, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rpoequ(mplapackint const n, dd_real *a, mplapackint const lda, dd_real *s, dd_real &scond, dd_real &amax, mplapackint &info);
void Rpoequb(mplapackint const n, dd_real *a, mplapackint const lda, dd_real *s, dd_real &scond, dd_real &amax, mplapackint &info);
void Rposv(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rposvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, dd_real *af, mplapackint const ldaf, char *equed, dd_real *s, dd_real *b, mplapackint const ldb, dd_real *x, mplapackint const ldx, dd_real &rcond, dd_real *ferr, dd_real *berr, dd_real *work, mplapackint *iwork, mplapackint &info);
void Rpotf2(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint &info);
void Rpotrf(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint &info);
void Rpotrf2(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint &info);
void Rpotri(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint &info);
void Rpotrs(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rppequ(const char *uplo, mplapackint const n, dd_real *ap, dd_real *s, dd_real &scond, dd_real &amax, mplapackint &info);
void Rppsv(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *ap, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rpptrs(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *ap, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rptcon(mplapackint const n, dd_real *d, dd_real *e, dd_real const anorm, dd_real &rcond, dd_real *work, mplapackint &info);
void Rptsv(mplapackint const n, mplapackint const nrhs, dd_real *d, dd_real *e, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rptsvx(const char *fact, mplapackint const n, mplapackint const nrhs, dd_real *d, dd_real *e, dd_real *df, dd_real *ef, dd_real *b, mplapackint const ldb, dd_real *x, mplapackint const ldx, dd_real &rcond, dd_real *ferr, dd_real *berr, dd_real *work, mplapackint &info);
void Rpttrf(mplapackint const n, dd_real *d, dd_real *e, mplapackint &info);
void Rpttrs(mplapackint const n, mplapackint const nrhs, dd_real *d, dd_real *e, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rptts2(mplapackint const n, mplapackint const nrhs, dd_real *d, dd_real *e, dd_real *b, mplapackint const ldb);
void Rrscl(mplapackint const n, dd_real const sa, dd_real *sx, mplapackint const incx);
void Rsfrk(const char *transr, const char *uplo, const char *trans, mplapackint const n, mplapackint const k, dd_real const alpha, dd_real *a, mplapackint const lda, dd_real const beta, dd_real *c);
void Rspsv(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *ap, mplapackint *ipiv, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rsteqr(const char *compz, mplapackint const n, dd_real *d, dd_real *e, dd_real *z, mplapackint const ldz, dd_real *work, mplapackint &info);
void Rsterf(mplapackint const n, dd_real *d, dd_real *e, mplapackint &info);
void Rstev(const char *jobz, mplapackint const n, dd_real *d, dd_real *e, dd_real *z, mplapackint const ldz, dd_real *work, mplapackint &info);
void Rstevd(const char *jobz, mplapackint const n, dd_real *d, dd_real *e, dd_real *z, mplapackint const ldz, dd_real *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rsyconv(const char *uplo, const char *way, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *e, mplapackint &info);
void Rsyconvf(const char *uplo, const char *way, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *e, mplapackint *ipiv, mplapackint &info);
void Rsyconvf_rook(const char *uplo, const char *way, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *e, mplapackint *ipiv, mplapackint &info);
void Rsyequb(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *s, dd_real &scond, dd_real &amax, dd_real *work, mplapackint &info);
void Rsyev(const char *jobz, const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *w, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rsyevd(const char *jobz, const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *w, dd_real *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rsygs2(mplapackint const itype, const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rsygst(mplapackint const itype, const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rsysv(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rsysv_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rsysv_aa_2stage(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, dd_real *tb, mplapackint const ltb, mplapackint *ipiv, mplapackint *ipiv2, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rsysv_rk(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, dd_real *e, mplapackint *ipiv, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rsysv_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rsysvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, dd_real *af, mplapackint const ldaf, mplapackint *ipiv, dd_real *b, mplapackint const ldb, dd_real *x, mplapackint const ldx, dd_real &rcond, dd_real *ferr, dd_real *berr, dd_real *work, mplapackint const lwork, mplapackint *iwork, mplapackint &info);
void Rsytd2(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *d, dd_real *e, dd_real *tau, mplapackint &info);
void Rsytf2(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rsytf2_rk(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *e, mplapackint *ipiv, mplapackint &info);
void Rsytf2_rook(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rsytrd(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *d, dd_real *e, dd_real *tau, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rsytri(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *work, mplapackint &info);
void Rsytri2(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rsytri_3(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *e, mplapackint *ipiv, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rsytri_rook(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *work, mplapackint &info);
void Rsytrs(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rsytrs2(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint &info);
void Rsytrs_3(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, dd_real *e, mplapackint *ipiv, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rsytrs_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rsytrs_aa_2stage(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, dd_real *tb, mplapackint const ltb, mplapackint *ipiv, mplapackint *ipiv2, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rsytrs_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, mplapackint *ipiv, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rtbtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const kd, mplapackint const nrhs, dd_real *ab, mplapackint const ldab, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rtgexc(bool const wantq, bool const wantz, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, dd_real *q, mplapackint const ldq, dd_real *z, mplapackint const ldz, mplapackint &ifst, mplapackint &ilst, dd_real *work, mplapackint const lwork, mplapackint &info);
void Rtplqt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const mb, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, dd_real *t, mplapackint const ldt, dd_real *work, mplapackint &info);
void Rtpmlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const mb, dd_real *v, mplapackint const ldv, dd_real *t, mplapackint const ldt, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint &info);
void Rtpmqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const nb, dd_real *v, mplapackint const ldv, dd_real *t, mplapackint const ldt, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint &info);
void Rtpqrt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const nb, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, dd_real *t, mplapackint const ldt, dd_real *work, mplapackint &info);
void Rtprfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, dd_real *v, mplapackint const ldv, dd_real *t, mplapackint const ldt, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, dd_real *work, mplapackint const ldwork);
void Rtptrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, dd_real *ap, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rtpttr(const char *uplo, mplapackint const n, dd_real *ap, dd_real *a, mplapackint const lda, mplapackint &info);
void Rtrexc(const char *compq, mplapackint const n, dd_real *t, mplapackint const ldt, dd_real *q, mplapackint const ldq, mplapackint &ifst, mplapackint &ilst, dd_real *work, mplapackint &info);
void Rtrti2(const char *uplo, const char *diag, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint &info);
void Rtrtri(const char *uplo, const char *diag, mplapackint const n, dd_real *a, mplapackint const lda, mplapackint &info);
void Rtrtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, dd_real *a, mplapackint const lda, dd_real *b, mplapackint const ldb, mplapackint &info);
void Rtrttp(const char *uplo, mplapackint const n, dd_real *a, mplapackint const lda, dd_real *ap, mplapackint &info);
#endif
