/*
 * Copyright (c) 2008-2021
 *	Nakata, Maho
 * 	All rights reserved.
 *
 * $Id: mplapack_double.h,v 1.4 2010/08/07 03:15:46 nakatamaho Exp $
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _MPLAPACK_DOUBLE_H_
#define _MPLAPACK_DOUBLE_H_

#include "mplapack_config.h"

bool Risnan(double const din);
bool Rlaisnan(double const din1, double const din2);
double Clangt(const char *norm, mplapackint const n, std::complex<double> *dl, std::complex<double> *d, std::complex<double> *du);
double Clanhe(const char *norm, const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, double *work);
double Clanht(const char *norm, mplapackint const n, double *d, std::complex<double> *e);
double Clansy(const char *norm, const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, double *work);
double RCsum1(mplapackint const n, std::complex<double> *cx, mplapackint const incx);
double Rla_gerpvgrw(mplapackint const n, mplapackint const ncols, double *a, mplapackint const lda, double *af, mplapackint const ldaf);
double Rladiv2(double const &a, double const &b, double const &c, double const &d, double const &r, double const &t);
double Rladiv2(double const &a, double const &b, double const &c, double const &d, double const &r, double const &t);
double Rlamch_double(const char *cmach);
double Rlangt(const char *norm, mplapackint const n, double *dl, double *d, double *du);
double Rlanst(const char *norm, mplapackint const n, double *d, double *e);
double Rlansy(const char *norm, const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *work);
double Rlapy2(double const x, double const y);
double Rlapy3(double const x, double const y, double const z);
double abs1(std::complex<double> ff);
double abs1(std::complex<double> ff);
double abs1(std::complex<double> ff);
double abssq(std::complex<double> ff);
double abssq(std::complex<double> ff);
mplapackint Rlaneg(mplapackint const n, double *d, double *lld, double const sigma, double const, mplapackint const r);
mplapackint iCmax1(mplapackint const n, std::complex<double> *zx, mplapackint const incx);
mplapackint iMladlc(mplapackint const m, mplapackint const n, double *a, mplapackint const lda);
mplapackint iMladlr(mplapackint const m, mplapackint const n, double *a, mplapackint const lda);
mplapackint iMlaenv_double(mplapackint ispec, const char *name, const char *opts, mplapackint n1, mplapackint n2, mplapackint n3, mplapackint n4);
mplapackint iMlazlc(mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda);
mplapackint iMlazlr(mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda);
std::complex<double> Cladiv(std::complex<double> const x, std::complex<double> const y);
void CRrscl(mplapackint const n, double const sa, std::complex<double> *sx, mplapackint const incx);
void Cgebak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, double *scale, mplapackint const m, std::complex<double> *v, mplapackint const ldv, mplapackint &info);
void Cgelq(mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *t, mplapackint const tsize, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Cgelqt(mplapackint const m, mplapackint const n, mplapackint const mb, std::complex<double> *a, mplapackint const lda, std::complex<double> *t, mplapackint const ldt, std::complex<double> *work, mplapackint &info);
void Cgemlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const mb, std::complex<double> *v, mplapackint const ldv, std::complex<double> *t, mplapackint const ldt, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work, mplapackint &info);
void Cgemqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const nb, std::complex<double> *v, mplapackint const ldv, std::complex<double> *t, mplapackint const ldt, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work, mplapackint &info);
void Cgeqr(mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *t, mplapackint const tsize, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Cgeqrt(mplapackint const m, mplapackint const n, mplapackint const nb, std::complex<double> *a, mplapackint const lda, std::complex<double> *t, mplapackint const ldt, std::complex<double> *work, mplapackint &info);
void Cgesv(mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cgetc2(mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint &info);
void Cgetf2(mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Cgetrf(mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Cgetrf2(mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Cgetri(mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Cgetrs(const char *trans, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cggbak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, double *lscale, double *rscale, mplapackint const m, std::complex<double> *v, mplapackint const ldv, mplapackint &info);
void Cgtts2(mplapackint const itrans, mplapackint const n, mplapackint const nrhs, std::complex<double> *dl, std::complex<double> *d, std::complex<double> *du, std::complex<double> *du2, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb);
void Cheev(const char *jobz, const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, double *w, std::complex<double> *work, mplapackint const lwork, double *rwork, mplapackint &info);
void Chegst(mplapackint const itype, const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Chesv(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Chesv_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Chetd2(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, double *d, double *e, std::complex<double> *tau, mplapackint &info);
void Chetrd(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, double *d, double *e, std::complex<double> *tau, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Chetri(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *work, mplapackint &info);
void Chetri2(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Chetri_3(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *e, mplapackint *ipiv, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Chetri_rook(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *work, mplapackint &info);
void Chetrs(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Chetrs2(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, std::complex<double> *work, mplapackint &info);
void Chetrs_3(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, std::complex<double> *e, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Chetrs_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Chetrs_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Chfrk(const char *transr, const char *uplo, const char *trans, mplapackint const n, mplapackint const k, double const alpha, std::complex<double> *a, mplapackint const lda, double const beta, std::complex<double> *c);
void Chpsv(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *ap, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cla_wwaddw(mplapackint const n, std::complex<double> *x, std::complex<double> *y, std::complex<double> *w);
void Clacgv(mplapackint const n, std::complex<double> *x, mplapackint const incx);
void Clacp2(const char *uplo, mplapackint const m, mplapackint const n, double *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb);
void Clacpy(const char *uplo, mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb);
void Clacrm(mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda, double *b, mplapackint const ldb, std::complex<double> *c, mplapackint const ldc, double *rwork);
void Clacrt(mplapackint const n, std::complex<double> *cx, mplapackint const incx, std::complex<double> *cy, mplapackint const incy, std::complex<double> const c, std::complex<double> const s);
void Claesy(std::complex<double> const a, std::complex<double> const b, std::complex<double> const c, std::complex<double> &rt1, std::complex<double> &rt2, std::complex<double> &evscal, std::complex<double> &cs1, std::complex<double> &sn1);
void Claev2(std::complex<double> const a, std::complex<double> const b, std::complex<double> const c, double &rt1, double &rt2, double &cs1, std::complex<double> &sn1);
void Clagtm(const char *trans, mplapackint const n, mplapackint const nrhs, double const alpha, std::complex<double> *dl, std::complex<double> *d, std::complex<double> *du, std::complex<double> *x, mplapackint const ldx, double const beta, std::complex<double> *b, mplapackint const ldb);
void Clahef(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *w, mplapackint const ldw, mplapackint &info);
void Clapmr(bool const forwrd, mplapackint const m, mplapackint const n, std::complex<double> *x, mplapackint const ldx, mplapackint *k);
void Clapmt(bool const forwrd, mplapackint const m, mplapackint const n, std::complex<double> *x, mplapackint const ldx, mplapackint *k);
void Claqgb(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, std::complex<double> *ab, mplapackint const ldab, double *r, double *c, double const rowcnd, double const colcnd, double const amax, char *equed);
void Claqge(mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda, double *r, double *c, double const rowcnd, double const colcnd, double const amax, char *equed);
void Claqhb(const char *uplo, mplapackint const n, mplapackint const kd, std::complex<double> *ab, mplapackint const ldab, double *s, double const scond, double const amax, char *equed);
void Claqhe(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, double *s, double const scond, double const amax, char *equed);
void Claqhp(const char *uplo, mplapackint const n, std::complex<double> *ap, double *s, double const scond, double const amax, char *equed);
void Claqsb(const char *uplo, mplapackint const n, mplapackint const kd, std::complex<double> *ab, mplapackint const ldab, double *s, double const scond, double const amax, char *equed);
void Claqsp(const char *uplo, mplapackint const n, std::complex<double> *ap, double *s, double const scond, double const amax, char *equed);
void Claqsy(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, double *s, double const scond, double const amax, char *equed);
void Clar2v(mplapackint const n, std::complex<double> *x, std::complex<double> *y, std::complex<double> *z, mplapackint const incx, double *c, std::complex<double> *s, mplapackint const incc);
void Clarf(const char *side, mplapackint const m, mplapackint const n, std::complex<double> *v, mplapackint const incv, std::complex<double> const tau, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work);
void Clarfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *v, mplapackint const ldv, std::complex<double> *t, mplapackint const ldt, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work, mplapackint const ldwork);
void Clarfb_gett(const char *ident, mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *t, mplapackint const ldt, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, std::complex<double> *work, mplapackint const ldwork);
void Clarfg(mplapackint const n, std::complex<double> &alpha, std::complex<double> *x, mplapackint const incx, std::complex<double> &tau);
void Clarft(const char *direct, const char *storev, mplapackint const n, mplapackint const k, std::complex<double> *v, mplapackint const ldv, std::complex<double> *tau, std::complex<double> *t, mplapackint const ldt);
void Clarfx(const char *side, mplapackint const m, mplapackint const n, std::complex<double> *v, std::complex<double> const tau, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work);
void Clarfy(const char *uplo, mplapackint const n, std::complex<double> *v, mplapackint const incv, std::complex<double> const tau, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work);
void Clarscl2(mplapackint const m, mplapackint const n, double *d, std::complex<double> *x, mplapackint const ldx);
void Clartg(std::complex<double> const f, std::complex<double> const g, double &cs, std::complex<double> &sn, std::complex<double> &r);
void Clartv(mplapackint const n, std::complex<double> *x, mplapackint const incx, std::complex<double> *y, mplapackint const incy, double *c, std::complex<double> *s, mplapackint const incc);
void Clarz(const char *side, mplapackint const m, mplapackint const n, mplapackint const l, std::complex<double> *v, mplapackint const incv, std::complex<double> const tau, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work);
void Clarzt(const char *direct, const char *storev, mplapackint const n, mplapackint const k, std::complex<double> *v, mplapackint const ldv, std::complex<double> *tau, std::complex<double> *t, mplapackint const ldt);
void Clascl(const char *type, mplapackint const kl, mplapackint const ku, double const cfrom, double const cto, mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint &info);
void Clascl2(mplapackint const m, mplapackint const n, double *d, std::complex<double> *x, mplapackint const ldx);
void Claset(const char *uplo, mplapackint const m, mplapackint const n, std::complex<double> const alpha, std::complex<double> const beta, std::complex<double> *a, mplapackint const lda);
void Clasr(const char *side, const char *pivot, const char *direct, mplapackint const m, mplapackint const n, double *c, double *s, std::complex<double> *a, mplapackint const lda);
void Classq(mplapackint const n, std::complex<double> *x, mplapackint const incx, double &scale, double &sumsq);
void Claswlq(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, std::complex<double> *a, mplapackint const lda, std::complex<double> *t, mplapackint const ldt, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Claswp(mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint const k1, mplapackint const k2, mplapackint *ipiv, mplapackint const incx);
void Clasyf(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *w, mplapackint const ldw, mplapackint &info);
void Clatrd(const char *uplo, mplapackint const n, mplapackint const nb, std::complex<double> *a, mplapackint const lda, double *e, std::complex<double> *tau, std::complex<double> *w, mplapackint const ldw);
void Clatsqr(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, std::complex<double> *a, mplapackint const lda, std::complex<double> *t, mplapackint const ldt, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Claunhr_col_getrfnp(mplapackint const m, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *d, mplapackint &info);
void Clauum(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint &info);
void Cpbequ(const char *uplo, mplapackint const n, mplapackint const kd, std::complex<double> *ab, mplapackint const ldab, double *s, double &scond, double &amax, mplapackint &info);
void Cpbsv(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, std::complex<double> *ab, mplapackint const ldab, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cpbtrs(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, std::complex<double> *ab, mplapackint const ldab, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cpoequ(mplapackint const n, std::complex<double> *a, mplapackint const lda, double *s, double &scond, double &amax, mplapackint &info);
void Cposv(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cpotf2(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint &info);
void Cpotrf(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint &info);
void Cpotrf2(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint &info);
void Cpotri(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint &info);
void Cpotrs(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cppequ(const char *uplo, mplapackint const n, std::complex<double> *ap, double *s, double &scond, double &amax, mplapackint &info);
void Cppsv(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *ap, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cpptrs(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *ap, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cptcon(mplapackint const n, double *d, std::complex<double> *e, double const anorm, double &rcond, double *rwork, mplapackint &info);
void Cptsv(mplapackint const n, mplapackint const nrhs, double *d, std::complex<double> *e, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cpttrf(mplapackint const n, double *d, std::complex<double> *e, mplapackint &info);
void Cpttrs(const char *uplo, mplapackint const n, mplapackint const nrhs, double *d, std::complex<double> *e, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Cptts2(mplapackint const iuplo, mplapackint const n, mplapackint const nrhs, double *d, std::complex<double> *e, std::complex<double> *b, mplapackint const ldb);
void Crot(mplapackint const n, std::complex<double> *cx, mplapackint const incx, std::complex<double> *cy, mplapackint const incy, double const c, std::complex<double> const s);
void Cspmv(const char *uplo, mplapackint const n, std::complex<double> const alpha, std::complex<double> *ap, std::complex<double> *x, mplapackint const incx, std::complex<double> const beta, std::complex<double> *y, mplapackint const incy);
void Cspr(const char *uplo, mplapackint const n, std::complex<double> const alpha, std::complex<double> *x, mplapackint const incx, std::complex<double> *ap);
void Cspsv(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *ap, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Csteqr(const char *compz, mplapackint const n, double *d, double *e, std::complex<double> *z, mplapackint const ldz, double *work, mplapackint &info);
void Csyconv(const char *uplo, const char *way, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *e, mplapackint &info);
void Csyconvf(const char *uplo, const char *way, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *e, mplapackint *ipiv, mplapackint &info);
void Csyconvf_rook(const char *uplo, const char *way, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *e, mplapackint *ipiv, mplapackint &info);
void Csymv(const char *uplo, mplapackint const n, std::complex<double> const alpha, std::complex<double> *a, mplapackint const lda, std::complex<double> *x, mplapackint const incx, std::complex<double> const beta, std::complex<double> *y, mplapackint const incy);
void Csyr(const char *uplo, mplapackint const n, std::complex<double> const alpha, std::complex<double> *x, mplapackint const incx, std::complex<double> *a, mplapackint const lda);
void Csytri2(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Csytri_3(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *e, mplapackint *ipiv, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Csytrs(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Csytrs2(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, std::complex<double> *work, mplapackint &info);
void Csytrs_3(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, std::complex<double> *e, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Csytrs_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Csytrs_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, mplapackint *ipiv, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Ctbtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const kd, mplapackint const nrhs, std::complex<double> *ab, mplapackint const ldab, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Ctgexc(bool const wantq, bool const wantz, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, std::complex<double> *q, mplapackint const ldq, std::complex<double> *z, mplapackint const ldz, mplapackint const ifst, mplapackint &ilst, mplapackint &info);
void Ctplqt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const mb, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, std::complex<double> *t, mplapackint const ldt, std::complex<double> *work, mplapackint &info);
void Ctpmlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const mb, std::complex<double> *v, mplapackint const ldv, std::complex<double> *t, mplapackint const ldt, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, std::complex<double> *work, mplapackint &info);
void Ctpmqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const nb, std::complex<double> *v, mplapackint const ldv, std::complex<double> *t, mplapackint const ldt, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, std::complex<double> *work, mplapackint &info);
void Ctpqrt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const nb, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, std::complex<double> *t, mplapackint const ldt, std::complex<double> *work, mplapackint &info);
void Ctprfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, std::complex<double> *v, mplapackint const ldv, std::complex<double> *t, mplapackint const ldt, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, std::complex<double> *work, mplapackint const ldwork);
void Ctptrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, std::complex<double> *ap, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Ctpttr(const char *uplo, mplapackint const n, std::complex<double> *ap, std::complex<double> *a, mplapackint const lda, mplapackint &info);
void Ctrti2(const char *uplo, const char *diag, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint &info);
void Ctrtri(const char *uplo, const char *diag, mplapackint const n, std::complex<double> *a, mplapackint const lda, mplapackint &info);
void Ctrtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, std::complex<double> *a, mplapackint const lda, std::complex<double> *b, mplapackint const ldb, mplapackint &info);
void Ctrttp(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *ap, mplapackint &info);
void Cunbdb5(mplapackint const m1, mplapackint const m2, mplapackint const n, std::complex<double> *x1, mplapackint const incx1, std::complex<double> *x2, mplapackint const incx2, std::complex<double> *q1, mplapackint const ldq1, std::complex<double> *q2, mplapackint const ldq2, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Cunbdb6(mplapackint const m1, mplapackint const m2, mplapackint const n, std::complex<double> *x1, mplapackint const incx1, std::complex<double> *x2, mplapackint const incx2, std::complex<double> *q1, mplapackint const ldq1, std::complex<double> *q2, mplapackint const ldq2, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Cung2l(mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *work, mplapackint &info);
void Cung2r(mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *work, mplapackint &info);
void Cunghr(mplapackint const n, mplapackint const ilo, mplapackint const ihi, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Cungl2(mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *work, mplapackint &info);
void Cungql(mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Cungqr(mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Cungr2(mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *work, mplapackint &info);
void Cungtr(const char *uplo, mplapackint const n, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Cungtsqr(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, std::complex<double> *a, mplapackint const lda, std::complex<double> *t, mplapackint const ldt, std::complex<double> *work, mplapackint const lwork, mplapackint &info);
void Cunhr_col(mplapackint const m, mplapackint const n, mplapackint const nb, std::complex<double> *a, mplapackint const lda, std::complex<double> *t, mplapackint const ldt, std::complex<double> *d, mplapackint &info);
void Cunm2l(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work, mplapackint &info);
void Cunm2r(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work, mplapackint &info);
void Cunml2(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work, mplapackint &info);
void Cunmr2(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work, mplapackint &info);
void Cunmr3(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, std::complex<double> *a, mplapackint const lda, std::complex<double> *tau, std::complex<double> *c, mplapackint const ldc, std::complex<double> *work, mplapackint &info);
void Rbdsqr(const char *uplo, mplapackint const n, mplapackint const ncvt, mplapackint const nru, mplapackint const ncc, double *d, double *e, double *vt, mplapackint const ldvt, double *u, mplapackint const ldu, double *c, mplapackint const ldc, double *work, mplapackint &info);
void Rcombssq(double *v1, double *v2);
void Rgebak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, double *scale, mplapackint const m, double *v, mplapackint const ldv, mplapackint &info);
void Rgebd2(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *d, double *e, double *tauq, double *taup, double *work, mplapackint &info);
void Rgebrd(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *d, double *e, double *tauq, double *taup, double *work, mplapackint const lwork, int &info);
void Rgelq(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *t, mplapackint const tsize, double *work, mplapackint const lwork, mplapackint &info);
void Rgelq2(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *tau, double *work, mplapackint &info);
void Rgelqf(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *tau, double *work, mplapackint const lwork, mplapackint &info);
void Rgelqt(mplapackint const m, mplapackint const n, mplapackint const mb, double *a, mplapackint const lda, double *t, mplapackint const ldt, double *work, mplapackint &info);
void Rgemlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const mb, double *v, mplapackint const ldv, double *t, mplapackint const ldt, double *c, mplapackint const ldc, double *work, mplapackint &info);
void Rgemqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const nb, double *v, mplapackint const ldv, double *t, mplapackint const ldt, double *c, mplapackint const ldc, double *work, mplapackint &info);
void Rgeqr(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *t, mplapackint const tsize, double *work, mplapackint const lwork, mplapackint &info);
void Rgeqr2(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *tau, double *work, mplapackint &info);
void Rgeqrf(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *tau, double *work, mplapackint const lwork, mplapackint &info);
void Rgeqrt(mplapackint const m, mplapackint const n, mplapackint const nb, double *a, mplapackint const lda, double *t, mplapackint const ldt, double *work, mplapackint &info);
void Rgesv(mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, mplapackint *ipiv, double *b, mplapackint const ldb, mplapackint &info);
void Rgesvd(const char *jobu, const char *jobvt, mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *s, double *u, mplapackint const ldu, double *vt, mplapackint const ldvt, double *work, mplapackint const lwork, mplapackint &info);
void Rgetc2(mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint &info);
void Rgetf2(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rgetrf(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rgetrf2(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rgetri(mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, double *work, mplapackint const lwork, mplapackint &info);
void Rgetrs(const char *trans, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, mplapackint *ipiv, double *b, mplapackint const ldb, mplapackint &info);
void Rggbak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, double *lscale, double *rscale, mplapackint const m, double *v, mplapackint const ldv, mplapackint &info);
void Rgtsv(mplapackint const n, mplapackint const nrhs, double *dl, double *d, double *du, double *b, mplapackint const ldb, mplapackint &info);
void Rgttrf(mplapackint const n, double *dl, double *d, double *du, double *du2, mplapackint *ipiv, mplapackint &info);
void Rgtts2(mplapackint const itrans, mplapackint const n, mplapackint const nrhs, double *dl, double *d, double *du, double *du2, mplapackint *ipiv, double *b, mplapackint const ldb);
void Rla_wwaddw(mplapackint const n, double *x, double *y, double *w);
void Rlabad(double &small, double &large);
void Rlabrd(mplapackint const m, mplapackint const n, mplapackint const nb, double *a, mplapackint const lda, double *d, double *e, double *tauq, double *taup, double *x, mplapackint const ldx, double *y, mplapackint const ldy);
void Rlacpy(const char *uplo, mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *b, mplapackint const ldb);
void Rladiv(double const &a, double const &b, double const &c, double const &d, double &p, double &q);
void Rladiv(double const &a, double const &b, double const &c, double const &d, double &p, double &q);
void Rladiv1(double &a, double const &b, double const &c, double const &d, double &p, double &q);
void Rladiv1(double &a, double const &b, double const &c, double const &d, double &p, double &q);
void Rlae2(double const a, double const b, double const c, double &rt1, double &rt2);
void Rlaed5(mplapackint const i, double *d, double *z, double *delta, double const rho, double &dlam);
void Rlaev2(double const a, double const b, double const c, double &rt1, double &rt2, double &cs1, double &sn1);
void Rlagtf(mplapackint const n, double *a, double const lambda, double *b, double *c, double const tol, double *d, mplapackint *in, mplapackint &info);
void Rlagtm(const char *trans, mplapackint const n, mplapackint const nrhs, double const alpha, double *dl, double *d, double *du, double *x, mplapackint const ldx, double const beta, double *b, mplapackint const ldb);
void Rlaic1(mplapackint const job, mplapackint const j, double *x, double const sest, double *w, double const gamma, double &sestpr, double &s, double &c);
void Rlamrg(mplapackint const n1, mplapackint const n2, double *a, mplapackint const dtrd1, mplapackint const dtrd2, mplapackint *index);
void Rlanv2(double &a, double &b, double &c, double &d, double &rt1r, double &rt1i, double &rt2r, double &rt2i, double &cs, double &sn);
void Rlaorhr_col_getrfnp(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *d, mplapackint &info);
void Rlaorhr_col_getrfnp2(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *d, mplapackint &info);
void Rlapmr(bool const forwrd, mplapackint const m, mplapackint const n, double *x, mplapackint const ldx, mplapackint *k);
void Rlapmt(bool const forwrd, mplapackint const m, mplapackint const n, double *x, mplapackint const ldx, mplapackint *k);
void Rlaqgb(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, double *ab, mplapackint const ldab, double *r, double *c, double const rowcnd, double const colcnd, double const amax, char *equed);
void Rlaqge(mplapackint const m, mplapackint const n, double *a, mplapackint const lda, double *r, double *c, double const rowcnd, double const colcnd, double const amax, char *equed);
void Rlaqr1(mplapackint const n, double *h, mplapackint const ldh, double const sr1, double const si1, double const sr2, double const si2, double *v);
void Rlaqsb(const char *uplo, mplapackint const n, mplapackint const kd, double *ab, mplapackint const ldab, double *s, double const scond, double const amax, char *equed);
void Rlaqsp(const char *uplo, mplapackint const n, double *ap, double *s, double const scond, double const amax, char *equed);
void Rlaqsy(const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *s, double const scond, double const amax, char *equed);
void Rlar1v(mplapackint const n, mplapackint const b1, mplapackint const bn, double const lambda, double *d, double *l, double *ld, double *lld, double const pivmin, double const gaptol, double *z, bool const wantnc, mplapackint &negcnt, double &ztz, double &mingma, mplapackint &r, mplapackint *isuppz, double &nrminv, double &resid, double &rqcorr, double *work);
void Rlar2v(mplapackint const n, double *x, double *y, double *z, mplapackint const incx, double *c, double *s, mplapackint const incc);
void Rlarf(const char *side, mplapackint const m, mplapackint const n, double *v, mplapackint const incv, double const tau, double *c, mplapackint const ldc, double *work);
void Rlarfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, double *v, mplapackint const ldv, double *t, mplapackint const ldt, double *c, mplapackint const ldc, double *work, mplapackint const ldwork);
void Rlarfb_gett(const char *ident, mplapackint const m, mplapackint const n, mplapackint const k, double *t, mplapackint const ldt, double *a, mplapackint const lda, double *b, mplapackint const ldb, double *work, mplapackint const ldwork);
void Rlarfg(mplapackint const n, double &alpha, double *x, mplapackint const incx, double &tau);
void Rlarfgp(mplapackint const n, double &alpha, double *x, mplapackint const incx, double &tau);
void Rlarft(const char *direct, const char *storev, mplapackint const n, mplapackint const k, double *v, mplapackint const ldv, double *tau, double *t, mplapackint const ldt);
void Rlarfx(const char *side, mplapackint const m, mplapackint const n, double *v, double const tau, double *c, mplapackint const ldc, double *work);
void Rlarfy(const char *uplo, mplapackint const n, double *v, mplapackint const incv, double const tau, double *c, mplapackint const ldc, double *work);
void Rlargv(mplapackint const n, double *x, mplapackint const incx, double *y, mplapackint const incy, double *c, mplapackint const incc);
void Rlarra(mplapackint const n, double *d, double *e, double *e2, double const spltol, double const tnrm, mplapackint &nsplit, mplapackint *isplit, mplapackint &info);
void Rlarrc(const char *jobt, mplapackint const n, double const vl, double const vu, double *d, double *e, double const, mplapackint &eigcnt, mplapackint &lcnt, mplapackint &rcnt, mplapackint &info);
void Rlarrj(mplapackint const n, double *d, double *e2, mplapackint const ifirst, mplapackint const ilast, double const rtol, mplapackint const offset, double *w, double *werr, double *work, mplapackint *iwork, double const pivmin, double const spdiam, mplapackint &info);
void Rlarrr(mplapackint const n, double *d, double *e, mplapackint &info);
void Rlarscl2(mplapackint const m, mplapackint const n, double *d, double *x, mplapackint const ldx);
void Rlartg(double const f, double const g, double &cs, double &sn, double &r);
void Rlartgp(double const f, double const g, double &cs, double &sn, double &r);
void Rlartgs(double const x, double const y, double const sigma, double cs, double sn);
void Rlartv(mplapackint const n, double *x, mplapackint const incx, double *y, mplapackint const incy, double *c, double *s, mplapackint const incc);
void Rlarz(const char *side, mplapackint const m, mplapackint const n, mplapackint const l, double *v, mplapackint const incv, double const tau, double *c, mplapackint const ldc, double *work);
void Rlarzt(const char *direct, const char *storev, mplapackint const n, mplapackint const k, double *v, mplapackint const ldv, double *tau, double *t, mplapackint const ldt);
void Rlas2(double const f, double const g, double const h, double &ssmin, double &ssmax);
void Rlascl(const char *type, mplapackint const kl, mplapackint const ku, double const cfrom, double const cto, mplapackint const m, mplapackint const n, double *a, mplapackint const lda, mplapackint &info);
void Rlascl2(mplapackint const m, mplapackint const n, double *d, double *x, mplapackint const ldx);
void Rlasd5(mplapackint const i, double *d, double *z, double *delta, double const rho, double &dsigma, double *work);
void Rlaset(const char *uplo, mplapackint const m, mplapackint const n, double const alpha, double const beta, double *a, mplapackint const lda);
void Rlasq1(mplapackint const n, double *d, double *e, double *work, mplapackint &info);
void Rlasq2(mplapackint const n, double *z, mplapackint &info);
void Rlasq3(mplapackint const i0, mplapackint &n0, double *z, mplapackint &pp, double &dmin, double &sigma, double &desig, double &qmax, mplapackint &nfail, mplapackint &iter, mplapackint &ndiv, bool const ieee, mplapackint &ttype, double const dmin1, double &dmin2, double const dn, double const dn1, double const dn2, double const g, double &tau);
void Rlasq4(mplapackint const i0, mplapackint const n0, double *z, mplapackint const pp, mplapackint const n0in, double const dmin, double const dmin1, double const dmin2, double const dn, double const dn1, double const dn2, double &tau, mplapackint &ttype, double &g);
void Rlasq6(mplapackint const i0, mplapackint const n0, double *z, mplapackint const pp, double &dmin, double &dmin1, double &dmin2, double &dn, double &dnm1, double &dnm2);
void Rlasr(const char *side, const char *pivot, const char *direct, mplapackint const m, mplapackint const n, double *c, double *s, double *a, mplapackint const lda);
void Rlasrt(const char *id, mplapackint const n, double *d, mplapackint &info);
void Rlassq(mplapackint const n, double *x, mplapackint const incx, double &scale, double &sumsq);
void Rlasv2(double const f, double const g, double const h, double &ssmin, double &ssmax, double &snr, double &csr, double &snl, double &csl);
void Rlaswlq(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, double *a, mplapackint const lda, double *t, mplapackint const ldt, double *work, mplapackint const lwork, mplapackint &info);
void Rlaswp(mplapackint const n, double *a, mplapackint const lda, mplapackint const k1, mplapackint const k2, mplapackint *ipiv, mplapackint const incx);
void Rlasyf(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, double *a, mplapackint const lda, mplapackint *ipiv, double *w, mplapackint const ldw, mplapackint &info);
void Rlasyf_aa(const char *uplo, mplapackint const j1, mplapackint const m, mplapackint const nb, double *a, mplapackint const lda, mplapackint *ipiv, double *h, mplapackint const ldh, double *work);
void Rlasyf_rk(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, double *a, mplapackint const lda, double *e, mplapackint *ipiv, double *w, mplapackint const ldw, mplapackint &info);
void Rlasyf_rook(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, double *a, mplapackint const lda, mplapackint *ipiv, double *w, mplapackint const ldw, mplapackint &info);
void Rlatrd(const char *uplo, mplapackint const n, mplapackint const nb, double *a, mplapackint const lda, double *e, double *tau, double *w, mplapackint const ldw);
void Rlatsqr(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, double *a, mplapackint const lda, double *t, mplapackint const ldt, double *work, mplapackint const lwork, mplapackint &info);
void Rlauu2(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint &info);
void Rlauum(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint &info);
void Rorbdb5(mplapackint const m1, mplapackint const m2, mplapackint const n, double *x1, mplapackint const incx1, double *x2, mplapackint const incx2, double *q1, mplapackint const ldq1, double *q2, mplapackint const ldq2, double *work, mplapackint const lwork, mplapackint &info);
void Rorbdb6(mplapackint const m1, mplapackint const m2, mplapackint const n, double *x1, mplapackint const incx1, double *x2, mplapackint const incx2, double *q1, mplapackint const ldq1, double *q2, mplapackint const ldq2, double *work, mplapackint const lwork, mplapackint &info);
void Rorg2l(mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *work, mplapackint &info);
void Rorg2r(mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *work, mplapackint &info);
void Rorgbr(const char *vect, mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *work, mplapackint const lwork, mplapackint &info);
void Rorghr(mplapackint const n, mplapackint const ilo, mplapackint const ihi, double *a, mplapackint const lda, double *tau, double *work, mplapackint const lwork, mplapackint &info);
void Rorgl2(mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *work, mplapackint &info);
void Rorglq(mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *work, mplapackint const lwork, mplapackint &info);
void Rorgql(mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *work, mplapackint const lwork, mplapackint &info);
void Rorgqr(mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *work, mplapackint const lwork, mplapackint &info);
void Rorgtr(const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *tau, double *work, mplapackint const lwork, mplapackint &info);
void Rorhr_col(mplapackint const m, mplapackint const n, mplapackint const nb, double *a, mplapackint const lda, double *t, mplapackint const ldt, double *d, mplapackint &info);
void Rorm2l(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *c, mplapackint const ldc, double *work, mplapackint &info);
void Rorm2l(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *c, mplapackint const ldc, double *work, mplapackint &info);
void Rorm2r(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *c, mplapackint const ldc, double *work, mplapackint &info);
void Rorm2r(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *c, mplapackint const ldc, double *work, mplapackint &info);
void Rormbr(const char *vect, const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *c, mplapackint const ldc, double *work, mplapackint const lwork, mplapackint &info);
void Rorml2(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *c, mplapackint const ldc, double *work, mplapackint &info);
void Rormlq(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *c, mplapackint const ldc, double *work, mplapackint const lwork, mplapackint &info);
void Rormql(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *c, mplapackint const ldc, double *work, mplapackint const lwork, mplapackint &info);
void Rormqr(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, double *a, mplapackint const lda, double *tau, double *c, mplapackint const ldc, double *work, mplapackint const lwork, mplapackint &info);
void Rpbequ(const char *uplo, mplapackint const n, mplapackint const kd, double *ab, mplapackint const ldab, double *s, double &scond, double &amax, mplapackint &info);
void Rpbsv(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, double *ab, mplapackint const ldab, double *b, mplapackint const ldb, mplapackint &info);
void Rpbtrs(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, double *ab, mplapackint const ldab, double *b, mplapackint const ldb, mplapackint &info);
void Rpoequ(mplapackint const n, double *a, mplapackint const lda, double *s, double &scond, double &amax, mplapackint &info);
void Rpoequb(mplapackint const n, double *a, mplapackint const lda, double *s, double &scond, double &amax, mplapackint &info);
void Rposv(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, double *b, mplapackint const ldb, mplapackint &info);
void Rposvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, double *af, mplapackint const ldaf, char *equed, double *s, double *b, mplapackint const ldb, double *x, mplapackint const ldx, double &rcond, double *ferr, double *berr, double *work, mplapackint *iwork, mplapackint &info);
void Rpotf2(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint &info);
void Rpotrf(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint &info);
void Rpotrf2(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint &info);
void Rpotri(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint &info);
void Rpotrs(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, double *b, mplapackint const ldb, mplapackint &info);
void Rppequ(const char *uplo, mplapackint const n, double *ap, double *s, double &scond, double &amax, mplapackint &info);
void Rppsv(const char *uplo, mplapackint const n, mplapackint const nrhs, double *ap, double *b, mplapackint const ldb, mplapackint &info);
void Rpptrs(const char *uplo, mplapackint const n, mplapackint const nrhs, double *ap, double *b, mplapackint const ldb, mplapackint &info);
void Rptcon(mplapackint const n, double *d, double *e, double const anorm, double &rcond, double *work, mplapackint &info);
void Rptsv(mplapackint const n, mplapackint const nrhs, double *d, double *e, double *b, mplapackint const ldb, mplapackint &info);
void Rptsvx(const char *fact, mplapackint const n, mplapackint const nrhs, double *d, double *e, double *df, double *ef, double *b, mplapackint const ldb, double *x, mplapackint const ldx, double &rcond, double *ferr, double *berr, double *work, mplapackint &info);
void Rpttrf(mplapackint const n, double *d, double *e, mplapackint &info);
void Rpttrs(mplapackint const n, mplapackint const nrhs, double *d, double *e, double *b, mplapackint const ldb, mplapackint &info);
void Rptts2(mplapackint const n, mplapackint const nrhs, double *d, double *e, double *b, mplapackint const ldb);
void Rrscl(mplapackint const n, double const sa, double *sx, mplapackint const incx);
void Rsfrk(const char *transr, const char *uplo, const char *trans, mplapackint const n, mplapackint const k, double const alpha, double *a, mplapackint const lda, double const beta, double *c);
void Rspsv(const char *uplo, mplapackint const n, mplapackint const nrhs, double *ap, mplapackint *ipiv, double *b, mplapackint const ldb, mplapackint &info);
void Rsteqr(const char *compz, mplapackint const n, double *d, double *e, double *z, mplapackint const ldz, double *work, mplapackint &info);
void Rsterf(mplapackint const n, double *d, double *e, mplapackint &info);
void Rstev(const char *jobz, mplapackint const n, double *d, double *e, double *z, mplapackint const ldz, double *work, mplapackint &info);
void Rstevd(const char *jobz, mplapackint const n, double *d, double *e, double *z, mplapackint const ldz, double *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rsyconv(const char *uplo, const char *way, mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, double *e, mplapackint &info);
void Rsyconvf(const char *uplo, const char *way, mplapackint const n, double *a, mplapackint const lda, double *e, mplapackint *ipiv, mplapackint &info);
void Rsyconvf_rook(const char *uplo, const char *way, mplapackint const n, double *a, mplapackint const lda, double *e, mplapackint *ipiv, mplapackint &info);
void Rsyequb(const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *s, double &scond, double &amax, double *work, mplapackint &info);
void Rsyev(const char *jobz, const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *w, double *work, mplapackint const lwork, mplapackint &info);
void Rsyevd(const char *jobz, const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *w, double *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rsygs2(mplapackint const itype, const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *b, mplapackint const ldb, mplapackint &info);
void Rsygst(mplapackint const itype, const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *b, mplapackint const ldb, mplapackint &info);
void Rsysv(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, mplapackint *ipiv, double *b, mplapackint const ldb, double *work, mplapackint const lwork, mplapackint &info);
void Rsysv_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, mplapackint *ipiv, double *b, mplapackint const ldb, double *work, mplapackint const lwork, mplapackint &info);
void Rsysv_aa_2stage(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, double *tb, mplapackint const ltb, mplapackint *ipiv, mplapackint *ipiv2, double *b, mplapackint const ldb, double *work, mplapackint const lwork, mplapackint &info);
void Rsysv_rk(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, double *e, mplapackint *ipiv, double *b, mplapackint const ldb, double *work, mplapackint const lwork, mplapackint &info);
void Rsysv_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, mplapackint *ipiv, double *b, mplapackint const ldb, double *work, mplapackint const lwork, mplapackint &info);
void Rsysvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, double *af, mplapackint const ldaf, mplapackint *ipiv, double *b, mplapackint const ldb, double *x, mplapackint const ldx, double &rcond, double *ferr, double *berr, double *work, mplapackint const lwork, mplapackint *iwork, mplapackint &info);
void Rsytd2(const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *d, double *e, double *tau, mplapackint &info);
void Rsytf2(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rsytf2_rk(const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *e, mplapackint *ipiv, mplapackint &info);
void Rsytf2_rook(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rsytrd(const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *d, double *e, double *tau, double *work, mplapackint const lwork, mplapackint &info);
void Rsytri(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, double *work, mplapackint &info);
void Rsytri2(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, double *work, mplapackint const lwork, mplapackint &info);
void Rsytri_3(const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *e, mplapackint *ipiv, double *work, mplapackint const lwork, mplapackint &info);
void Rsytri_rook(const char *uplo, mplapackint const n, double *a, mplapackint const lda, mplapackint *ipiv, double *work, mplapackint &info);
void Rsytrs(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, mplapackint *ipiv, double *b, mplapackint const ldb, mplapackint &info);
void Rsytrs2(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, mplapackint *ipiv, double *b, mplapackint const ldb, double *work, mplapackint &info);
void Rsytrs_3(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, double *e, mplapackint *ipiv, double *b, mplapackint const ldb, mplapackint &info);
void Rsytrs_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, mplapackint *ipiv, double *b, mplapackint const ldb, double *work, mplapackint const lwork, mplapackint &info);
void Rsytrs_aa_2stage(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, double *tb, mplapackint const ltb, mplapackint *ipiv, mplapackint *ipiv2, double *b, mplapackint const ldb, mplapackint &info);
void Rsytrs_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, mplapackint *ipiv, double *b, mplapackint const ldb, mplapackint &info);
void Rtbtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const kd, mplapackint const nrhs, double *ab, mplapackint const ldab, double *b, mplapackint const ldb, mplapackint &info);
void Rtgexc(bool const wantq, bool const wantz, mplapackint const n, double *a, mplapackint const lda, double *b, mplapackint const ldb, double *q, mplapackint const ldq, double *z, mplapackint const ldz, mplapackint &ifst, mplapackint &ilst, double *work, mplapackint const lwork, mplapackint &info);
void Rtplqt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const mb, double *a, mplapackint const lda, double *b, mplapackint const ldb, double *t, mplapackint const ldt, double *work, mplapackint &info);
void Rtpmlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const mb, double *v, mplapackint const ldv, double *t, mplapackint const ldt, double *a, mplapackint const lda, double *b, mplapackint const ldb, double *work, mplapackint &info);
void Rtpmqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const nb, double *v, mplapackint const ldv, double *t, mplapackint const ldt, double *a, mplapackint const lda, double *b, mplapackint const ldb, double *work, mplapackint &info);
void Rtpqrt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const nb, double *a, mplapackint const lda, double *b, mplapackint const ldb, double *t, mplapackint const ldt, double *work, mplapackint &info);
void Rtprfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, double *v, mplapackint const ldv, double *t, mplapackint const ldt, double *a, mplapackint const lda, double *b, mplapackint const ldb, double *work, mplapackint const ldwork);
void Rtptrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, double *ap, double *b, mplapackint const ldb, mplapackint &info);
void Rtpttr(const char *uplo, mplapackint const n, double *ap, double *a, mplapackint const lda, mplapackint &info);
void Rtrexc(const char *compq, mplapackint const n, double *t, mplapackint const ldt, double *q, mplapackint const ldq, mplapackint &ifst, mplapackint &ilst, double *work, mplapackint &info);
void Rtrti2(const char *uplo, const char *diag, mplapackint const n, double *a, mplapackint const lda, mplapackint &info);
void Rtrtri(const char *uplo, const char *diag, mplapackint const n, double *a, mplapackint const lda, mplapackint &info);
void Rtrtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, double *a, mplapackint const lda, double *b, mplapackint const ldb, mplapackint &info);
void Rtrttp(const char *uplo, mplapackint const n, double *a, mplapackint const lda, double *ap, mplapackint &info);
#endif
