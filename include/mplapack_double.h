/*
 * Copyright (c) 2008-2010
 *	Nakata, Maho
 * 	All rights reserved.
 *
 * $Id: mplapack_double.h,v 1.4 2010/08/07 03:15:46 nakatamaho Exp $
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _MPLAPACK_DOUBLE_H_
#define _MPLAPACK_DOUBLE_H_

#include "mplapack_config.h"

/* MPLAPACK prototypes */

/* MPLAPACK driver routines */
void Rsyev ( const char *jobz, const char *uplo, mplapackint n, double * A, mplapackint lda, double * w, double * work, mplapackint lwork, mplapackint *info );
void Cheev ( const char *jobz, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double * w, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint *info );
void Rgesv ( mplapackint n, mplapackint nrhs, double * A, mplapackint lda, mplapackint *ipiv, double * B, mplapackint ldb, mplapackint *info );
void Cgesv ( mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, mplapackint *info );

/* MPLAPACK computational routines */
void Rsteqr ( const char *compz, mplapackint n, double * d, double * e, double * Z, mplapackint ldz, double * work, mplapackint *info );
void Csteqr ( const char *compz, mplapackint n, double * d, double * e, std::complex<double> * z, mplapackint ldz, double * work, mplapackint *info );
void Rsterf ( mplapackint n, double * d, double * e, mplapackint *info );
void Rorgqr ( mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cungqr ( mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rorgql ( mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cungql ( mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rsytrd ( const char *uplo, mplapackint n, double * A, mplapackint lda, double * d, double * e, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Chetrd ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double * d, double * e, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rorgtr ( const char *uplo, mplapackint n, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cungtr ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rpotrf ( const char *uplo, mplapackint n, double * A, mplapackint lda, mplapackint *info );
void Cpotrf ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *info );
void Rtrtri ( const char *uplo, const char *diag, mplapackint n, double * A, mplapackint lda, mplapackint *info );
void Ctrtri ( const char *uplo, const char *diag, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *info );
void Rgetrf ( mplapackint m, mplapackint n, double * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Cgetrf ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rgetri ( mplapackint n, double * A, mplapackint lda, mplapackint *ipiv, double * work, mplapackint lwork, mplapackint *info );
void Cgetri ( mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rgetrs ( const char *trans, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, mplapackint *ipiv, double * B, mplapackint ldb, mplapackint *info );
void Cgetrs ( const char *trans, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rtrtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * B, mplapackint ldb, mplapackint *info );
void Ctrtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, mplapackint *info );

/* MPLAPACK Auxiliary routines */
double Rlamc3 ( double a, double b );
double Rlamch_double(const char *cmach);
mplapackint iMlaenv_double(mplapackint ispec, const char *name, const char *opts, mplapackint n1, mplapackint n2,  mplapackint n3, mplapackint n4);
void Rlae2 ( double a, double b, double c, double * rt1, double * rt2 );
void Rlaev2 ( double a, double b, double c, double * rt1, double * rt2, double * cs1, double * sn1 );
void Claev2 ( std::complex<double> a, std::complex<double> b, std::complex<double> c, double * rt1, double * rt2, double * cs1, std::complex<double> * sn1 );
void Rlassq ( mplapackint n, double * x, mplapackint incx, double * scale, double * sumsq );
void Classq ( mplapackint n, std::complex<double> * x, mplapackint incx, double * scale, double * sumsq );
double Rlanst ( const char *norm, mplapackint n, double * d, double * e );
double Clanht ( const char *norm, mplapackint n, double * d, std::complex<double> * e );
double Rlansy ( const char *norm, const char *uplo, mplapackint n, double * A, mplapackint lda, double * work );
double Clansy ( const char *norm, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double * work );
double Clanhe ( const char *norm, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double * work );
double Rlapy2 ( double x, double y );
void Rlarfg ( mplapackint N, double * alpha, double * x, mplapackint incx, double * tau );
double Rlapy3 ( double x, double y, double z );
void Rladiv ( double a, double b, double c, double d, double * p, double * q );
std::complex<double> Cladiv ( std::complex<double> x, std::complex<double> y );
void Clarfg ( mplapackint n, std::complex<double> * alpha, std::complex<double> * x, mplapackint incx, std::complex<double> * tau );
void Rlartg ( double f, double g, double * cs, double * sn, double * r );
void Clartg ( std::complex<double> f, std::complex<double> g, double * cs, std::complex<double> * sn, std::complex<double> * r );
void Rlaset ( const char *uplo, mplapackint m, mplapackint n, double alpha, double beta, double * A, mplapackint lda );
void Claset ( const char *uplo, mplapackint m, mplapackint n, std::complex<double> alpha, std::complex<double> beta, std::complex<double> * A, mplapackint lda );
void Rlasr ( const char *side, const char *pivot, const char *direct, mplapackint m, mplapackint n, double * c, double * s, double * A, mplapackint lda );
void Clasr ( const char *side, const char *pivot, const char *direct, mplapackint m, mplapackint n, double * c, double * s, std::complex<double> * A, mplapackint lda );
void Rpotf2 ( const char *uplo, mplapackint n, double * A, mplapackint lda, mplapackint *info );
void Clacgv ( mplapackint n, std::complex<double> * x, mplapackint incx );
void Cpotf2 ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *info );
void Rlascl ( const char *type, mplapackint kl, mplapackint ku, double cfrom, double cto, mplapackint m, mplapackint n, double * A, mplapackint lda, mplapackint *info );
void Clascl ( const char *type, mplapackint kl, mplapackint ku, double cfrom, double cto, mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *info );
void Rlasrt ( const char *id, mplapackint n, double * d, mplapackint *info );
void Rsytd2 ( const char *uplo, mplapackint n, double * A, mplapackint lda, double * d, double * e, double * tau, mplapackint *info );
void Chetd2 ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double * d, double * e, std::complex<double> * tau, mplapackint *info );
void Rlarf ( const char *side, mplapackint m, mplapackint n, double * v, mplapackint incv, double tau, double * C, mplapackint ldc, double * work );
void Clarf ( const char *side, mplapackint m, mplapackint n, std::complex<double> * v, mplapackint incv, std::complex<double> tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work );
void Rorg2l ( mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * work, mplapackint *info );
void Cung2l ( mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint *info );
void Rorg2r ( mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * work, mplapackint *info );
void Cung2r ( mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint *info );
void Rlarft ( const char *direct, const char *storev, mplapackint n, mplapackint k, double * v, mplapackint ldv, double * tau, double * t, mplapackint ldt );
void Clarft ( const char *direct, const char *storev, mplapackint n, mplapackint k, std::complex<double> * v, mplapackint ldv, std::complex<double> * tau, std::complex<double> * t, mplapackint ldt );
void Rlarfb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, double * V, mplapackint ldv, double * T, mplapackint ldt, double * C, mplapackint ldc, double * work, mplapackint ldwork );
void Clarfb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * V, mplapackint ldv, std::complex<double> * T, mplapackint ldt, std::complex<double> * C, mplapackint ldc, std::complex<double> * work, mplapackint ldwork );
void Rlatrd ( const char *uplo, mplapackint n, mplapackint nb, double * A, mplapackint lda, double * e, double * tau, double * w, mplapackint ldw );
void Clatrd ( const char *uplo, mplapackint n, mplapackint nb, std::complex<double> * A, mplapackint lda, double * e, std::complex<double> * tau, std::complex<double> * w, mplapackint ldw );
void Clacrm ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, double * B, mplapackint ldb, std::complex<double> * c, mplapackint ldc, double * rwork );
void Rtrti2 ( const char *uplo, const char *diag, mplapackint n, double * A, mplapackint lda, mplapackint *info );
void Ctrti2 ( const char *uplo, const char *diag, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *info );
void Rgetf2 ( mplapackint m, mplapackint n, double * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Cgetf2 ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rlaswp ( mplapackint n, double * A, mplapackint lda, mplapackint k1, mplapackint k2, mplapackint *ipiv, mplapackint incx );
void Claswp ( mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint k1, mplapackint k2, mplapackint *ipiv, mplapackint incx );
void Rlasyf ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, double * A, mplapackint lda, mplapackint *ipiv, double * w, mplapackint ldw, mplapackint *info );
void Clasyf ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * w, mplapackint ldw, mplapackint *info );
void Clahef ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * w, mplapackint ldw, mplapackint *info );
void Clacrt ( mplapackint n, std::complex<double> * cx, mplapackint incx, std::complex<double> * cy, mplapackint incy, std::complex<double> c, std::complex<double> s );
void Claesy ( std::complex<double> a, std::complex<double> b, std::complex<double> c, std::complex<double> * rt1, std::complex<double> * rt2, std::complex<double> * evscal, std::complex<double> * cs1, std::complex<double> * sn1 );
void Crot ( mplapackint n, std::complex<double> * cx, mplapackint incx, std::complex<double> * cy, mplapackint incy, double c, std::complex<double> s );
void Cspmv ( const char *uplo, mplapackint n, std::complex<double> alpha, std::complex<double> * AP, std::complex<double> * x, mplapackint incx, std::complex<double> beta, std::complex<double> * y, mplapackint incy );
void Cspr ( const char *uplo, mplapackint n, std::complex<double> alpha, std::complex<double> * x, mplapackint incx, std::complex<double> * AP );
void Csymv ( const char *uplo, mplapackint n, std::complex<double> alpha, std::complex<double> * A, mplapackint lda, std::complex<double> * x, mplapackint incx, std::complex<double> beta, std::complex<double> * y, mplapackint incy );
void Csyr ( const char *uplo, mplapackint n, std::complex<double> alpha, std::complex<double> * x, mplapackint incx, std::complex<double> * A, mplapackint lda );
mplapackint iCmax1 ( mplapackint n, std::complex<double> * cx, mplapackint incx );
double RCsum1 ( mplapackint n, std::complex<double> * cx, mplapackint incx );
void Rlacn2 ( mplapackint n, double * v, double * x, mplapackint *isgn, double * est, mplapackint *kase, mplapackint *isave );
void Clacn2 ( mplapackint n, std::complex<double> * v, std::complex<double> * x, double * est, mplapackint *kase, mplapackint *isave );
void Rlatrs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, double * A, mplapackint lda, double * x, double * scale, double * cnorm, mplapackint *info );
void Clatrs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * x, double * scale, double * cnorm, mplapackint *info );

/* not yet done ... auxiliary routines */
void Rgbtf2 ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, double * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Cgbtf2 ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, std::complex<double> * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Rgebd2 ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * d, double * e, double * tauq, double * taup, double * work, mplapackint *info );
void Cgebd2 ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, double * d, double * e, std::complex<double> * tauq, std::complex<double> * taup, std::complex<double> * work, mplapackint *info );
void Rgehd2 ( mplapackint n, mplapackint ilo, mplapackint ihi, double * A, mplapackint lda, double * tau, double * work, mplapackint *info );
void Cgehd2 ( mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint *info );
void Rgelq2 ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, double * work, mplapackint *info );
void Cgelq2 ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint *info );
void Rgeql2 ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, double * work, mplapackint *info );
void Cgeql2 ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint *info );
void Rgeqr2 ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, double * work, mplapackint *info );
void Cgeqr2 ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint *info );
void Rgerq2 ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, double * work, mplapackint *info );
void Cgerq2 ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint *info );
void Rgesc2 ( mplapackint n, double * A, mplapackint lda, double * rhs, mplapackint *ipiv, mplapackint *jpiv, double * scale );
void Cgesc2 ( mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * rhs, mplapackint *ipiv, mplapackint *jpiv, double * scale );
void Rgetc2 ( mplapackint n, double * A, mplapackint lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint *info );
void Cgetc2 ( mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint *info );
void Rgtts2 ( mplapackint itrans, mplapackint n, mplapackint nrhs, double * dl, double * d, double * du, double * du2, mplapackint *ipiv, double * B, mplapackint ldb );
void Cgtts2 ( mplapackint itrans, mplapackint n, mplapackint nrhs, std::complex<double> * dl, std::complex<double> * d, std::complex<double> * du, std::complex<double> * du2, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb );
void Rlabrd ( mplapackint m, mplapackint n, mplapackint nb, double * A, mplapackint lda, double * d, double * e, double * tauq, double * taup, double * x, mplapackint ldx, double * y, mplapackint ldy );
void Clabrd ( mplapackint m, mplapackint n, mplapackint nb, std::complex<double> * A, mplapackint lda, double * d, double * e, std::complex<double> * tauq, std::complex<double> * taup, std::complex<double> * x, mplapackint ldx, std::complex<double> * y, mplapackint ldy );
void Rlacpy ( const char *uplo, mplapackint m, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb );
void Clacpy ( const char *uplo, mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb );
void Clarcm ( mplapackint m, mplapackint n, double * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * c, mplapackint ldc, double * rwork );
void Rlaebz ( mplapackint ijob, mplapackint nitmax, mplapackint n, mplapackint mmax, mplapackint minp, mplapackint nbmin, double abstol, double reltol, double pivmin, double * d, double * e, double * e2, mplapackint *nval, double * AB, double * c, mplapackint *mout, mplapackint *nab, double * work, mplapackint *iwork, mplapackint *info );
void Rlaed0 ( mplapackint icompq, mplapackint qsiz, mplapackint n, double * d, double * e, double * q, mplapackint ldq, double * qstore, mplapackint ldqs, double * work, mplapackint *iwork, mplapackint *info );
void Claed0 ( mplapackint qsiz, mplapackint n, double * d, double * e, std::complex<double> * q, mplapackint ldq, std::complex<double> * qstore, mplapackint ldqs, double * rwork, mplapackint *iwork, mplapackint *info );
void Rlaed1 ( mplapackint n, double * d, double * q, mplapackint ldq, mplapackint *indxq, double rho, mplapackint cutpnt, double * work, mplapackint *iwork, mplapackint *info );
void Rlaed2 ( mplapackint *k, mplapackint n, mplapackint n1, double * d, double * q, mplapackint ldq, mplapackint *indxq, double * rho, double * z, double * dlamda, double * w, double * q2, mplapackint *indx, mplapackint *indxc, mplapackint *indxp, mplapackint *coltyp, mplapackint *info );
void Rlaed3 ( mplapackint k, mplapackint n, mplapackint n1, double * d, double * q, mplapackint ldq, double * rho, double * dlamda, double * q2, mplapackint *indx, mplapackint *ctot, double * w, double * s, mplapackint *info );
void Rlaed4 ( mplapackint n, mplapackint i, double * d, double * z, double * delta, double rho, double * dlam, mplapackint *info );
void Rlaed5 ( mplapackint i, double * d, double * z, double * delta, double rho, double * dlam );
void Rlaed6 ( mplapackint kniter, mplapackint orgati, double rho, double * d, double * z, double * finit, double * tau, mplapackint *info );
void Rlaed7 ( mplapackint icompq, mplapackint n, mplapackint qsiz, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, double * d, double * q, mplapackint ldq, mplapackint *indxq, double rho, mplapackint cutpnt, double * qstore, mplapackint *qptr, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, double * givnum, double * work, mplapackint *iwork, mplapackint *info );
void Claed7 ( mplapackint n, mplapackint cutpnt, mplapackint qsiz, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, double * d, std::complex<double> * q, mplapackint ldq, double rho, mplapackint *indxq, double * qstore, mplapackint *qptr, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, double * givnum, std::complex<double> * work, double * rwork, mplapackint *iwork, mplapackint *info );
void Rlaed8 ( mplapackint icompq, mplapackint *k, mplapackint n, mplapackint qsiz, double * d, double * q, mplapackint ldq, mplapackint *indxq, double * rho, mplapackint cutpnt, double * z, double * dlamda, double * q2, mplapackint ldq2, double * w, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, double * givnum, mplapackint *indxp, mplapackint *indx, mplapackint *info );
void Claed8 ( mplapackint *k, mplapackint n, mplapackint qsiz, std::complex<double> * q, mplapackint ldq, double * d, double * rho, mplapackint cutpnt, double * z, double * dlamda, std::complex<double> * q2, mplapackint ldq2, double * w, mplapackint *indxp, mplapackint *indx, mplapackint *indxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, double * givnum, mplapackint *info );
void Rlaed9 ( mplapackint k, mplapackint kstart, mplapackint kstop, mplapackint n, double * d, double * q, mplapackint ldq, double rho, double * dlamda, double * w, double * s, mplapackint lds, mplapackint *info );
void Rlaeda ( mplapackint n, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, double * givnum, double * q, mplapackint *qptr, double * z, double * ztemp, mplapackint *info );
void Rlaein ( mplapackint rightv, mplapackint noinit, mplapackint n, double * h, mplapackint ldh, double wr, double wi, double * vr, double * vi, double * B, mplapackint ldb, double * work, double eps3, double smlnum, double bignum, mplapackint *info );
void Claein ( mplapackint rightv, mplapackint noinit, mplapackint n, std::complex<double> * h, mplapackint ldh, std::complex<double> w, std::complex<double> * v, std::complex<double> * B, mplapackint ldb, double * rwork, double eps3, double smlnum, mplapackint *info );
void Rlaexc ( mplapackint wantq, mplapackint n, double * t, mplapackint ldt, double * q, mplapackint ldq, mplapackint j1, mplapackint n1, mplapackint n2, double * work, mplapackint *info );
void Rlag2 ( double * A, mplapackint lda, double * B, mplapackint ldb, double safmin, double * scale1, double * scale2, double * wr1, double * wr2, double * wi );
void Rlags2 ( mplapackint upper, double a1, double a2, double a3, double b1, double b2, double b3, double * csu, double * snu, double * csv, double * snv, double * csq, double * snq );
void Clags2 ( mplapacklogical * upper, double a1, std::complex<double> a2, double a3, double b1, std::complex<double> b2, double b3, double * csu, std::complex<double> * snu, double * csv, std::complex<double> * snv, double * csq, std::complex<double> * snq );
void Rlagtf ( mplapackint n, double * a, double lambda, double * b, double * c, double * tol, double * d, mplapackint *in, mplapackint *info );
void Rlagtm ( const char *trans, mplapackint n, mplapackint nrhs, double alpha, double * dl, double * d, double * du, double * x, mplapackint ldx, double * beta, double * B, mplapackint ldb );
void Clagtm ( const char *trans, mplapackint n, mplapackint nrhs, double alpha, std::complex<double> * dl, std::complex<double> * d, std::complex<double> * du, std::complex<double> * x, mplapackint ldx, double beta, std::complex<double> * B, mplapackint ldb );
void Rlagts ( mplapackint job, mplapackint n, double * a, double * b, double * c, double * d, mplapackint *in, double * y, double * tol, mplapackint *info );
void Rlagv2 ( double * A, mplapackint lda, double * B, mplapackint ldb, double * alphar, double * alphai, double * beta, double * csl, double * snl, double * csr, double * snr );
void Rlahqr ( mplapackint wantt, mplapackint wantz, mplapackint n, mplapackint ilo, mplapackint ihi, double * h, mplapackint ldh, double * wr, double * wi, mplapackint iloz, mplapackint ihiz, double * z, mplapackint ldz, mplapackint *info );
void Clahqr ( mplapackint wantt, mplapackint wantz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<double> * h, mplapackint ldh, std::complex<double> * w, mplapackint iloz, mplapackint ihiz, std::complex<double> * z, mplapackint ldz, mplapackint *info );
void Rlahr2 ( mplapackint n, mplapackint k, mplapackint nb, double * A, mplapackint lda, double * tau, double * t, mplapackint ldt, double * y, mplapackint ldy );
void Clahr2 ( mplapackint n, mplapackint k, mplapackint nb, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * t, mplapackint ldt, std::complex<double> * y, mplapackint ldy );
void Rlahrd ( mplapackint n, mplapackint k, mplapackint nb, double * A, mplapackint lda, double * tau, double * t, mplapackint ldt, double * y, mplapackint ldy );
void Clahrd ( mplapackint n, mplapackint k, mplapackint nb, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * t, mplapackint ldt, std::complex<double> * y, mplapackint ldy );
void Rlaic1 ( mplapackint job, mplapackint j, double * x, double sest, double * w, double gamma, double * sestpr, double * s, double * c );
void Claic1 ( mplapackint job, mplapackint j, std::complex<double> * x, double sest, std::complex<double> * w, std::complex<double> gamma, double * sestpr, std::complex<double> * s, std::complex<double> * c );
void Rlaln2 ( mplapackint ltrans, mplapackint na, mplapackint nw, double smin, double ca, double * A, mplapackint lda, double d1, double d2, double * B, mplapackint ldb, double wr, double wi, double * x, mplapackint ldx, double * scale, double * xnorm, mplapackint *info );
void Rlals0 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint nrhs, double * B, mplapackint ldb, double * bx, mplapackint ldbx, mplapackint *perm, mplapackint givptr, mplapackint *givcol, mplapackint ldgcol, double * givnum, mplapackint ldgnum, double * poles, double * difl, double * difr, double * z, mplapackint k, double c, double s, double * work, mplapackint *info );
void Clals0 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint nrhs, std::complex<double> * B, mplapackint ldb, std::complex<double> * bx, mplapackint ldbx, mplapackint *perm, mplapackint givptr, mplapackint *givcol, mplapackint ldgcol, double * givnum, mplapackint ldgnum, double * poles, double * difl, double * difr, double * z, mplapackint k, double c, double s, double * rwork, mplapackint *info );
void Rlalsa ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint nrhs, double * B, mplapackint ldb, double * bx, mplapackint ldbx, double * u, mplapackint ldu, double * vt, mplapackint *k, double * difl, double * difr, double * z, double * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, double * givnum, double * c, double * s, double * work, mplapackint *iwork, mplapackint *info );
void Clalsa ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint nrhs, std::complex<double> * B, mplapackint ldb, std::complex<double> * bx, mplapackint ldbx, double * u, mplapackint ldu, double * vt, mplapackint *k, double * difl, double * difr, double * z, double * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, double * givnum, double * c, double * s, double * rwork, mplapackint *iwork, mplapackint *info );
void Rlalsd ( const char *uplo, mplapackint smlsiz, mplapackint n, mplapackint nrhs, double * d, double * e, double * B, mplapackint ldb, double rcond, mplapackint *rank, double * work, mplapackint *iwork, mplapackint *info );
void Clalsd ( const char *uplo, mplapackint smlsiz, mplapackint n, mplapackint nrhs, double * d, double * e, std::complex<double> * B, mplapackint ldb, double rcond, mplapackint *rank, std::complex<double> * work, double * rwork, mplapackint *iwork, mplapackint *info );
void Rlamrg ( mplapackint n1, mplapackint n2, double * a, mplapackint dtrd1, mplapackint dtrd2, mplapackint *index );
double Rlangb ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, double * ab, mplapackint ldab, double * work );
double Clangb ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, std::complex<double> * AB, mplapackint ldab, double * work );
double Rlange ( const char *norm, mplapackint m, mplapackint n, double * A, mplapackint lda, double * work );
double Clange ( const char *norm, mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, double * work );
double Rlangt ( const char *norm, mplapackint n, double * dl, double * d, double * du );
double Clangt ( const char *norm, mplapackint n, std::complex<double> * dl, std::complex<double> * d, std::complex<double> * du );
double Rlanhs ( const char *norm, mplapackint n, double * A, mplapackint lda, double * work );
double Clanhs ( const char *norm, mplapackint n, std::complex<double> * A, mplapackint lda, double * work );
double Rlansb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, double * AB, mplapackint ldab, double * work );
double Clansb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, std::complex<double> * AB, mplapackint ldab, double * work );
double Clanhb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, std::complex<double> * AB, mplapackint ldab, double * work );
double Rlansp ( const char *norm, const char *uplo, mplapackint n, double * ap, double * work );
double Clansp ( const char *norm, const char *uplo, mplapackint n, std::complex<double> * ap, double * work );
double Clanhp ( const char *norm, const char *uplo, mplapackint n, std::complex<double> * ap, double * work );
double Rlantb ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint k, double * AB, mplapackint ldab, double * work );
std::complex<double> Clantb ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint k, std::complex<double> * AB, mplapackint ldab, double * work );
double Rlantp ( const char *norm, const char *uplo, const char *diag, mplapackint n, double * ap, double * work );
std::complex<double> Clantp ( const char *norm, const char *uplo, const char *diag, mplapackint n, std::complex<double> * ap, double * work );
double Rlantr ( const char *norm, const char *uplo, const char *diag, mplapackint m, mplapackint n, double * A, mplapackint lda, double * work );
double Clantr ( const char *norm, const char *uplo, const char *diag, mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, double * work );
void Rlanv2 ( double * a, double * b, double * c, double * d, double * rt1r, double * rt1i, double * rt2r, double * rt2i, double * cs, double * sn );
void Rlapll ( mplapackint n, double * x, mplapackint incx, double * y, mplapackint incy, double * ssmin );
void Clapll ( mplapackint n, std::complex<double> * x, mplapackint incx, std::complex<double> * y, mplapackint incy, double * ssmin );
void Rlapmt ( mplapackint *forwrd, mplapackint m, mplapackint n, double * X, mplapackint ldx, mplapackint *k );
void Clapmt ( mplapackint *forwrd, mplapackint m, mplapackint n, std::complex<double> * X, mplapackint ldx, mplapackint *k );
void Rlaqgb ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, double * AB, mplapackint ldab, double * r, double * c, double rowcnd, double colcnd, double amax, char *equed );
void Claqgb ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, std::complex<double> * AB, mplapackint ldab, double * r, double * c, double rowcnd, double colcnd, double amax, char *equed );
void Rlaqge ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * r, double * c, double rowcnd, double colcnd, double amax, char *equed );
void Claqge ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, double * r, double * c, double rowcnd, double colcnd, double amax, char *equed );
void Rlaqp2 ( mplapackint m, mplapackint n, mplapackint offset, double * A, mplapackint lda, mplapackint *jpvt, double * tau, double * vn1, double * vn2, double * work );
void Claqp2 ( mplapackint m, mplapackint n, mplapackint offset, std::complex<double> * A, mplapackint lda, mplapackint *jpvt, std::complex<double> * tau, double * vn1, double * vn2, std::complex<double> * work );
void Rlaqps ( mplapackint m, mplapackint n, mplapackint offset, mplapackint nb, mplapackint *kb, double * A, mplapackint lda, mplapackint *jpvt, double * tau, double * vn1, double * vn2, double * auxv, double * f, mplapackint ldf );
void Claqps ( mplapackint m, mplapackint n, mplapackint offset, mplapackint nb, mplapackint *kb, std::complex<double> * A, mplapackint lda, mplapackint *jpvt, std::complex<double> * tau, double * vn1, double * vn2, std::complex<double> * auxv, std::complex<double> * f, mplapackint ldf );
void Rlaqsb ( const char *uplo, mplapackint n, mplapackint kd, double * ab, mplapackint ldab, double * s, double scond, double amax, char *equed );
void Claqsb ( const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * ab, mplapackint ldab, double * s, double scond, double amax, char *equed );
void Claqhb ( const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, double * s, double scond, double amax, char *equed );
void Rlaqsp ( const char *uplo, mplapackint n, double * ap, double * s, double scond, double amax, char *equed );
void Claqsp ( const char *uplo, mplapackint n, std::complex<double> * ap, double * s, double scond, double amax, char *equed );
void Claqhp ( const char *uplo, mplapackint n, std::complex<double> * ap, double * s, double scond, double amax, char *equed );
void Rlaqsy ( const char *uplo, mplapackint n, double * A, mplapackint lda, double * s, double scond, double amax, char *equed );
void Claqsy ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double * s, double scond, double amax, char *equed );
void Claqhe ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double * s, double scond, double amax, char *equed );
void Rlaqtr ( mplapackint ltran, mplapackint lreal, mplapackint n, double * t, mplapackint ldt, double * B, double w, double * scale, double * x, double * work, mplapackint *info );
void Rlar1v ( mplapackint n, mplapackint b1, mplapackint bn, double lambda, double * d, double * l, double * ld, double * lld, double pivmin, double gaptol, double * z, mplapackint wantnc, mplapackint *negcnt, double * ztz, double * mingma, mplapackint *r, mplapackint *isuppz, double * nrminv, double * resid, double * rqcorr, double * work );
void Clar1v ( mplapackint n, mplapackint b1, mplapackint bn, double lambda, double * d, double * l, double * ld, double * lld, double pivmin, double gaptol, std::complex<double> * z, mplapackint wantnc, mplapackint *negcnt, double * ztz, double * mingma, mplapackint *r, mplapackint *isuppz, double * nrminv, double * resid, double * rqcorr, double * work );
void Rlar2v ( mplapackint n, double * x, double * y, double * z, mplapackint incx, double * c, double * s, mplapackint incc );
void Clar2v ( mplapackint n, std::complex<double> * x, std::complex<double> * y, std::complex<double> * z, mplapackint incx, double * c, std::complex<double> * s, mplapackint incc );
void Rlarfx ( const char *side, mplapackint m, mplapackint n, double * v, double tau, double * c, mplapackint ldc, double * work );
void Clarfx ( const char *side, mplapackint m, mplapackint n, std::complex<double> * v, std::complex<double> tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work );
void Rlargv ( mplapackint n, double * x, mplapackint incx, double * y, mplapackint incy, double * c, mplapackint incc );
void Clargv ( mplapackint n, std::complex<double> * x, mplapackint incx, std::complex<double> * y, mplapackint incy, double * c, mplapackint incc );
void Rlarnv ( mplapackint idist, mplapackint *iseed, mplapackint n, double * x );
void Clarnv ( mplapackint idist, mplapackint *iseed, mplapackint n, std::complex<double> * x );
mplapackint Rlaneg ( mplapackint n, double * d, double * lld, double sigma, double pivmin, mplapackint r );
void Rlarra ( mplapackint n, double * d, double * e, double * e2, double spltol, double tnrm, mplapackint *nsplit, mplapackint *isplit, mplapackint *info );
void Rlarrb ( mplapackint n, double * d, double * lld, mplapackint ifirst, mplapackint ilast, double rtol1, double rtol2, mplapackint offset, double * w, double * wgap, double * werr, double * work, mplapackint *iwork, double pivmin, double spdiam, mplapackint twist, mplapackint *info );
void Rlarrc ( const char *jobt, mplapackint n, double vl, double vu, double * d, double * e, double pivmin, mplapackint *eigcnt, mplapackint *lcnt, mplapackint *rcnt, mplapackint *info );
void Rlarrd ( const char *range, const char *order, mplapackint n, double vl, double vu, mplapackint il, mplapackint iu, double *gers, double reltol, double * d, double * e, double * e2, double pivmin, mplapackint nsplit, mplapackint *isplit, mplapackint *m, double * w, double * werr, double * wl, double * wu, mplapackint *iblock, mplapackint *indexw, double * work, mplapackint *iwork, mplapackint *info );
void Rlarre ( const char *range, mplapackint n, double * vl, double * vu, mplapackint il, mplapackint iu, double * d, double * e, double * e2, double rtol1, double rtol2, double spltol, mplapackint * nsplit, mplapackint *isplit, mplapackint * m, double * w, double * werr, double * wgap, mplapackint *iblock, mplapackint *indexw, double * gers, double * pivmin, double * work, mplapackint *iwork, mplapackint *info );
void Rlarrf ( mplapackint n, double * d, double * l, double * ld, mplapackint clstrt, mplapackint clend, double * w, double * wgap, double * werr, double spdiam, double clgapl, double clgapr, double pivmin, double * sigma, double * dplus, double * lplus, double * work, mplapackint *info );
void Rlarrj ( mplapackint n, double * d, double * e2, mplapackint ifirst, mplapackint ilast, double rtol, mplapackint offset, double * w, double * werr, double * work, mplapackint *iwork, double pivmin, double spdiam, mplapackint *info );
void Rlarrk ( mplapackint n, mplapackint iw, double gl, double gu, double * d, double * e2, double pivmin, double reltol, double * w, double * werr, mplapackint *info );
void Rlarrr ( mplapackint n, double * d, double * e, mplapackint *info );
void Rlartv ( mplapackint n, double * x, mplapackint incx, double * y, mplapackint incy, double * c, double * s, mplapackint incc );
void Clartv ( mplapackint n, std::complex<double> * x, mplapackint incx, std::complex<double> * y, mplapackint incy, double * c, std::complex<double> * s, mplapackint incc );
void Rlarrv ( mplapackint n, double vl, double vu, double * d, double * l, double pivmin, mplapackint * isplit, mplapackint m, mplapackint dol, mplapackint dou, double minrgp, double rtol1, double rtol2, double * w, double * werr, double * wgap, mplapackint * iblock, mplapackint * indexw, double * gers, double * z, mplapackint ldz, mplapackint * isuppz, double * work, mplapackint * iwork, mplapackint * info );
void Clarrv ( mplapackint n, double vl, double vu, double * d, double * l, double pivmin, mplapackint *isplit, mplapackint m, mplapackint dol, mplapackint dou, double minrgp, double rtol1, double rtol2, double * w, double * werr, double * wgap, mplapackint *iblock, mplapackint *indexw, double * gers, std::complex<double> * z, mplapackint ldz, mplapackint *isuppz, double * work, mplapackint *iwork, mplapackint *info );
void Rlaruv ( mplapackint *iseed, mplapackint n, double * x );
void Rlarz ( const char *side, mplapackint m, mplapackint n, mplapackint l, double * v, mplapackint incv, double tau, double * C, mplapackint ldc, double * work );
void Clarz ( const char *side, mplapackint m, mplapackint n, mplapackint l, std::complex<double> * v, mplapackint incv, std::complex<double> tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work );
void Rlarzb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mplapackint l, double * v, mplapackint ldv, double * t, mplapackint ldt, double * c, mplapackint ldc, double * work, mplapackint ldwork );
void Clarzb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mplapackint l, std::complex<double> * v, mplapackint ldv, std::complex<double> * t, mplapackint ldt, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint ldwork );
void Rlarzt ( const char *direct, const char *storev, mplapackint n, mplapackint k, double * v, mplapackint ldv, double * tau, double * t, mplapackint ldt );
void Clarzt ( const char *direct, const char *storev, mplapackint n, mplapackint k, std::complex<double> * v, mplapackint ldv, std::complex<double> * tau, std::complex<double> * t, mplapackint ldt );
void Rlas2 ( double f, double g, double h, double * ssmin, double * ssmax );
void Rlasd0 ( mplapackint n, mplapackint sqre, double * d, double * e, double * u, mplapackint ldu, double * vt, mplapackint ldvt, mplapackint smlsiz, mplapackint *iwork, double * work, mplapackint *info );
void Rlasd1 ( mplapackint nl, mplapackint nr, mplapackint *sqre, double * d, double * alpha, double * beta, double * u, mplapackint ldu, double * vt, mplapackint ldvt, mplapackint *idxq, mplapackint *iwork, double * work, mplapackint *info );
void Rlasd2 ( mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint *k, double * d, double * z, double alpha, double beta, double * u, mplapackint ldu, double * vt, mplapackint ldvt, double * dsigma, double * u2, mplapackint ldu2, double * vt2, mplapackint ldvt2, mplapackint *idxp, mplapackint *idx, mplapackint *idxc, mplapackint *idxq, mplapackint *coltyp, mplapackint *info );
void Rlasd3 ( mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint k, double * d, double * q, mplapackint ldq, double * dsigma, double * u, mplapackint ldu, double * u2, mplapackint ldu2, double * vt, mplapackint ldvt, double * vt2, mplapackint ldvt2, mplapackint *idxc, mplapackint *ctot, double * z, mplapackint *info );
void Rlasd4 ( mplapackint n, mplapackint i, double * d, double * z, double * delta, double rho, double * sigma, double * work, mplapackint *info );
void Rlasd5 ( mplapackint i, double * d, double * z, double * delta, double rho, double * dsigma, double * work );
void Rlasd6 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, double * d, double * vf, double * vl, double * alpha, double * beta, mplapackint *idxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, double * givnum, mplapackint ldgnum, double * poles, double * difl, double * difr, double * z, mplapackint k, double * c, double * s, double * work, mplapackint *iwork, mplapackint *info );
void Rlasd7 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint k, double * d, double * z, double * zw, double * vf, double * vfw, double * vl, double * vlw, double alpha, double beta, double * dsigma, mplapackint *idx, mplapackint *idxp, mplapackint *idxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, double * givnum, mplapackint ldgnum, double * c, double * s, mplapackint *info );
void Rlasd8 ( mplapackint icompq, mplapackint k, double * d, double * z, double * vf, double * vl, double * difl, double * difr, mplapackint lddifr, double * dsigma, double * work, mplapackint *info );
void Rlasda ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint sqre, double * d, double * e, double * u, mplapackint ldu, double * vt, mplapackint *k, double * difl, double * difr, double * z, double * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, double * givnum, double * c, double * s, double * work, mplapackint *iwork, mplapackint *info );
void Rlasdq ( const char *uplo, mplapackint sqre, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, double * d, double * e, double * vt, mplapackint ldvt, double * u, mplapackint ldu, double * c, mplapackint ldc, double * work, mplapackint *info );
void Rlasdt ( mplapackint n, mplapackint lvl, mplapackint nd, mplapackint *inode, mplapackint *ndiml, mplapackint *ndimr, mplapackint msub );
void Rlasq1 ( mplapackint n, double * d, double * e, double * work, mplapackint *info );
void Rlasq2 ( mplapackint n, double * z, mplapackint *info );
void Rlasq3 ( mplapackint i0, mplapackint n0, double * z, mplapackint pp, double * dmin, double * sigma, double * desig, double qmax, mplapackint *nfail, mplapackint *iter, mplapackint *ndiv, mplapackint ieee );
void Rlasq4 ( mplapackint i0, mplapackint n0, double * z, mplapackint pp, mplapackint n0in, double dmin, double dmin1, double dmin2, double dn, double dn1, double dn2, double * tau, mplapackint *ttype );
void Rlasq5 ( mplapackint i0, mplapackint n0, double * z, mplapackint pp, double tau, double * dmin, double * dmin1, double * dmin2, double * dn, double * dnm1, double * dnm2, mplapackint ieee );
void Rlasq6 ( mplapackint i0, mplapackint n0, double * z, mplapackint pp, double * dmin, double * dmin1, double * dmin2, double * dn, double * dnm1, double * dnm2 );
void Rlasv2 ( double f, double g, double h, double * ssmin, double * ssmax, double * snr, double * csr, double * snl, double * csl );
void Rlasy2 ( mplapackint ltranl, mplapackint ltranr, mplapackint isgn, mplapackint n1, mplapackint n2, double * tl, mplapackint ldtl, double * tr, mplapackint ldtr, double * B, mplapackint ldb, double * scale, double * x, mplapackint ldx, double * xnorm, mplapackint *info );
void Rlatbs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mplapackint kd, double * AB, mplapackint ldab, double * x, double * scale, double * cnorm, mplapackint *info );
void Clatbs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, std::complex<double> * x, double * scale, double * cnorm, mplapackint *info );
void Rlatdf ( mplapackint ijob, mplapackint n, double * z, mplapackint ldz, double * rhs, double * rdsum, double * rdscal, mplapackint *ipiv, mplapackint *jpiv );
void Clatdf ( mplapackint ijob, mplapackint n, std::complex<double> * z, mplapackint ldz, std::complex<double> * rhs, double * rdsum, double * rdscal, mplapackint *ipiv, mplapackint *jpiv );
void Rlatps ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, double * ap, double * x, double * scale, double * cnorm, mplapackint *info );
void Clatps ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, std::complex<double> * ap, std::complex<double> * x, double * scale, double * cnorm, mplapackint *info );
void Rlauu2 ( const char *uplo, mplapackint n, double * A, mplapackint lda, mplapackint *info );
void Clauu2 ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *info );
void Rlauum ( const char *uplo, mplapackint n, double * A, mplapackint lda, mplapackint *info );
void Clauum ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *info );
void Rlatrz ( mplapackint m, mplapackint n, mplapackint l, double * A, mplapackint lda, double * tau, double * work );
void Clatrz ( mplapackint m, mplapackint n, mplapackint l, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work );
void Rorgl2 ( mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * work, mplapackint *info );
void Cungl2 ( mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint *info );
void Rorgr2 ( mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * work, mplapackint *info );
void Cungr2 ( mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint *info );
void Rorm2l ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint *info );
void Cunm2l ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint *info );
void Rorm2r ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint *info );
void Cunm2r ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint *info );
void Rorml2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint *info );
void Cunml2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint *info );
void Rormr2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * C, mplapackint ldc, double * work, mplapackint *info );
void Cunmr2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint *info );
void Rormr3 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint *info );
void Cunmr3 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint *info );
void Rpbtf2 ( const char *uplo, mplapackint n, mplapackint kd, double * AB, mplapackint ldab, mplapackint *info );
void Cpbtf2 ( const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, mplapackint *info );
void Rptts2 ( mplapackint n, mplapackint nrhs, double * d, double * e, double * b, mplapackint ldb );
void Cptts2 ( mplapackint iuplo, mplapackint n, mplapackint nrhs, double * d, std::complex<double> * e, std::complex<double> * B, mplapackint ldb );
void Rrscl ( mplapackint n, double sa, double * sx, mplapackint incx );
void CRrscl ( mplapackint n, double sa, std::complex<double> * sx, mplapackint incx );
void Rsygs2 ( mplapackint itype, const char *uplo, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, mplapackint *info );
void Chegs2 ( mplapackint itype, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rsytf2 ( const char *uplo, mplapackint n, double * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Csytf2 ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Chetf2 ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rtgex2 ( mplapackint wantq, mplapackint wantz, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * q, mplapackint ldq, double * z, mplapackint ldz, mplapackint j1, mplapackint n1, mplapackint n2, double * work, mplapackint lwork, mplapackint *info );
void Ctgex2 ( mplapackint wantq, mplapackint wantz, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * q, mplapackint ldq, std::complex<double> * z, mplapackint ldz, mplapackint j1, mplapackint *info );
void Rtgsy2 ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * c, mplapackint ldc, double * d, mplapackint ldd, double * e, mplapackint lde, double * f, mplapackint ldf, double * scale, double * rdsum, double * rdscal, mplapackint *iwork, mplapackint *pq, mplapackint *info );
void Ctgsy2 ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * C, mplapackint ldc, std::complex<double> * d, mplapackint ldd, std::complex<double> * e, mplapackint lde, std::complex<double> * f, mplapackint ldf, double * scale, double * rdsum, double * rdscal, mplapackint *info );
void Rlazq3 ( mplapackint i0, mplapackint n0, double * z, mplapackint pp, double * dmin, double * sigma, double * desig, double qmax, mplapackint *nfail, mplapackint *iter, mplapackint *ndiv, mplapackint *ieee, mplapackint *ttype, double * dmin1, double * dmin2, double * dn, double * dn1, double * dn2, double * tau );
void Rlazq4 ( mplapackint i0, mplapackint n0, double * z, mplapackint pp, mplapackint n0in, double dmin, double dmin1, double dmin2, double dn, double dn1, double dn2, double * tau, mplapackint *ttype, double * g );
void Rlaqr0 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, double * h, mplapackint ldh, double * wr, double * wi, mplapackint iloz, mplapackint ihiz, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *info );
void Claqr0 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<double> * h, mplapackint ldh, std::complex<double> * w, mplapackint *iloz, mplapackint *ihiz, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rlaqr1 ( mplapackint n, double * h, mplapackint ldh, double sr1, double si1, double sr2, double si2, double * v );
void Claqr1 ( mplapackint n, std::complex<double> * h, mplapackint ldh, std::complex<double> s1, std::complex<double> s2, std::complex<double> * v );
void Rlaqr2 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, double * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, double * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, double * sr, double * si, double * v, mplapackint ldv, mplapackint nh, double * t, mplapackint ldt, mplapackint nv, double * wv, mplapackint ldwv, double * work, mplapackint lwork );
void Claqr2 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, std::complex<double> * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, std::complex<double> * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, std::complex<double> * sh, std::complex<double> * v, mplapackint ldv, mplapackint nh, std::complex<double> * t, mplapackint ldt, mplapackint nv, std::complex<double> * wv, mplapackint ldwv, std::complex<double> * work, mplapackint lwork );
void Rlaqr3 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, double * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, double * z, mplapackint ldz, mplapackint ns, mplapackint nd, double * sr, double * si, double * v, mplapackint ldv, mplapackint nh, double * t, mplapackint ldt, mplapackint nv, double * wv, mplapackint ldwv, double * work, mplapackint lwork );
void Claqr3 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, std::complex<double> * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, std::complex<double> * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, std::complex<double> * sh, std::complex<double> * v, mplapackint ldv, mplapackint nh, std::complex<double> * t, mplapackint ldt, mplapackint nv, std::complex<double> * wv, mplapackint ldwv, std::complex<double> * work, mplapackint lwork );
void Rlaqr4 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, double * h, mplapackint ldh, double * wr, double * wi, mplapackint iloz, mplapackint ihiz, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *info );
void Claqr4 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<double> * h, mplapackint ldh, std::complex<double> * w, mplapackint iloz, mplapackint ihiz, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rlaqr5 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint kac22, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nshfts, double * sr, double * si, double * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, double * z, mplapackint ldz, double * v, mplapackint ldv, double * u, mplapackint ldu, mplapackint nv, double * wv, mplapackint ldwv, mplapackint nh, double * wh, mplapackint ldwh );
void Claqr5 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint kacc22, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nshfts, std::complex<double> * s, std::complex<double> * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, std::complex<double> * z, mplapackint ldz, std::complex<double> * v, mplapackint ldv, std::complex<double> * u, mplapackint ldu, mplapackint nv, std::complex<double> * wv, mplapackint ldwv, mplapackint nh, std::complex<double> * wh, mplapackint ldwh );
void Rlatzm ( const char *side, mplapackint m, mplapackint n, double * v, mplapackint incv, double * tau, double *c1, double * c2, mplapackint ldc, double * work );
void Clatzm ( const char *side, mplapackint m, mplapackint n, std::complex<double> * v, mplapackint incv, std::complex<double> * tau, std::complex<double> * c1, std::complex<double> * c2, mplapackint ldc, std::complex<double> * work );
void Clacp2 ( const char *uplo, mplapackint m, mplapackint n, double * A, mplapackint lda, std::complex<double> * B, mplapackint ldb );
mplapackint Risnan ( double din );

/* not yet done ... driver and computational routines */
void Rbdsdc ( const char *uplo, const char *compq, mplapackint n, double * d, double * e, double * u, mplapackint ldu, double * vt, mplapackint ldvt, double * q, mplapackint * iq, double * work, mplapackint * iwork, mplapackint * info );
void Rbdsqr ( const char *uplo, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, double * d, double * e, double * vt, mplapackint ldvt, double * u, mplapackint ldu, double * c, mplapackint ldc, double * work, mplapackint *info );
void Cbdsqr ( const char *uplo, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, double * d, double * e, std::complex<double> * vt, mplapackint ldvt, std::complex<double> * u, mplapackint ldu, std::complex<double> * c, mplapackint ldc, double * rwork, mplapackint * info );
void Rdisna ( const char *job, mplapackint m, mplapackint n, double * d, double * sep, mplapackint *info );
void Rgbbrd ( const char *vect, mplapackint m, mplapackint n, mplapackint ncc, mplapackint kl, mplapackint ku, double * AB, mplapackint ldab, double * d, double * e, double * q, mplapackint ldq, double * pt, mplapackint ldpt, double * c, mplapackint ldc, double * work, mplapackint *info );
void Cgbbrd ( const char *vect, mplapackint m, mplapackint n, mplapackint ncc, mplapackint kl, mplapackint ku, std::complex<double> * AB, mplapackint ldab, double * d, double * e, std::complex<double> * q, mplapackint ldq, std::complex<double> * pt, mplapackint ldpt, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, double * rwork, mplapackint * info );
void Rgbcon ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, double * AB, mplapackint ldab, mplapackint *ipiv, double anorm, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Cgbcon ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, std::complex<double> * AB, mplapackint ldab, mplapackint *ipiv, double anorm, double * rcond, std::complex<double> * work, double * rwork, mplapackint *info );
void Rgbequ ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, double * AB, mplapackint ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax, mplapackint *info );
void Cgbequ ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, std::complex<double> * AB, mplapackint ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax, mplapackint *info );
void Rgbrfs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, double * AB, mplapackint ldab, double * afb, mplapackint ldafb, mplapackint *ipiv, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Cgbrfs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, std::complex<double> * AB, mplapackint ldab, std::complex<double> * afb, mplapackint ldafb, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rgbsv ( mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, double * AB, mplapackint ldab, mplapackint *ipiv, double * B, mplapackint ldb, mplapackint *info );
void Cgbsv ( mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, std::complex<double> * ab, mplapackint ldab, mplapackint *ipiv, std::complex<double> * b, mplapackint ldb, mplapackint *info );
void Rgbsvx ( const char *fact, const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, double * AB, mplapackint ldab, double * afb, mplapackint ldafb, mplapackint * ipiv, char *equed, double * r, double * c, double * B, mplapackint ldb, double * x, mplapackint ldx, double * rcond, double * ferr, double * berr, double * work, mplapackint * iwork, mplapackint * info );
void Cgbsvx ( const char *fact, const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, std::complex<double> * AB, mplapackint ldab, std::complex<double> * afb, mplapackint ldafb, mplapackint * ipiv, char *equed, double * r, double * c, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint * info );
void Rgbtrf ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, double * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Cgbtrf ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, std::complex<double> * ab, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Rgbtrs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, double * AB, mplapackint ldab, mplapackint *ipiv, double * B, mplapackint ldb, mplapackint *info );
void Cgbtrs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, std::complex<double> * AB, mplapackint ldab, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rgebak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, double * scale, mplapackint m, double * v, mplapackint ldv, mplapackint *info );
void Cgebak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, double * scale, mplapackint m, std::complex<double> * v, mplapackint ldv, mplapackint *info );
void Rgebal ( const char *job, mplapackint n, double * A, mplapackint lda, mplapackint *ilo, mplapackint *ihi, double * scale, mplapackint *info );
void Cgebal ( const char *job, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ilo, mplapackint *ihi, double * scale, mplapackint *info );
void Rgebrd ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * d, double * e, double * tauq, double * taup, double * work, mplapackint lwork, mplapackint *info );
void Cgebrd ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, double * d, double * e, std::complex<double> * tauq, std::complex<double> * taup, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rgecon ( const char *norm, mplapackint n, double * A, mplapackint lda, double anorm, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Cgecon ( const char *norm, mplapackint n, std::complex<double> * A, mplapackint lda, double anorm, double * rcond, std::complex<double> * work, double * rwork, mplapackint *info );
void Rgeequ ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax, mplapackint *info );
void Cgeequ ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax, mplapackint *info );
void Rgees ( const char *jobvs, const char *sort, LFP select, mplapackint n, double * A, mplapackint lda, mplapackint *sdim, double * wr, double * wi, double * vs, mplapackint ldvs, double * work, mplapackint lwork, mplapacklogical * bwork, mplapackint *info );
void Cgees ( const char *jobvs, const char *sort, LFP select, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *sdim, std::complex<double> * w, std::complex<double> * vs, mplapackint ldvs, std::complex<double> * work, mplapackint lwork, double * rwork, mplapacklogical * bwork, mplapackint *info );
void Rgeesx ( const char *jobvs, const char *sort, LFP select, const char *sense, mplapackint n, double * A, mplapackint lda, mplapackint * sdim, double * wr, double * wi, double * vs, mplapackint ldvs, double * rconde, double * rcondv, double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Cgeesx ( const char *jobvs, const char *sort, LFP select, const char *sense, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *sdim, std::complex<double> * w, std::complex<double> * vs, mplapackint ldvs, double * rconde, double * rcondv, std::complex<double> * work, mplapackint lwork, double * rwork, mplapacklogical * bwork, mplapackint *info );
void Rgeev ( const char *jobvl, const char *jobvr, mplapackint n, double * A, mplapackint lda, double * wr, double * wi, double * vl, mplapackint ldvl, double * vr, mplapackint ldvr, double * work, mplapackint lwork, mplapackint *info );
void Cgeev ( const char *jobvl, const char *jobvr, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * w, std::complex<double> * vl, mplapackint ldvl, std::complex<double> * vr, mplapackint ldvr, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * info );
void Rgeevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, double * A, mplapackint lda, double * wr, double * wi, double * vl, mplapackint ldvl, double * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, double * scale, double * abnrm, double * rconde, double * rcondv, double * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Cgeevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * w, std::complex<double> * vl, mplapackint ldvl, std::complex<double> * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, double * scale, double * abnrm, double * rconde, double * rcondv, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * info );
void Cgehrd ( mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rgehrd ( mplapackint n, mplapackint ilo, mplapackint ihi, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Rgelqf ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cgelqf ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rgels ( const char *trans, mplapackint m, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * B, mplapackint ldb, double * work, mplapackint lwork, mplapackint *info );
void Cgels ( const char *trans, mplapackint m, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rgelsx ( mplapackint m, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * B, mplapackint ldb, mplapackint *jpvt, double rcond, mplapackint *rank, double * work, mplapackint *info );
void Cgelsx ( mplapackint m, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, mplapackint *jpvt, double rcond, mplapackint *rank, std::complex<double> * work, double * rwork, mplapackint *info );
void Rgelsd ( mplapackint m, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * B, mplapackint ldb, double * s, double * rcond, mplapackint *rank, double * work, mplapackint lwork, mplapackint *iwork, mplapackint *info );
void Cgelsd ( mplapackint m, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, double * s, double rcond, mplapackint * rank, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * iwork, mplapackint * info );
void Rgelss ( mplapackint m, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * B, mplapackint ldb, double * s, double rcond, mplapackint * rank, double * work, mplapackint lwork, mplapackint * info );
void Cgelss ( mplapackint m, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, double * s, double rcond, mplapackint * rank, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * info );
void Rgelsy ( mplapackint m, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * B, mplapackint ldb, mplapackint *jpvt, double rcond, mplapackint *rank, double * work, mplapackint lwork, mplapackint *info );
void Cgelsy ( mplapackint m, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, mplapackint * jpvt, double rcond, mplapackint * rank, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * info );
void Rgeqlf ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cgeqlf ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rgeqpf ( mplapackint m, mplapackint n, double * A, mplapackint lda, mplapackint *jpvt, double * tau, double * work, mplapackint *info );
void Cgeqpf ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *jpvt, std::complex<double> * tau, std::complex<double> * work, double * rwork, mplapackint *info );
void Rgeqp3 ( mplapackint m, mplapackint n, double * A, mplapackint lda, mplapackint *jpvt, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cgeqp3 ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *jpvt, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint *info );
void Rgeqrf ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cgeqrf ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rgerfs ( const char *trans, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * af, mplapackint ldaf, mplapackint *ipiv, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Cgerfs ( const char *trans, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * af, mplapackint ldaf, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rgerqf ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cgerqf ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rgesdd ( const char *jobz, mplapackint m, mplapackint n, double * A, mplapackint lda, double * s, double * u, mplapackint ldu, double * vt, mplapackint ldvt, double * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Cgesdd ( const char *jobz, mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, double * s, std::complex<double> * u, mplapackint ldu, std::complex<double> * vt, mplapackint ldvt, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * iwork, mplapackint * info );
void Rgesvd ( const char *jobu, const char *jobvt, mplapackint m, mplapackint n, double * A, mplapackint lda, double * s, double * u, mplapackint ldu, double * vt, mplapackint ldvt, double * work, mplapackint lwork, mplapackint * info );
void Cgesvd ( const char *jobu, const char *jobvt, mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, double * s, std::complex<double> * u, mplapackint ldu, std::complex<double> * vt, mplapackint ldvt, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * info );
void Rgesvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * af, mplapackint ldaf, mplapackint * ipiv, char *equed, double * r, double * c, double * B, mplapackint ldb, double * x, mplapackint ldx, double * rcond, double * ferr, double * berr, double * work, mplapackint * iwork, mplapackint * info );
void Cgesvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * af, mplapackint ldaf, mplapackint * ipiv, char *equed, double * r, double * c, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint * info );
void Rggbak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, double * lscale, double * rscale, mplapackint m, double * v, mplapackint ldv, mplapackint *info );
void Cggbak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, double * lscale, double * rscale, mplapackint m, std::complex<double> * v, mplapackint ldv, mplapackint *info );
void Rggbal ( const char *job, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, mplapackint *ilo, mplapackint *ihi, double * lscale, double * rscale, double * work, mplapackint *info );
void Cggbal ( const char *job, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, mplapackint *ilo, mplapackint *ihi, double * lscale, double * rscale, double * work, mplapackint *info );
void Rgges ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, mplapackint * sdim, double * alphar, double * alphai, double * beta, double * vsl, mplapackint ldvsl, double * vsr, mplapackint ldvsr, double * work, mplapackint lwork, mplapacklogical * bwork, mplapackint * info );
void Cgges ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, mplapackint * sdim, std::complex<double> * alpha, std::complex<double> * beta, std::complex<double> * vsl, mplapackint ldvsl, std::complex<double> * vsr, mplapackint ldvsr, std::complex<double> * work, mplapackint lwork, double * rwork, mplapacklogical * bwork, mplapackint * info );
void Rgegs ( const char *jobvsl, const char *jobvsr, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * alphar, double * alphai, double * beta, double * vsl, mplapackint ldvsl, double * vsr, mplapackint ldvsr, double * work, mplapackint lwork, mplapackint *info );
void Cgegs ( const char *jobvsl, const char *jobvsr, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * alpha, std::complex<double> * beta, std::complex<double> * vsl, mplapackint ldvsl, std::complex<double> * vsr, mplapackint ldvsr, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * info );
void Rggesx ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, const char *sense, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, mplapackint * sdim, double * alphar, double * alphai, double * beta, double * vsl, mplapackint ldvsl, double * vsr, mplapackint ldvsr, double * rconde, double * rcondv, double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Cggesx ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, const char *sense, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, mplapackint * sdim, std::complex<double> * alpha, std::complex<double> * beta, std::complex<double> * vsl, mplapackint ldvsl, std::complex<double> * vsr, mplapackint ldvsr, double * rconde, double * rcondv, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Rggev ( const char *jobvl, const char *jobvr, mplapackint n, double * A, mplapackint lda, double * b, mplapackint ldb, double * alphar, double * alphai, double * beta, double * vl, mplapackint ldvl, double * vr, mplapackint ldvr, double * work, mplapackint lwork, mplapackint * info );
void Cggev ( const char *jobvl, const char *jobvr, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * alpha, std::complex<double> * beta, std::complex<double> * vl, mplapackint ldvl, std::complex<double> * vr, mplapackint ldvr, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * info );
void Rgegv ( const char *jobvl, const char *jobvr, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * alphar, double * alphai, double * beta, double * vl, mplapackint ldvl, double * vr, mplapackint ldvr, double * work, mplapackint lwork, mplapackint * info );
void Cgegv ( const char *jobvl, const char *jobvr, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * alpha, std::complex<double> * beta, std::complex<double> * vl, mplapackint ldvl, std::complex<double> * vr, mplapackint ldvr, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * info );
void Rggevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * alphar, double * alphai, double * beta, double * vl, mplapackint ldvl, double * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, double * lscale, double * rscale, double * abnrm, double * bbnrm, double * rconde, double * rcondv, double * work, mplapackint lwork, mplapackint * iwork, mplapacklogical * bwork, mplapackint * info );
void Cggevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * alpha, std::complex<double> * beta, std::complex<double> * vl, mplapackint ldvl, std::complex<double> * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, double * lscale, double * rscale, double * abnrm, double * bbnrm, double * rconde, double * rcondv, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint * iwork, mplapacklogical * bwork, mplapackint * info );
void Rggglm ( mplapackint n, mplapackint m, mplapackint p, double * A, mplapackint lda, double * B, mplapackint ldb, double * d, double * x, double * y, double * work, mplapackint lwork, mplapackint *info );
void Cggglm ( mplapackint n, mplapackint m, mplapackint p, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * d, std::complex<double> * x, std::complex<double> * y, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rgghrd ( const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, double * A, mplapackint lda, double * B, mplapackint ldb, double * q, mplapackint ldq, double * z, mplapackint ldz, mplapackint *info );
void Cgghrd ( const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * q, mplapackint ldq, std::complex<double> * z, mplapackint ldz, mplapackint *info );
void Rgglse ( mplapackint m, mplapackint n, mplapackint p, double * A, mplapackint lda, double * B, mplapackint ldb, double * c, double * d, double * x, double * work, mplapackint lwork, mplapackint *info );
void Cgglse ( mplapackint m, mplapackint n, mplapackint p, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * c, std::complex<double> * d, std::complex<double> * x, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rggqrf ( mplapackint n, mplapackint m, mplapackint p, double * A, mplapackint lda, double * taua, double * B, mplapackint ldb, double * taub, double * work, mplapackint lwork, mplapackint *info );
void Cggqrf ( mplapackint n, mplapackint m, mplapackint p, std::complex<double> * A, mplapackint lda, std::complex<double> * taua, std::complex<double> * B, mplapackint ldb, std::complex<double> * taub, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rggrqf ( mplapackint m, mplapackint p, mplapackint n, double * A, mplapackint lda, double * taua, double * B, mplapackint ldb, double * taub, double * work, mplapackint lwork, mplapackint *info );
void Cggrqf ( mplapackint m, mplapackint p, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * taua, std::complex<double> * B, mplapackint ldb, std::complex<double> * taub, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rggsvd ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint n, mplapackint p, mplapackint *k, mplapackint *l, double * A, mplapackint lda, double * B, mplapackint ldb, double * alpha, double * beta, double * u, mplapackint ldu, double * v, mplapackint ldv, double * q, mplapackint ldq, double * work, mplapackint *iwork, mplapackint *info );
void Cggsvd ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint n, mplapackint p, mplapackint *k, mplapackint *l, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, double * alpha, double * beta, std::complex<double> * u, mplapackint ldu, std::complex<double> * v, mplapackint ldv, std::complex<double> * q, mplapackint ldq, std::complex<double> * work, double * rwork, mplapackint *iwork, mplapackint *info );
void Rggsvp ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double tola, double tolb, mplapackint *k, mplapackint *l, double * u, mplapackint ldu, double * v, mplapackint ldv, double * q, mplapackint ldq, mplapackint *iwork, double * tau, double * work, mplapackint *info );
void Cggsvp ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, double tola, double tolb, mplapackint *k, mplapackint *l, std::complex<double> * u, mplapackint ldu, std::complex<double> * v, mplapackint ldv, std::complex<double> * q, mplapackint ldq, mplapackint *iwork, double * rwork, std::complex<double> * tau, std::complex<double> * work, mplapackint *info );
void Rgtcon ( const char *norm, mplapackint n, double * dl, double * d, double * du, double * du2, mplapackint *ipiv, double anorm, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Cgtcon ( const char *norm, mplapackint n, std::complex<double> * dl, std::complex<double> * d, std::complex<double> * du, std::complex<double> * du2, mplapackint *ipiv, double anorm, double * rcond, std::complex<double> * work, mplapackint *info );
void Rgtrfs ( const char *trans, mplapackint n, mplapackint nrhs, double * dl, double * d, double * du, double * dlf, double * df, double * duf, double * du2, mplapackint *ipiv, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Cgtrfs ( const char *trans, mplapackint n, mplapackint nrhs, std::complex<double> * dl, std::complex<double> * d, std::complex<double> * du, std::complex<double> * dlf, std::complex<double> * df, std::complex<double> * duf, std::complex<double> * du2, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rgtsv ( mplapackint n, mplapackint nrhs, double * dl, double * d, double * du, double * B, mplapackint ldb, mplapackint *info );
void Cgtsv ( mplapackint n, mplapackint nrhs, std::complex<double> * dl, std::complex<double> * d, std::complex<double> * du, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rgtsvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, double * dl, double * d, double * du, double * dlf, double * df, double * duf, double * du2, mplapackint *ipiv, double * B, mplapackint ldb, double * x, mplapackint ldx, double * rcond, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Cgtsvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, std::complex<double> * dl, std::complex<double> * d, std::complex<double> * du, std::complex<double> * dlf, std::complex<double> * df, std::complex<double> * duf, std::complex<double> * du2, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rgttrf ( mplapackint n, double * dl, double * d, double * du, double * du2, mplapackint *ipiv, mplapackint *info );
void Cgttrf ( mplapackint n, std::complex<double> * dl, std::complex<double> * d, std::complex<double> * du, std::complex<double> * du2, mplapackint *ipiv, mplapackint *info );
void Rgttrs ( const char *trans, mplapackint n, mplapackint nrhs, double * dl, double * d, double * du, double * du2, mplapackint *ipiv, double * B, mplapackint ldb, mplapackint *info );
void Cgttrs ( const char *trans, mplapackint n, mplapackint nrhs, std::complex<double> * dl, std::complex<double> * d, std::complex<double> * du, std::complex<double> * du2, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rhgeqz ( const char *job, const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, double * h, mplapackint ldh, double * t, mplapackint ldt, double * alphar, double * alphai, double * beta, double * q, mplapackint ldq, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *info );
void Chgeqz ( const char *job, const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<double> * h, mplapackint ldh, std::complex<double> * t, mplapackint ldt, std::complex<double> * alpha, std::complex<double> * beta, std::complex<double> * q, mplapackint ldq, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint *info );
void Rhsein ( const char *side, const char *eigsrc, const char *initv, mplapacklogical *select, mplapackint n, double * h, mplapackint ldh, double * wr, double * wi, double * vl, mplapackint ldvl, double * vr, mplapackint ldvr, mplapackint mm, mplapackint m, double * work, mplapackint *ifaill, mplapackint *ifailr, mplapackint *info );
void Chsein ( const char *side, const char *eigsrc, const char *initv, mplapacklogical * select, mplapackint n, std::complex<double> * h, mplapackint ldh, std::complex<double> * w, std::complex<double> * vl, mplapackint ldvl, std::complex<double> * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, std::complex<double> * work, double * rwork, mplapackint *ifaill, mplapackint *ifailr, mplapackint *info );
void Rhseqr ( const char *job, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, double * h, mplapackint ldh, double * wr, double * wi, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *info );
void Chseqr ( const char *job, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<double> * h, mplapackint ldh, std::complex<double> * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Ropgtr ( const char *uplo, mplapackint n, double * ap, double * tau, double * q, mplapackint ldq, double * work, mplapackint *info );
void Cupgtr ( const char *uplo, mplapackint n, std::complex<double> * ap, std::complex<double> * tau, std::complex<double> * q, mplapackint ldq, std::complex<double> * work, mplapackint *info );
void Ropmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, double * ap, double * tau, double * c, mplapackint ldc, double * work, mplapackint *info );
void Cupmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, std::complex<double> * ap, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint *info );
void Rorgbr ( const char *vect, mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cungbr ( const char *vect, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rorghr ( mplapackint n, mplapackint ilo, mplapackint ihi, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cunghr ( mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rorglq ( mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cunglq ( mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rorgrq ( mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Cungrq ( mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rormbr ( const char *vect, const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint lwork, mplapackint *info );
void Cunmbr ( const char *vect, const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rormhr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint ilo, mplapackint ihi, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint lwork, mplapackint *info );
void Cunmhr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rormlq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint lwork, mplapackint *info );
void Cunmlq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rormql ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint lwork, mplapackint *info );
void Cunmql ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rormqr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint lwork, mplapackint *info );
void Cunmqr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rormrq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint lwork, mplapackint *info );
void Cunmrq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rormrz ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint lwork, mplapackint *info );
void Cunmrz ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rormtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, double * c, mplapackint ldc, double * work, mplapackint lwork, mplapackint *info );
void Cunmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * c, mplapackint ldc, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rpbcon ( const char *uplo, mplapackint n, mplapackint kd, double * AB, mplapackint ldab, double anorm, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Cpbcon ( const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, double anorm, double * rcond, std::complex<double> * work, double * rwork, mplapackint *info );
void Rpbequ ( const char *uplo, mplapackint n, mplapackint kd, double * ab, mplapackint ldab, double * s, double * scond, double * amax, mplapackint *info );
void Cpbequ ( const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, double * s, double * scond, double * amax, mplapackint *info );
void Rpbrfs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, double * AB, mplapackint ldab, double * afb, mplapackint ldafb, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Cpbrfs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<double> * AB, mplapackint ldab, std::complex<double> * afb, mplapackint ldafb, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rpbstf ( const char *uplo, mplapackint n, mplapackint kd, double * AB, mplapackint ldab, mplapackint *info );
void Cpbstf ( const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, mplapackint *info );
void Rpbsv ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, double * AB, mplapackint ldab, double * B, mplapackint ldb, mplapackint *info );
void Cpbsv ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<double> * ab, mplapackint ldab, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rpbsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, double * AB, mplapackint ldab, double * afb, mplapackint ldafb, char *equed, double * s, double * B, mplapackint ldb, double * x, mplapackint ldx, double * rcond, double * ferr, double * berr, double * work, mplapackint * iwork, mplapackint * info );
void Cpbsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<double> * AB, mplapackint ldab, std::complex<double> * afb, mplapackint ldafb, char *equed, double * s, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint * info );
void Rpbtrf ( const char *uplo, mplapackint n, mplapackint kd, double * AB, mplapackint ldab, mplapackint *info );
void Cpbtrf ( const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, mplapackint *info );
void Rpbtrs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, double * ab, mplapackint ldab, double * B, mplapackint ldb, mplapackint *info );
void Cpbtrs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<double> * AB, mplapackint ldab, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rpocon ( const char *uplo, mplapackint n, double * A, mplapackint lda, double anorm, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Cpocon ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double anorm, double * rcond, std::complex<double> * work, double * rwork, mplapackint *info );
void Rpoequ ( mplapackint n, double * A, mplapackint lda, double * s, double * scond, double * amax, mplapackint *info );
void Cpoequ ( mplapackint n, std::complex<double> * A, mplapackint lda, double * s, double * scond, double * amax, mplapackint *info );
void Rporfs ( const char *uplo, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * af, mplapackint ldaf, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Cporfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * af, mplapackint ldaf, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rposv ( const char *uplo, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * B, mplapackint ldb, mplapackint *info );
void Cposv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rposvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * af, mplapackint ldaf, char *equed, double * s, double * B, mplapackint ldb, double * x, mplapackint ldx, double * rcond, double * ferr, double * berr, double * work, mplapackint * iwork, mplapackint * info );
void Cposvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * af, mplapackint ldaf, char *equed, double * s, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint * info );
void Rpotri ( const char *uplo, mplapackint n, double * A, mplapackint lda, mplapackint *info );
void Cpotri ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *info );
void Rpotrs ( const char *uplo, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * B, mplapackint ldb, mplapackint *info );
void Cpotrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rppcon ( const char *uplo, mplapackint n, double * ap, double anorm, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Cppcon ( const char *uplo, mplapackint n, std::complex<double> * ap, double * anorm, double * rcond, std::complex<double> * work, double * rwork, mplapackint *info );
void Rppequ ( const char *uplo, mplapackint n, double * ap, double * s, double * scond, double * amax, mplapackint *info );
void Cppequ ( const char *uplo, mplapackint n, std::complex<double> * ap, double * s, double * scond, double * amax, mplapackint *info );
void Rpptrf ( const char *uplo, mplapackint n, double * ap, mplapackint *info );
void Cpptrf ( const char *uplo, mplapackint n, std::complex<double> * ap, mplapackint *info );
void Rpptri ( const char *uplo, mplapackint n, double * ap, mplapackint *info );
void Cpptri ( const char *uplo, mplapackint n, std::complex<double> * ap, mplapackint *info );
void Rpptrs ( const char *uplo, mplapackint n, mplapackint nrhs, double * ap, double * B, mplapackint ldb, mplapackint *info );
void Cpptrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rpprfs ( const char *uplo, mplapackint n, mplapackint nrhs, double * ap, double * afp, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Cpprfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, std::complex<double> * afp, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rppsv ( const char *uplo, mplapackint n, mplapackint nrhs, double * ap, double * B, mplapackint ldb, mplapackint *info );
void Cppsv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rppsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, double * ap, double * afp, char *equed, double * s, double * B, mplapackint ldb, double * x, mplapackint ldx, double * rcond, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Cppsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, std::complex<double> * afp, char *equed, double * s, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint * info );
void Rptcon ( mplapackint n, double * d, double * e, double anorm, double * rcond, double * work, mplapackint *info );
void Cptcon ( mplapackint n, double * d, std::complex<double> * e, double anorm, double * rcond, double * rwork, mplapackint *info );
void Rpteqr ( const char *compz, mplapackint n, double * d, double * e, double * z, mplapackint ldz, double * work, mplapackint * info );
void Cpteqr ( const char *compz, mplapackint n, double * d, double * e, std::complex<double> * z, mplapackint ldz, double * work, mplapackint *info );
void Rptrfs ( mplapackint n, mplapackint nrhs, double * d, double * e, double * df, double * ef, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *info );
void Cptrfs ( const char *uplo, mplapackint n, mplapackint nrhs, double * d, std::complex<double> * e, double * df, std::complex<double> * ef, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rptsv ( mplapackint n, mplapackint nrhs, double * d, double * e, double * B, mplapackint ldb, mplapackint *info );
void Cptsv ( mplapackint n, mplapackint nrhs, double * d, std::complex<double> * e, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rptsvx ( const char *fact, mplapackint n, mplapackint nrhs, double * d, double * e, double * df, double * ef, double * B, mplapackint ldb, double * x, mplapackint ldx, double * rcond, double * ferr, double * berr, double * work, mplapackint *info );
void Cptsvx ( const char *fact, mplapackint n, mplapackint nrhs, double * d, std::complex<double> * e, double * df, std::complex<double> * ef, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rpttrf ( mplapackint n, double * d, double * e, mplapackint *info );
void Cpttrf ( mplapackint n, double * d, std::complex<double> * e, mplapackint *info );
void Rpttrs ( mplapackint n, mplapackint nrhs, double * d, double * e, double * B, mplapackint ldb, mplapackint *info );
void Cpttrs ( const char *uplo, mplapackint n, mplapackint nrhs, double * d, std::complex<double> * e, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rsbev ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, double * AB, mplapackint ldab, double * w, double * z, mplapackint ldz, double * work, mplapackint *info );
void Chbev ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, double * rwork, mplapackint *info );
void Rsbevd ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, double * AB, mplapackint ldab, double * w, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chbevd ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsbevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint kd, double * AB, mplapackint ldab, double * q, mplapackint ldq, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint * m, double * w, double * z, mplapackint ldz, double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chbevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, std::complex<double> * q, mplapackint ldq, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint * m, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, double * rwork, mplapackint * iwork, mplapackint * ifail, mplapackint * info );
void Rsbgst ( const char *vect, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, double * AB, mplapackint ldab, double * bb, mplapackint ldbb, double * x, mplapackint ldx, double * work, mplapackint *info );
void Chbgst ( const char *vect, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, std::complex<double> * AB, mplapackint ldab, std::complex<double> * bb, mplapackint ldbb, std::complex<double> * x, mplapackint ldx, std::complex<double> * work, double * rwork, mplapackint *info );
void Rsbgv ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, double * AB, mplapackint ldab, double * bb, mplapackint ldbb, double * w, double * z, mplapackint ldz, double * work, mplapackint *info );
void Chbgv ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, std::complex<double> * AB, mplapackint ldab, std::complex<double> * bb, mplapackint ldbb, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, double * rwork, mplapackint *info );
void Rsbgvd ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, double * AB, mplapackint ldab, double * BB, mplapackint ldbb, double * w, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chbgvd ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, std::complex<double> * AB, mplapackint ldab, std::complex<double> * BB, mplapackint ldbb, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsbgvx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, double * AB, mplapackint ldab, double * BB, mplapackint ldbb, double * q, mplapackint ldq, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint *m, double * w, double * z, mplapackint ldz, double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chbgvx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, std::complex<double> * ab, mplapackint ldab, std::complex<double> * bb, mplapackint ldbb, std::complex<double> * q, mplapackint ldq, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint *m, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, double * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsbtrd ( const char *vect, const char *uplo, mplapackint n, mplapackint kd, double * AB, mplapackint ldab, double * d, double * e, double * q, mplapackint ldq, double * work, mplapackint *info );
void Chbtrd ( const char *vect, const char *uplo, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, double * d, double * e, std::complex<double> * q, mplapackint ldq, std::complex<double> * work, mplapackint *info );
void Rspcon ( const char *uplo, mplapackint n, double * ap, mplapackint *ipiv, double anorm, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Cspcon ( const char *uplo, mplapackint n, std::complex<double> * ap, mplapackint *ipiv, double anorm, double * rcond, std::complex<double> * work, mplapackint *info );
void Chpcon ( const char *uplo, mplapackint n, std::complex<double> * ap, mplapackint *ipiv, double anorm, double * rcond, std::complex<double> * work, mplapackint *info );
void Rspev ( const char *jobz, const char *uplo, mplapackint n, double * ap, double * w, double * z, mplapackint ldz, double * work, mplapackint *info );
void Chpev ( const char *jobz, const char *uplo, mplapackint n, std::complex<double> * ap, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, double * rwork, mplapackint *info );
void Rspevd ( const char *jobz, const char *uplo, mplapackint n, double * ap, double * w, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chpevd ( const char *jobz, const char *uplo, mplapackint n, std::complex<double> * ap, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rspevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, double * ap, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint *m, double * w, double * z, mplapackint ldz, double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chpevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, std::complex<double> * ap, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint * m, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, double * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rspgst ( mplapackint itype, const char *uplo, mplapackint n, double * ap, double * bp, mplapackint *info );
void Chpgst ( mplapackint *itype, const char *uplo, mplapackint n, std::complex<double> * ap, std::complex<double> * bp, mplapackint *info );
void Rspgv ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, double * ap, double * bp, double * w, double * z, mplapackint ldz, double * work, mplapackint *info );
void Chpgv ( mplapackint *itype, const char *jobz, const char *uplo, mplapackint n, std::complex<double> * ap, std::complex<double> * bp, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, double * rwork, mplapackint *info );
void Rspgvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, double * ap, double * bp, double * w, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chpgvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, std::complex<double> * ap, std::complex<double> * bp, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rspgvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, double * ap, double * bp, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint m, double * w, double * z, mplapackint ldz, double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chpgvx ( mplapackint itype, const char *jobz, char *range, const char *uplo, mplapackint n, std::complex<double> * ap, std::complex<double> * bp, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint *m, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, double * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsprfs ( const char *uplo, mplapackint n, mplapackint nrhs, double * ap, double * afp, mplapackint *ipiv, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Csprfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, std::complex<double> * afp, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Chprfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, std::complex<double> * afp, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rspsv ( const char *uplo, mplapackint n, mplapackint nrhs, double * ap, mplapackint *ipiv, double * B, mplapackint ldb, mplapackint *info );
void Cspsv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Chpsv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rspsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, double * ap, double * afp, mplapackint *ipiv, double * B, mplapackint ldb, double * x, mplapackint ldx, double * rcond, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Cspsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, std::complex<double> * afp, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Chpsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, std::complex<double> * afp, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rsptrd ( const char *uplo, mplapackint n, double * ap, double * d, double * e, double * tau, mplapackint *info );
void Chptrd ( const char *uplo, mplapackint n, std::complex<double> * ap, double * d, double * e, std::complex<double> * tau, mplapackint *info );
void Rsptrf ( const char *uplo, mplapackint n, double * ap, mplapackint *ipiv, mplapackint *info );
void Csptrf ( const char *uplo, mplapackint n, std::complex<double> * ap, mplapackint *ipiv, mplapackint *info );
void Chptrf ( const char *uplo, mplapackint n, std::complex<double> * ap, mplapackint *ipiv, mplapackint *info );
void Rsptri ( const char *uplo, mplapackint n, double * ap, mplapackint *ipiv, double * work, mplapackint *info );
void Csptri ( const char *uplo, mplapackint n, std::complex<double> * ap, mplapackint *ipiv, std::complex<double> * work, mplapackint *info );
void Chptri ( const char *uplo, mplapackint n, std::complex<double> * ap, mplapackint *ipiv, std::complex<double> * work, mplapackint *info );
void Rsptrs ( const char *uplo, mplapackint n, mplapackint nrhs, double * ap, mplapackint *ipiv, double * B, mplapackint ldb, mplapackint *info );
void Csptrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Chptrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * ap, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rstebz ( const char *range, const char *order, mplapackint n, double vl, double vu, mplapackint il, mplapackint iu, double abstol, double * d, double * e, mplapackint * m, mplapackint * nsplit, double * w, mplapackint *iblock, mplapackint *isplit, double * work, mplapackint *iwork, mplapackint *info );
void Rstedc ( const char *compz, mplapackint n, double * d, double * e, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Cstedc ( const char *compz, mplapackint n, double * d, double * e, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstegr ( const char *jobz, const char *range, mplapackint n, double * d, double * e, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint * m, double * w, double * z, mplapackint ldz, mplapackint * isuppz, double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cstegr ( const char *jobz, const char *range, mplapackint n, double *d, double * e, double * vl, double * vu, mplapackint *il, mplapackint *iu, double * abstol, mplapackint m, double * w, std::complex<double> * z, mplapackint ldz, mplapackint *isuppz, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstein ( mplapackint n, double * d, double * e, mplapackint m, double * w, mplapackint *iblock, mplapackint *isplit, double * z, mplapackint ldz, double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Cstein ( mplapackint n, double * d, double * e, mplapackint m, double * w, mplapackint *iblock, mplapackint *isplit, std::complex<double> * z, mplapackint ldz, double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rstev ( const char *jobz, mplapackint n, double * d, double * e, double * z, mplapackint ldz, double * work, mplapackint *info );
void Rstevd ( const char *jobz, mplapackint n, double * d, double * e, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstevr ( const char *jobz, const char *range, mplapackint n, double * d, double * e, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint * m, double * w, double * z, mplapackint ldz, mplapackint * isuppz, double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rstevx ( const char *jobz, const char *range, mplapackint n, double * d, double * e, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint *m, double * w, double * z, mplapackint ldz, double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rstemr ( const char *jobz, const char *range, mplapackint n, double * d, double * e, double vl, double vu, mplapackint il, mplapackint iu, mplapackint * m, double * w, double * z, mplapackint ldz, mplapackint nzc, mplapackint * isuppz, mplapacklogical * tryrac, double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cstemr ( const char *jobz, const char *range, mplapackint n, double * d, double * e, double vl, double vu, mplapackint il, mplapackint iu, mplapackint * m, double * w, std::complex<double> * z, mplapackint ldz, mplapackint nzc, mplapackint *isuppz, mplapacklogical * tryrac, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsycon ( const char *uplo, mplapackint n, double * A, mplapackint lda, mplapackint *ipiv, double anorm, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Csycon ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, double anorm, double * rcond, std::complex<double> * work, mplapackint *info );
void Checon ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, double anorm, double * rcond, std::complex<double> * work, mplapackint *info );
void Rsyevd ( const char *jobz, const char *uplo, mplapackint n, double * A, mplapackint lda, double * w, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Cheevd ( const char *jobz, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double * w, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsyevr ( const char *jobz, const char *range, const char *uplo, mplapackint n, double * A, mplapackint lda, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint * m, double * w, double * z, mplapackint ldz, mplapackint * isuppz, double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cheevr ( const char *jobz, const char *range, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint * m, double * w, std::complex<double> * z, mplapackint ldz, mplapackint * isuppz, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint lrwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rsyevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, double * A, mplapackint lda, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint *m, double * w, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Cheevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint *m, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsygst ( mplapackint itype, const char *uplo, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, mplapackint *info );
void Chegst ( mplapackint itype, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rsygv ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * w, double * work, mplapackint lwork, mplapackint *info );
void Chegv ( mplapackint *itype, const char *jobz, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, double * w, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint *info );
void Rsygvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * w, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chegvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, double * w, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsygvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint *m, double * w, double * z, mplapackint ldz, double * work, mplapackint lwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chegvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, double vl, double vu, mplapackint il, mplapackint iu, double abstol, mplapackint * m, double * w, std::complex<double> * z, mplapackint ldz, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsyrfs ( const char *uplo, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * af, mplapackint ldaf, mplapackint *ipiv, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Csyrfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * af, mplapackint ldaf, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Cherfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * af, mplapackint ldaf, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rsysv ( const char *uplo, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, mplapackint *ipiv, double * B, mplapackint ldb, double * work, mplapackint lwork, mplapackint *info );
void Csysv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Chesv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rsysvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * af, mplapackint ldaf, mplapackint *ipiv, double * B, mplapackint ldb, double * x, mplapackint ldx, double * rcond, double * ferr, double * berr, double * work, mplapackint lwork, mplapackint *iwork, mplapackint *info );
void Csysvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * af, mplapackint ldaf, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint *info );
void Chesvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * af, mplapackint ldaf, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * rcond, double * ferr, double * berr, std::complex<double> * work, mplapackint lwork, double * rwork, mplapackint *info );
void Rsytrf ( const char *uplo, mplapackint n, double * A, mplapackint lda, mplapackint *ipiv, double * work, mplapackint lwork, mplapackint *info );
void Csytrf ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Chetrf ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rsytri ( const char *uplo, mplapackint n, double * A, mplapackint lda, mplapackint *ipiv, double * work, mplapackint *info );
void Csytri ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * work, mplapackint *info );
void Chetri ( const char *uplo, mplapackint n, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * work, mplapackint *info );
void Rsytrs ( const char *uplo, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, mplapackint *ipiv, double * B, mplapackint ldb, mplapackint *info );
void Csytrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Chetrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, mplapackint *ipiv, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rtbcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint kd, double * AB, mplapackint ldab, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Ctbcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint kd, std::complex<double> * AB, mplapackint ldab, double * rcond, std::complex<double> * work, double * rwork, mplapackint *info );
void Rtbrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, double * AB, mplapackint ldab, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Ctbrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<double> * AB, mplapackint ldab, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint * info );
void Rtbtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, double * ab, mplapackint ldab, double * B, mplapackint ldb, mplapackint *info );
void Ctbtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<double> * ab, mplapackint ldab, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rtgevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, double * s, mplapackint lds, double *p, mplapackint ldp, double * vl, mplapackint ldvl, double * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, double * work, mplapackint * info );
void Ctgevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, std::complex<double> * s, mplapackint lds, std::complex<double> * p, mplapackint ldp, std::complex<double> * vl, mplapackint ldvl, std::complex<double> * vr, mplapackint ldvr, mplapackint mm, mplapackint * m, std::complex<double> * work, double * rwork, mplapackint * info );
void Rtgexc ( mplapacklogical wantq, mplapacklogical wantz, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * q, mplapackint ldq, double * z, mplapackint ldz, mplapackint * ifst, mplapackint * ilst, double * work, mplapackint lwork, mplapackint * info );
void Ctgexc ( mplapacklogical wantq, mplapacklogical wantz, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * q, mplapackint ldq, std::complex<double> * z, mplapackint ldz, mplapackint ifst, mplapackint *ilst, mplapackint *info );
void Rtgsen ( mplapackint ijob, mplapacklogical wantq, mplapacklogical wantz, mplapacklogical *select, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * alphar, double * alphai, double * beta, double * q, mplapackint ldq, double * z, mplapackint ldz, mplapackint * m, double * pl, double * pr, double * dif, double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Ctgsen ( mplapackint ijob, mplapacklogical wantq, mplapacklogical wantz, mplapacklogical * select, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * alpha, std::complex<double> * beta, std::complex<double> * q, mplapackint ldq, std::complex<double> * z, mplapackint ldz, mplapackint * m, double * pl, double * pr, double * dif, std::complex<double> * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rtgsja ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mplapackint k, mplapackint l, double * A, mplapackint lda, double * B, mplapackint ldb, double tola, double tolb, double * alpha, double * beta, double * u, mplapackint ldu, double * v, mplapackint ldv, double * q, mplapackint ldq, double * work, mplapackint ncycle, mplapackint *info );
void Ctgsja ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mplapackint k, mplapackint l, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, double tola, double tolb, double * alpha, double * beta, std::complex<double> * u, mplapackint ldu, std::complex<double> * v, mplapackint ldv, std::complex<double> * q, mplapackint ldq, std::complex<double> * work, mplapackint * ncycle, mplapackint *info );
void Rtgsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * vl, mplapackint ldvl, double * vr, mplapackint ldvr, double * s, double * dif, mplapackint mm, mplapackint * m, double * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Ctgsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * vl, mplapackint ldvl, std::complex<double> * vr, mplapackint ldvr, double * s, double * dif, mplapackint mm, mplapackint * m, std::complex<double> * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Rtgsyl ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * c, mplapackint ldc, double * d, mplapackint ldd, double * e, mplapackint lde, double * f, mplapackint ldf, double * scale, double * dif, double * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Ctgsyl ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * c, mplapackint ldc, std::complex<double> * d, mplapackint ldd, std::complex<double> * e, mplapackint lde, std::complex<double> * f, mplapackint ldf, double * scale, double * dif, std::complex<double> * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Rtpcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, double * ap, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Ctpcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, std::complex<double> * ap, double * rcond, std::complex<double> * work, double * rwork, mplapackint *info );
void Rtprfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, double * ap, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Ctprfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, std::complex<double> * ap, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rtptri ( const char *uplo, const char *diag, mplapackint n, double * ap, mplapackint *info );
void Ctptri ( const char *uplo, const char *diag, mplapackint n, std::complex<double> * ap, mplapackint *info );
void Rtptrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, double * ap, double * B, mplapackint ldb, mplapackint *info );
void Ctptrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, std::complex<double> * ap, std::complex<double> * B, mplapackint ldb, mplapackint *info );
void Rtrcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, double * A, mplapackint lda, double * rcond, double * work, mplapackint *iwork, mplapackint *info );
void Ctrcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, std::complex<double> * A, mplapackint lda, double * rcond, std::complex<double> * work, double * rwork, mplapackint *info );
void Rtrevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, double * t, mplapackint ldt, double * vl, mplapackint ldvl, double * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, double * work, mplapackint *info );
void Ctrevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, std::complex<double> * t, mplapackint ldt, std::complex<double> * vl, mplapackint ldvl, std::complex<double> * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, std::complex<double> * work, double * rwork, mplapackint *info );
void Rtrexc ( const char *compq, mplapackint n, double * t, mplapackint ldt, double * q, mplapackint ldq, mplapackint *ifst, mplapackint *ilst, double * work, mplapackint *info );
void Ctrexc ( const char *compq, mplapackint n, std::complex<double> * t, mplapackint ldt, std::complex<double> * q, mplapackint ldq, mplapackint ifst, mplapackint ilst, mplapackint *info );
void Rtrrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, double * A, mplapackint lda, double * B, mplapackint ldb, double * x, mplapackint ldx, double * ferr, double * berr, double * work, mplapackint *iwork, mplapackint *info );
void Ctrrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * x, mplapackint ldx, double * ferr, double * berr, std::complex<double> * work, double * rwork, mplapackint *info );
void Rtrsen ( const char *job, const char *compq, mplapacklogical * select, mplapackint n, double * t, mplapackint ldt, double * q, mplapackint ldq, double * wr, double * wi, mplapackint m, double * s, double * sep, double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Ctrsen ( const char *job, const char *compq, mplapacklogical * select, mplapackint n, std::complex<double> * t, mplapackint ldt, std::complex<double> * q, mplapackint ldq, std::complex<double> * w, mplapackint m, double * s, double * sep, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rtrsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, double * t, mplapackint ldt, double * vl, mplapackint ldvl, double * vr, mplapackint ldvr, double * s, double * sep, mplapackint mm, mplapackint *m, double * work, mplapackint ldwork, mplapackint *iwork, mplapackint *info );
void Ctrsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, std::complex<double> * t, mplapackint ldt, std::complex<double> * vl, mplapackint ldvl, std::complex<double> * vr, mplapackint ldvr, double * s, double * sep, mplapackint mm, mplapackint *m, std::complex<double> * work, mplapackint ldwork, double * rwork, mplapackint *info );
void Rtrsyl ( const char *trana, const char *tranb, mplapackint isgn, mplapackint m, mplapackint n, double * A, mplapackint lda, double * B, mplapackint ldb, double * c, mplapackint ldc, double * scale, mplapackint *info );
void Ctrsyl ( const char *trana, const char *tranb, mplapackint isgn, mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * B, mplapackint ldb, std::complex<double> * c, mplapackint ldc, double * scale, mplapackint *info );
void Rtzrzf ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, double * work, mplapackint lwork, mplapackint *info );
void Ctzrzf ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, std::complex<double> * work, mplapackint lwork, mplapackint *info );
void Rtzrqf ( mplapackint m, mplapackint n, double * A, mplapackint lda, double * tau, mplapackint *info );
void Ctzrqf ( mplapackint m, mplapackint n, std::complex<double> * A, mplapackint lda, std::complex<double> * tau, mplapackint *info );

#endif
