/*
 * Copyright (c) 2012
 *	Nakata, Maho
 * 	All rights reserved.
 *
 * $Id: mplapack_double.h,v 1.4 2010/08/07 03:15:46 nakatamaho Exp $
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _MPLAPACK_LONGDOUBLE_H_
#define _MPLAPACK_LONGDOUBLE_H_

#include "mplapack_config.h"

/* MPLAPACK prototypes */

/* MPLAPACK driver routines */
void Rsyev ( const char *jobz, const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * w, long double * work, mplapackint lwork, mplapackint *info );
void Cheev ( const char *jobz, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * w, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint *info );
void Rgesv ( mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, mplapackint *ipiv, long double * B, mplapackint ldb, mplapackint *info );
void Cgesv ( mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, mplapackint *info );

/* MPLAPACK computational routines */
void Rsteqr ( const char *compz, mplapackint n, long double * d, long double * e, long double * Z, mplapackint ldz, long double * work, mplapackint *info );
void Csteqr ( const char *compz, mplapackint n, long double * d, long double * e, std::complex<long double> * z, mplapackint ldz, long double * work, mplapackint *info );
void Rsterf ( mplapackint n, long double * d, long double * e, mplapackint *info );
void Rorgqr ( mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cungqr ( mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rorgql ( mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cungql ( mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rsytrd ( const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * d, long double * e, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Chetrd ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * d, long double * e, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rorgtr ( const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cungtr ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rpotrf ( const char *uplo, mplapackint n, long double * A, mplapackint lda, mplapackint *info );
void Cpotrf ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *info );
void Rtrtri ( const char *uplo, const char *diag, mplapackint n, long double * A, mplapackint lda, mplapackint *info );
void Ctrtri ( const char *uplo, const char *diag, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *info );
void Rgetrf ( mplapackint m, mplapackint n, long double * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Cgetrf ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rgetri ( mplapackint n, long double * A, mplapackint lda, mplapackint *ipiv, long double * work, mplapackint lwork, mplapackint *info );
void Cgetri ( mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rgetrs ( const char *trans, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, mplapackint *ipiv, long double * B, mplapackint ldb, mplapackint *info );
void Cgetrs ( const char *trans, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rtrtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * B, mplapackint ldb, mplapackint *info );
void Ctrtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, mplapackint *info );

/* MPLAPACK Auxiliary routines */
long double Rlamc3 ( long double a, long double b );
long double Rlamch_longdouble(const char *cmach);
mplapackint iMlaenv_longdouble(mplapackint ispec, const char *name, const char *opts, mplapackint n1, mplapackint n2,  mplapackint n3, mplapackint n4);
void Rlae2 ( long double a, long double b, long double c, long double * rt1, long double * rt2 );
void Rlaev2 ( long double a, long double b, long double c, long double * rt1, long double * rt2, long double * cs1, long double * sn1 );
void Claev2 ( std::complex<long double> a, std::complex<long double> b, std::complex<long double> c, long double * rt1, long double * rt2, long double * cs1, std::complex<long double> * sn1 );
void Rlassq ( mplapackint n, long double * x, mplapackint incx, long double * scale, long double * sumsq );
void Classq ( mplapackint n, std::complex<long double> * x, mplapackint incx, long double * scale, long double * sumsq );
long double Rlanst ( const char *norm, mplapackint n, long double * d, long double * e );
long double Clanht ( const char *norm, mplapackint n, long double * d, std::complex<long double> * e );
long double Rlansy ( const char *norm, const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * work );
long double Clansy ( const char *norm, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * work );
long double Clanhe ( const char *norm, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * work );
long double Rlapy2 ( long double x, long double y );
void Rlarfg ( mplapackint N, long double * alpha, long double * x, mplapackint incx, long double * tau );
long double Rlapy3 ( long double x, long double y, long double z );
void Rladiv ( long double a, long double b, long double c, long double d, long double * p, long double * q );
std::complex<long double> Cladiv ( std::complex<long double> x, std::complex<long double> y );
void Clarfg ( mplapackint n, std::complex<long double> * alpha, std::complex<long double> * x, mplapackint incx, std::complex<long double> * tau );
void Rlartg ( long double f, long double g, long double * cs, long double * sn, long double * r );
void Clartg ( std::complex<long double> f, std::complex<long double> g, long double * cs, std::complex<long double> * sn, std::complex<long double> * r );
void Rlaset ( const char *uplo, mplapackint m, mplapackint n, long double alpha, long double beta, long double * A, mplapackint lda );
void Claset ( const char *uplo, mplapackint m, mplapackint n, std::complex<long double> alpha, std::complex<long double> beta, std::complex<long double> * A, mplapackint lda );
void Rlasr ( const char *side, const char *pivot, const char *direct, mplapackint m, mplapackint n, long double * c, long double * s, long double * A, mplapackint lda );
void Clasr ( const char *side, const char *pivot, const char *direct, mplapackint m, mplapackint n, long double * c, long double * s, std::complex<long double> * A, mplapackint lda );
void Rpotf2 ( const char *uplo, mplapackint n, long double * A, mplapackint lda, mplapackint *info );
void Clacgv ( mplapackint n, std::complex<long double> * x, mplapackint incx );
void Cpotf2 ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *info );
void Rlascl ( const char *type, mplapackint kl, mplapackint ku, long double cfrom, long double cto, mplapackint m, mplapackint n, long double * A, mplapackint lda, mplapackint *info );
void Clascl ( const char *type, mplapackint kl, mplapackint ku, long double cfrom, long double cto, mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *info );
void Rlasrt ( const char *id, mplapackint n, long double * d, mplapackint *info );
void Rsytd2 ( const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * d, long double * e, long double * tau, mplapackint *info );
void Chetd2 ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * d, long double * e, std::complex<long double> * tau, mplapackint *info );
void Rlarf ( const char *side, mplapackint m, mplapackint n, long double * v, mplapackint incv, long double tau, long double * C, mplapackint ldc, long double * work );
void Clarf ( const char *side, mplapackint m, mplapackint n, std::complex<long double> * v, mplapackint incv, std::complex<long double> tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work );
void Rorg2l ( mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint *info );
void Cung2l ( mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint *info );
void Rorg2r ( mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint *info );
void Cung2r ( mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint *info );
void Rlarft ( const char *direct, const char *storev, mplapackint n, mplapackint k, long double * v, mplapackint ldv, long double * tau, long double * t, mplapackint ldt );
void Clarft ( const char *direct, const char *storev, mplapackint n, mplapackint k, std::complex<long double> * v, mplapackint ldv, std::complex<long double> * tau, std::complex<long double> * t, mplapackint ldt );
void Rlarfb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, long double * V, mplapackint ldv, long double * T, mplapackint ldt, long double * C, mplapackint ldc, long double * work, mplapackint ldwork );
void Clarfb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * V, mplapackint ldv, std::complex<long double> * T, mplapackint ldt, std::complex<long double> * C, mplapackint ldc, std::complex<long double> * work, mplapackint ldwork );
void Rlatrd ( const char *uplo, mplapackint n, mplapackint nb, long double * A, mplapackint lda, long double * e, long double * tau, long double * w, mplapackint ldw );
void Clatrd ( const char *uplo, mplapackint n, mplapackint nb, std::complex<long double> * A, mplapackint lda, long double * e, std::complex<long double> * tau, std::complex<long double> * w, mplapackint ldw );
void Clacrm ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * B, mplapackint ldb, std::complex<long double> * c, mplapackint ldc, long double * rwork );
void Rtrti2 ( const char *uplo, const char *diag, mplapackint n, long double * A, mplapackint lda, mplapackint *info );
void Ctrti2 ( const char *uplo, const char *diag, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *info );
void Rgetf2 ( mplapackint m, mplapackint n, long double * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Cgetf2 ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rlaswp ( mplapackint n, long double * A, mplapackint lda, mplapackint k1, mplapackint k2, mplapackint *ipiv, mplapackint incx );
void Claswp ( mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint k1, mplapackint k2, mplapackint *ipiv, mplapackint incx );
void Rlasyf ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, long double * A, mplapackint lda, mplapackint *ipiv, long double * w, mplapackint ldw, mplapackint *info );
void Clasyf ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * w, mplapackint ldw, mplapackint *info );
void Clahef ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * w, mplapackint ldw, mplapackint *info );
void Clacrt ( mplapackint n, std::complex<long double> * cx, mplapackint incx, std::complex<long double> * cy, mplapackint incy, std::complex<long double> c, std::complex<long double> s );
void Claesy ( std::complex<long double> a, std::complex<long double> b, std::complex<long double> c, std::complex<long double> * rt1, std::complex<long double> * rt2, std::complex<long double> * evscal, std::complex<long double> * cs1, std::complex<long double> * sn1 );
void Crot ( mplapackint n, std::complex<long double> * cx, mplapackint incx, std::complex<long double> * cy, mplapackint incy, long double c, std::complex<long double> s );
void Cspmv ( const char *uplo, mplapackint n, std::complex<long double> alpha, std::complex<long double> * AP, std::complex<long double> * x, mplapackint incx, std::complex<long double> beta, std::complex<long double> * y, mplapackint incy );
void Cspr ( const char *uplo, mplapackint n, std::complex<long double> alpha, std::complex<long double> * x, mplapackint incx, std::complex<long double> * AP );
void Csymv ( const char *uplo, mplapackint n, std::complex<long double> alpha, std::complex<long double> * A, mplapackint lda, std::complex<long double> * x, mplapackint incx, std::complex<long double> beta, std::complex<long double> * y, mplapackint incy );
void Csyr ( const char *uplo, mplapackint n, std::complex<long double> alpha, std::complex<long double> * x, mplapackint incx, std::complex<long double> * A, mplapackint lda );
mplapackint iCmax1 ( mplapackint n, std::complex<long double> * cx, mplapackint incx );
long double RCsum1 ( mplapackint n, std::complex<long double> * cx, mplapackint incx );
void Rlacn2 ( mplapackint n, long double * v, long double * x, mplapackint *isgn, long double * est, mplapackint *kase, mplapackint *isave );
void Clacn2 ( mplapackint n, std::complex<long double> * v, std::complex<long double> * x, long double * est, mplapackint *kase, mplapackint *isave );
void Rlatrs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, long double * A, mplapackint lda, long double * x, long double * scale, long double * cnorm, mplapackint *info );
void Clatrs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * x, long double * scale, long double * cnorm, mplapackint *info );

/* not yet done ... auxiliary routines */
void Rgbtf2 ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, long double * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Cgbtf2 ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, std::complex<long double> * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Rgebd2 ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * d, long double * e, long double * tauq, long double * taup, long double * work, mplapackint *info );
void Cgebd2 ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * d, long double * e, std::complex<long double> * tauq, std::complex<long double> * taup, std::complex<long double> * work, mplapackint *info );
void Rgehd2 ( mplapackint n, mplapackint ilo, mplapackint ihi, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint *info );
void Cgehd2 ( mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint *info );
void Rgelq2 ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint *info );
void Cgelq2 ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint *info );
void Rgeql2 ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint *info );
void Cgeql2 ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint *info );
void Rgeqr2 ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint *info );
void Cgeqr2 ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint *info );
void Rgerq2 ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint *info );
void Cgerq2 ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint *info );
void Rgesc2 ( mplapackint n, long double * A, mplapackint lda, long double * rhs, mplapackint *ipiv, mplapackint *jpiv, long double * scale );
void Cgesc2 ( mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * rhs, mplapackint *ipiv, mplapackint *jpiv, long double * scale );
void Rgetc2 ( mplapackint n, long double * A, mplapackint lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint *info );
void Cgetc2 ( mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint *info );
void Rgtts2 ( mplapackint itrans, mplapackint n, mplapackint nrhs, long double * dl, long double * d, long double * du, long double * du2, mplapackint *ipiv, long double * B, mplapackint ldb );
void Cgtts2 ( mplapackint itrans, mplapackint n, mplapackint nrhs, std::complex<long double> * dl, std::complex<long double> * d, std::complex<long double> * du, std::complex<long double> * du2, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb );
void Rlabrd ( mplapackint m, mplapackint n, mplapackint nb, long double * A, mplapackint lda, long double * d, long double * e, long double * tauq, long double * taup, long double * x, mplapackint ldx, long double * y, mplapackint ldy );
void Clabrd ( mplapackint m, mplapackint n, mplapackint nb, std::complex<long double> * A, mplapackint lda, long double * d, long double * e, std::complex<long double> * tauq, std::complex<long double> * taup, std::complex<long double> * x, mplapackint ldx, std::complex<long double> * y, mplapackint ldy );
void Rlacpy ( const char *uplo, mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb );
void Clacpy ( const char *uplo, mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb );
void Clarcm ( mplapackint m, mplapackint n, long double * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * c, mplapackint ldc, long double * rwork );
void Rlaebz ( mplapackint ijob, mplapackint nitmax, mplapackint n, mplapackint mmax, mplapackint minp, mplapackint nbmin, long double abstol, long double reltol, long double pivmin, long double * d, long double * e, long double * e2, mplapackint *nval, long double * AB, long double * c, mplapackint *mout, mplapackint *nab, long double * work, mplapackint *iwork, mplapackint *info );
void Rlaed0 ( mplapackint icompq, mplapackint qsiz, mplapackint n, long double * d, long double * e, long double * q, mplapackint ldq, long double * qstore, mplapackint ldqs, long double * work, mplapackint *iwork, mplapackint *info );
void Claed0 ( mplapackint qsiz, mplapackint n, long double * d, long double * e, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * qstore, mplapackint ldqs, long double * rwork, mplapackint *iwork, mplapackint *info );
void Rlaed1 ( mplapackint n, long double * d, long double * q, mplapackint ldq, mplapackint *indxq, long double rho, mplapackint cutpnt, long double * work, mplapackint *iwork, mplapackint *info );
void Rlaed2 ( mplapackint *k, mplapackint n, mplapackint n1, long double * d, long double * q, mplapackint ldq, mplapackint *indxq, long double * rho, long double * z, long double * dlamda, long double * w, long double * q2, mplapackint *indx, mplapackint *indxc, mplapackint *indxp, mplapackint *coltyp, mplapackint *info );
void Rlaed3 ( mplapackint k, mplapackint n, mplapackint n1, long double * d, long double * q, mplapackint ldq, long double * rho, long double * dlamda, long double * q2, mplapackint *indx, mplapackint *ctot, long double * w, long double * s, mplapackint *info );
void Rlaed4 ( mplapackint n, mplapackint i, long double * d, long double * z, long double * delta, long double rho, long double * dlam, mplapackint *info );
void Rlaed5 ( mplapackint i, long double * d, long double * z, long double * delta, long double rho, long double * dlam );
void Rlaed6 ( mplapackint kniter, mplapackint orgati, long double rho, long double * d, long double * z, long double * finit, long double * tau, mplapackint *info );
void Rlaed7 ( mplapackint icompq, mplapackint n, mplapackint qsiz, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, long double * d, long double * q, mplapackint ldq, mplapackint *indxq, long double rho, mplapackint cutpnt, long double * qstore, mplapackint *qptr, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, long double * givnum, long double * work, mplapackint *iwork, mplapackint *info );
void Claed7 ( mplapackint n, mplapackint cutpnt, mplapackint qsiz, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, long double * d, std::complex<long double> * q, mplapackint ldq, long double rho, mplapackint *indxq, long double * qstore, mplapackint *qptr, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, long double * givnum, std::complex<long double> * work, long double * rwork, mplapackint *iwork, mplapackint *info );
void Rlaed8 ( mplapackint icompq, mplapackint *k, mplapackint n, mplapackint qsiz, long double * d, long double * q, mplapackint ldq, mplapackint *indxq, long double * rho, mplapackint cutpnt, long double * z, long double * dlamda, long double * q2, mplapackint ldq2, long double * w, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, long double * givnum, mplapackint *indxp, mplapackint *indx, mplapackint *info );
void Claed8 ( mplapackint *k, mplapackint n, mplapackint qsiz, std::complex<long double> * q, mplapackint ldq, long double * d, long double * rho, mplapackint cutpnt, long double * z, long double * dlamda, std::complex<long double> * q2, mplapackint ldq2, long double * w, mplapackint *indxp, mplapackint *indx, mplapackint *indxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, long double * givnum, mplapackint *info );
void Rlaed9 ( mplapackint k, mplapackint kstart, mplapackint kstop, mplapackint n, long double * d, long double * q, mplapackint ldq, long double rho, long double * dlamda, long double * w, long double * s, mplapackint lds, mplapackint *info );
void Rlaeda ( mplapackint n, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, long double * givnum, long double * q, mplapackint *qptr, long double * z, long double * ztemp, mplapackint *info );
void Rlaein ( mplapackint rightv, mplapackint noinit, mplapackint n, long double * h, mplapackint ldh, long double wr, long double wi, long double * vr, long double * vi, long double * B, mplapackint ldb, long double * work, long double eps3, long double smlnum, long double bignum, mplapackint *info );
void Claein ( mplapackint rightv, mplapackint noinit, mplapackint n, std::complex<long double> * h, mplapackint ldh, std::complex<long double> w, std::complex<long double> * v, std::complex<long double> * B, mplapackint ldb, long double * rwork, long double eps3, long double smlnum, mplapackint *info );
void Rlaexc ( mplapackint wantq, mplapackint n, long double * t, mplapackint ldt, long double * q, mplapackint ldq, mplapackint j1, mplapackint n1, mplapackint n2, long double * work, mplapackint *info );
void Rlag2 ( long double * A, mplapackint lda, long double * B, mplapackint ldb, long double safmin, long double * scale1, long double * scale2, long double * wr1, long double * wr2, long double * wi );
void Rlags2 ( mplapackint upper, long double a1, long double a2, long double a3, long double b1, long double b2, long double b3, long double * csu, long double * snu, long double * csv, long double * snv, long double * csq, long double * snq );
void Clags2 ( mplapacklogical * upper, long double a1, std::complex<long double> a2, long double a3, long double b1, std::complex<long double> b2, long double b3, long double * csu, std::complex<long double> * snu, long double * csv, std::complex<long double> * snv, long double * csq, std::complex<long double> * snq );
void Rlagtf ( mplapackint n, long double * a, long double lambda, long double * b, long double * c, long double * tol, long double * d, mplapackint *in, mplapackint *info );
void Rlagtm ( const char *trans, mplapackint n, mplapackint nrhs, long double alpha, long double * dl, long double * d, long double * du, long double * x, mplapackint ldx, long double * beta, long double * B, mplapackint ldb );
void Clagtm ( const char *trans, mplapackint n, mplapackint nrhs, long double alpha, std::complex<long double> * dl, std::complex<long double> * d, std::complex<long double> * du, std::complex<long double> * x, mplapackint ldx, long double beta, std::complex<long double> * B, mplapackint ldb );
void Rlagts ( mplapackint job, mplapackint n, long double * a, long double * b, long double * c, long double * d, mplapackint *in, long double * y, long double * tol, mplapackint *info );
void Rlagv2 ( long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * alphar, long double * alphai, long double * beta, long double * csl, long double * snl, long double * csr, long double * snr );
void Rlahqr ( mplapackint wantt, mplapackint wantz, mplapackint n, mplapackint ilo, mplapackint ihi, long double * h, mplapackint ldh, long double * wr, long double * wi, mplapackint iloz, mplapackint ihiz, long double * z, mplapackint ldz, mplapackint *info );
void Clahqr ( mplapackint wantt, mplapackint wantz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<long double> * h, mplapackint ldh, std::complex<long double> * w, mplapackint iloz, mplapackint ihiz, std::complex<long double> * z, mplapackint ldz, mplapackint *info );
void Rlahr2 ( mplapackint n, mplapackint k, mplapackint nb, long double * A, mplapackint lda, long double * tau, long double * t, mplapackint ldt, long double * y, mplapackint ldy );
void Clahr2 ( mplapackint n, mplapackint k, mplapackint nb, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * t, mplapackint ldt, std::complex<long double> * y, mplapackint ldy );
void Rlahrd ( mplapackint n, mplapackint k, mplapackint nb, long double * A, mplapackint lda, long double * tau, long double * t, mplapackint ldt, long double * y, mplapackint ldy );
void Clahrd ( mplapackint n, mplapackint k, mplapackint nb, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * t, mplapackint ldt, std::complex<long double> * y, mplapackint ldy );
void Rlaic1 ( mplapackint job, mplapackint j, long double * x, long double sest, long double * w, long double gamma, long double * sestpr, long double * s, long double * c );
void Claic1 ( mplapackint job, mplapackint j, std::complex<long double> * x, long double sest, std::complex<long double> * w, std::complex<long double> gamma, long double * sestpr, std::complex<long double> * s, std::complex<long double> * c );
void Rlaln2 ( mplapackint ltrans, mplapackint na, mplapackint nw, long double smin, long double ca, long double * A, mplapackint lda, long double d1, long double d2, long double * B, mplapackint ldb, long double wr, long double wi, long double * x, mplapackint ldx, long double * scale, long double * xnorm, mplapackint *info );
void Rlals0 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint nrhs, long double * B, mplapackint ldb, long double * bx, mplapackint ldbx, mplapackint *perm, mplapackint givptr, mplapackint *givcol, mplapackint ldgcol, long double * givnum, mplapackint ldgnum, long double * poles, long double * difl, long double * difr, long double * z, mplapackint k, long double c, long double s, long double * work, mplapackint *info );
void Clals0 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint nrhs, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * bx, mplapackint ldbx, mplapackint *perm, mplapackint givptr, mplapackint *givcol, mplapackint ldgcol, long double * givnum, mplapackint ldgnum, long double * poles, long double * difl, long double * difr, long double * z, mplapackint k, long double c, long double s, long double * rwork, mplapackint *info );
void Rlalsa ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint nrhs, long double * B, mplapackint ldb, long double * bx, mplapackint ldbx, long double * u, mplapackint ldu, long double * vt, mplapackint *k, long double * difl, long double * difr, long double * z, long double * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, long double * givnum, long double * c, long double * s, long double * work, mplapackint *iwork, mplapackint *info );
void Clalsa ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint nrhs, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * bx, mplapackint ldbx, long double * u, mplapackint ldu, long double * vt, mplapackint *k, long double * difl, long double * difr, long double * z, long double * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, long double * givnum, long double * c, long double * s, long double * rwork, mplapackint *iwork, mplapackint *info );
void Rlalsd ( const char *uplo, mplapackint smlsiz, mplapackint n, mplapackint nrhs, long double * d, long double * e, long double * B, mplapackint ldb, long double rcond, mplapackint *rank, long double * work, mplapackint *iwork, mplapackint *info );
void Clalsd ( const char *uplo, mplapackint smlsiz, mplapackint n, mplapackint nrhs, long double * d, long double * e, std::complex<long double> * B, mplapackint ldb, long double rcond, mplapackint *rank, std::complex<long double> * work, long double * rwork, mplapackint *iwork, mplapackint *info );
void Rlamrg ( mplapackint n1, mplapackint n2, long double * a, mplapackint dtrd1, mplapackint dtrd2, mplapackint *index );
long double Rlangb ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, long double * ab, mplapackint ldab, long double * work );
long double Clangb ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, std::complex<long double> * AB, mplapackint ldab, long double * work );
long double Rlange ( const char *norm, mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * work );
long double Clange ( const char *norm, mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * work );
long double Rlangt ( const char *norm, mplapackint n, long double * dl, long double * d, long double * du );
long double Clangt ( const char *norm, mplapackint n, std::complex<long double> * dl, std::complex<long double> * d, std::complex<long double> * du );
long double Rlanhs ( const char *norm, mplapackint n, long double * A, mplapackint lda, long double * work );
long double Clanhs ( const char *norm, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * work );
long double Rlansb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, long double * AB, mplapackint ldab, long double * work );
long double Clansb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, std::complex<long double> * AB, mplapackint ldab, long double * work );
long double Clanhb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, std::complex<long double> * AB, mplapackint ldab, long double * work );
long double Rlansp ( const char *norm, const char *uplo, mplapackint n, long double * ap, long double * work );
long double Clansp ( const char *norm, const char *uplo, mplapackint n, std::complex<long double> * ap, long double * work );
long double Clanhp ( const char *norm, const char *uplo, mplapackint n, std::complex<long double> * ap, long double * work );
long double Rlantb ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint k, long double * AB, mplapackint ldab, long double * work );
std::complex<long double> Clantb ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint k, std::complex<long double> * AB, mplapackint ldab, long double * work );
long double Rlantp ( const char *norm, const char *uplo, const char *diag, mplapackint n, long double * ap, long double * work );
std::complex<long double> Clantp ( const char *norm, const char *uplo, const char *diag, mplapackint n, std::complex<long double> * ap, long double * work );
long double Rlantr ( const char *norm, const char *uplo, const char *diag, mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * work );
long double Clantr ( const char *norm, const char *uplo, const char *diag, mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * work );
void Rlanv2 ( long double * a, long double * b, long double * c, long double * d, long double * rt1r, long double * rt1i, long double * rt2r, long double * rt2i, long double * cs, long double * sn );
void Rlapll ( mplapackint n, long double * x, mplapackint incx, long double * y, mplapackint incy, long double * ssmin );
void Clapll ( mplapackint n, std::complex<long double> * x, mplapackint incx, std::complex<long double> * y, mplapackint incy, long double * ssmin );
void Rlapmt ( mplapackint *forwrd, mplapackint m, mplapackint n, long double * X, mplapackint ldx, mplapackint *k );
void Clapmt ( mplapackint *forwrd, mplapackint m, mplapackint n, std::complex<long double> * X, mplapackint ldx, mplapackint *k );
void Rlaqgb ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, long double * AB, mplapackint ldab, long double * r, long double * c, long double rowcnd, long double colcnd, long double amax, char *equed );
void Claqgb ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, std::complex<long double> * AB, mplapackint ldab, long double * r, long double * c, long double rowcnd, long double colcnd, long double amax, char *equed );
void Rlaqge ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * r, long double * c, long double rowcnd, long double colcnd, long double amax, char *equed );
void Claqge ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * r, long double * c, long double rowcnd, long double colcnd, long double amax, char *equed );
void Rlaqp2 ( mplapackint m, mplapackint n, mplapackint offset, long double * A, mplapackint lda, mplapackint *jpvt, long double * tau, long double * vn1, long double * vn2, long double * work );
void Claqp2 ( mplapackint m, mplapackint n, mplapackint offset, std::complex<long double> * A, mplapackint lda, mplapackint *jpvt, std::complex<long double> * tau, long double * vn1, long double * vn2, std::complex<long double> * work );
void Rlaqps ( mplapackint m, mplapackint n, mplapackint offset, mplapackint nb, mplapackint *kb, long double * A, mplapackint lda, mplapackint *jpvt, long double * tau, long double * vn1, long double * vn2, long double * auxv, long double * f, mplapackint ldf );
void Claqps ( mplapackint m, mplapackint n, mplapackint offset, mplapackint nb, mplapackint *kb, std::complex<long double> * A, mplapackint lda, mplapackint *jpvt, std::complex<long double> * tau, long double * vn1, long double * vn2, std::complex<long double> * auxv, std::complex<long double> * f, mplapackint ldf );
void Rlaqsb ( const char *uplo, mplapackint n, mplapackint kd, long double * ab, mplapackint ldab, long double * s, long double scond, long double amax, char *equed );
void Claqsb ( const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * ab, mplapackint ldab, long double * s, long double scond, long double amax, char *equed );
void Claqhb ( const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, long double * s, long double scond, long double amax, char *equed );
void Rlaqsp ( const char *uplo, mplapackint n, long double * ap, long double * s, long double scond, long double amax, char *equed );
void Claqsp ( const char *uplo, mplapackint n, std::complex<long double> * ap, long double * s, long double scond, long double amax, char *equed );
void Claqhp ( const char *uplo, mplapackint n, std::complex<long double> * ap, long double * s, long double scond, long double amax, char *equed );
void Rlaqsy ( const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * s, long double scond, long double amax, char *equed );
void Claqsy ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * s, long double scond, long double amax, char *equed );
void Claqhe ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * s, long double scond, long double amax, char *equed );
void Rlaqtr ( mplapackint ltran, mplapackint lreal, mplapackint n, long double * t, mplapackint ldt, long double * B, long double w, long double * scale, long double * x, long double * work, mplapackint *info );
void Rlar1v ( mplapackint n, mplapackint b1, mplapackint bn, long double lambda, long double * d, long double * l, long double * ld, long double * lld, long double pivmin, long double gaptol, long double * z, mplapackint wantnc, mplapackint *negcnt, long double * ztz, long double * mingma, mplapackint *r, mplapackint *isuppz, long double * nrminv, long double * resid, long double * rqcorr, long double * work );
void Clar1v ( mplapackint n, mplapackint b1, mplapackint bn, long double lambda, long double * d, long double * l, long double * ld, long double * lld, long double pivmin, long double gaptol, std::complex<long double> * z, mplapackint wantnc, mplapackint *negcnt, long double * ztz, long double * mingma, mplapackint *r, mplapackint *isuppz, long double * nrminv, long double * resid, long double * rqcorr, long double * work );
void Rlar2v ( mplapackint n, long double * x, long double * y, long double * z, mplapackint incx, long double * c, long double * s, mplapackint incc );
void Clar2v ( mplapackint n, std::complex<long double> * x, std::complex<long double> * y, std::complex<long double> * z, mplapackint incx, long double * c, std::complex<long double> * s, mplapackint incc );
void Rlarfx ( const char *side, mplapackint m, mplapackint n, long double * v, long double tau, long double * c, mplapackint ldc, long double * work );
void Clarfx ( const char *side, mplapackint m, mplapackint n, std::complex<long double> * v, std::complex<long double> tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work );
void Rlargv ( mplapackint n, long double * x, mplapackint incx, long double * y, mplapackint incy, long double * c, mplapackint incc );
void Clargv ( mplapackint n, std::complex<long double> * x, mplapackint incx, std::complex<long double> * y, mplapackint incy, long double * c, mplapackint incc );
void Rlarnv ( mplapackint idist, mplapackint *iseed, mplapackint n, long double * x );
void Clarnv ( mplapackint idist, mplapackint *iseed, mplapackint n, std::complex<long double> * x );
mplapackint Rlaneg ( mplapackint n, long double * d, long double * lld, long double sigma, long double pivmin, mplapackint r );
void Rlarra ( mplapackint n, long double * d, long double * e, long double * e2, long double spltol, long double tnrm, mplapackint *nsplit, mplapackint *isplit, mplapackint *info );
void Rlarrb ( mplapackint n, long double * d, long double * lld, mplapackint ifirst, mplapackint ilast, long double rtol1, long double rtol2, mplapackint offset, long double * w, long double * wgap, long double * werr, long double * work, mplapackint *iwork, long double pivmin, long double spdiam, mplapackint twist, mplapackint *info );
void Rlarrc ( const char *jobt, mplapackint n, long double vl, long double vu, long double * d, long double * e, long double pivmin, mplapackint *eigcnt, mplapackint *lcnt, mplapackint *rcnt, mplapackint *info );
void Rlarrd ( const char *range, const char *order, mplapackint n, long double vl, long double vu, mplapackint il, mplapackint iu, long double *gers, long double reltol, long double * d, long double * e, long double * e2, long double pivmin, mplapackint nsplit, mplapackint *isplit, mplapackint *m, long double * w, long double * werr, long double * wl, long double * wu, mplapackint *iblock, mplapackint *indexw, long double * work, mplapackint *iwork, mplapackint *info );
void Rlarre ( const char *range, mplapackint n, long double * vl, long double * vu, mplapackint il, mplapackint iu, long double * d, long double * e, long double * e2, long double rtol1, long double rtol2, long double spltol, mplapackint * nsplit, mplapackint *isplit, mplapackint * m, long double * w, long double * werr, long double * wgap, mplapackint *iblock, mplapackint *indexw, long double * gers, long double * pivmin, long double * work, mplapackint *iwork, mplapackint *info );
void Rlarrf ( mplapackint n, long double * d, long double * l, long double * ld, mplapackint clstrt, mplapackint clend, long double * w, long double * wgap, long double * werr, long double spdiam, long double clgapl, long double clgapr, long double pivmin, long double * sigma, long double * dplus, long double * lplus, long double * work, mplapackint *info );
void Rlarrj ( mplapackint n, long double * d, long double * e2, mplapackint ifirst, mplapackint ilast, long double rtol, mplapackint offset, long double * w, long double * werr, long double * work, mplapackint *iwork, long double pivmin, long double spdiam, mplapackint *info );
void Rlarrk ( mplapackint n, mplapackint iw, long double gl, long double gu, long double * d, long double * e2, long double pivmin, long double reltol, long double * w, long double * werr, mplapackint *info );
void Rlarrr ( mplapackint n, long double * d, long double * e, mplapackint *info );
void Rlartv ( mplapackint n, long double * x, mplapackint incx, long double * y, mplapackint incy, long double * c, long double * s, mplapackint incc );
void Clartv ( mplapackint n, std::complex<long double> * x, mplapackint incx, std::complex<long double> * y, mplapackint incy, long double * c, std::complex<long double> * s, mplapackint incc );
void Rlarrv ( mplapackint n, long double vl, long double vu, long double * d, long double * l, long double pivmin, mplapackint * isplit, mplapackint m, mplapackint dol, mplapackint dou, long double minrgp, long double rtol1, long double rtol2, long double * w, long double * werr, long double * wgap, mplapackint * iblock, mplapackint * indexw, long double * gers, long double * z, mplapackint ldz, mplapackint * isuppz, long double * work, mplapackint * iwork, mplapackint * info );
void Clarrv ( mplapackint n, long double vl, long double vu, long double * d, long double * l, long double pivmin, mplapackint *isplit, mplapackint m, mplapackint dol, mplapackint dou, long double minrgp, long double rtol1, long double rtol2, long double * w, long double * werr, long double * wgap, mplapackint *iblock, mplapackint *indexw, long double * gers, std::complex<long double> * z, mplapackint ldz, mplapackint *isuppz, long double * work, mplapackint *iwork, mplapackint *info );
void Rlaruv ( mplapackint *iseed, mplapackint n, long double * x );
void Rlarz ( const char *side, mplapackint m, mplapackint n, mplapackint l, long double * v, mplapackint incv, long double tau, long double * C, mplapackint ldc, long double * work );
void Clarz ( const char *side, mplapackint m, mplapackint n, mplapackint l, std::complex<long double> * v, mplapackint incv, std::complex<long double> tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work );
void Rlarzb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mplapackint l, long double * v, mplapackint ldv, long double * t, mplapackint ldt, long double * c, mplapackint ldc, long double * work, mplapackint ldwork );
void Clarzb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mplapackint l, std::complex<long double> * v, mplapackint ldv, std::complex<long double> * t, mplapackint ldt, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint ldwork );
void Rlarzt ( const char *direct, const char *storev, mplapackint n, mplapackint k, long double * v, mplapackint ldv, long double * tau, long double * t, mplapackint ldt );
void Clarzt ( const char *direct, const char *storev, mplapackint n, mplapackint k, std::complex<long double> * v, mplapackint ldv, std::complex<long double> * tau, std::complex<long double> * t, mplapackint ldt );
void Rlas2 ( long double f, long double g, long double h, long double * ssmin, long double * ssmax );
void Rlasd0 ( mplapackint n, mplapackint sqre, long double * d, long double * e, long double * u, mplapackint ldu, long double * vt, mplapackint ldvt, mplapackint smlsiz, mplapackint *iwork, long double * work, mplapackint *info );
void Rlasd1 ( mplapackint nl, mplapackint nr, mplapackint *sqre, long double * d, long double * alpha, long double * beta, long double * u, mplapackint ldu, long double * vt, mplapackint ldvt, mplapackint *idxq, mplapackint *iwork, long double * work, mplapackint *info );
void Rlasd2 ( mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint *k, long double * d, long double * z, long double alpha, long double beta, long double * u, mplapackint ldu, long double * vt, mplapackint ldvt, long double * dsigma, long double * u2, mplapackint ldu2, long double * vt2, mplapackint ldvt2, mplapackint *idxp, mplapackint *idx, mplapackint *idxc, mplapackint *idxq, mplapackint *coltyp, mplapackint *info );
void Rlasd3 ( mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint k, long double * d, long double * q, mplapackint ldq, long double * dsigma, long double * u, mplapackint ldu, long double * u2, mplapackint ldu2, long double * vt, mplapackint ldvt, long double * vt2, mplapackint ldvt2, mplapackint *idxc, mplapackint *ctot, long double * z, mplapackint *info );
void Rlasd4 ( mplapackint n, mplapackint i, long double * d, long double * z, long double * delta, long double rho, long double * sigma, long double * work, mplapackint *info );
void Rlasd5 ( mplapackint i, long double * d, long double * z, long double * delta, long double rho, long double * dsigma, long double * work );
void Rlasd6 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, long double * d, long double * vf, long double * vl, long double * alpha, long double * beta, mplapackint *idxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, long double * givnum, mplapackint ldgnum, long double * poles, long double * difl, long double * difr, long double * z, mplapackint k, long double * c, long double * s, long double * work, mplapackint *iwork, mplapackint *info );
void Rlasd7 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint k, long double * d, long double * z, long double * zw, long double * vf, long double * vfw, long double * vl, long double * vlw, long double alpha, long double beta, long double * dsigma, mplapackint *idx, mplapackint *idxp, mplapackint *idxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, long double * givnum, mplapackint ldgnum, long double * c, long double * s, mplapackint *info );
void Rlasd8 ( mplapackint icompq, mplapackint k, long double * d, long double * z, long double * vf, long double * vl, long double * difl, long double * difr, mplapackint lddifr, long double * dsigma, long double * work, mplapackint *info );
void Rlasda ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint sqre, long double * d, long double * e, long double * u, mplapackint ldu, long double * vt, mplapackint *k, long double * difl, long double * difr, long double * z, long double * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, long double * givnum, long double * c, long double * s, long double * work, mplapackint *iwork, mplapackint *info );
void Rlasdq ( const char *uplo, mplapackint sqre, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, long double * d, long double * e, long double * vt, mplapackint ldvt, long double * u, mplapackint ldu, long double * c, mplapackint ldc, long double * work, mplapackint *info );
void Rlasdt ( mplapackint n, mplapackint lvl, mplapackint nd, mplapackint *inode, mplapackint *ndiml, mplapackint *ndimr, mplapackint msub );
void Rlasq1 ( mplapackint n, long double * d, long double * e, long double * work, mplapackint *info );
void Rlasq2 ( mplapackint n, long double * z, mplapackint *info );
void Rlasq3 ( mplapackint i0, mplapackint n0, long double * z, mplapackint pp, long double * dmin, long double * sigma, long double * desig, long double qmax, mplapackint *nfail, mplapackint *iter, mplapackint *ndiv, mplapackint ieee );
void Rlasq4 ( mplapackint i0, mplapackint n0, long double * z, mplapackint pp, mplapackint n0in, long double dmin, long double dmin1, long double dmin2, long double dn, long double dn1, long double dn2, long double * tau, mplapackint *ttype );
void Rlasq5 ( mplapackint i0, mplapackint n0, long double * z, mplapackint pp, long double tau, long double * dmin, long double * dmin1, long double * dmin2, long double * dn, long double * dnm1, long double * dnm2, mplapackint ieee );
void Rlasq6 ( mplapackint i0, mplapackint n0, long double * z, mplapackint pp, long double * dmin, long double * dmin1, long double * dmin2, long double * dn, long double * dnm1, long double * dnm2 );
void Rlasv2 ( long double f, long double g, long double h, long double * ssmin, long double * ssmax, long double * snr, long double * csr, long double * snl, long double * csl );
void Rlasy2 ( mplapackint ltranl, mplapackint ltranr, mplapackint isgn, mplapackint n1, mplapackint n2, long double * tl, mplapackint ldtl, long double * tr, mplapackint ldtr, long double * B, mplapackint ldb, long double * scale, long double * x, mplapackint ldx, long double * xnorm, mplapackint *info );
void Rlatbs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mplapackint kd, long double * AB, mplapackint ldab, long double * x, long double * scale, long double * cnorm, mplapackint *info );
void Clatbs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * x, long double * scale, long double * cnorm, mplapackint *info );
void Rlatdf ( mplapackint ijob, mplapackint n, long double * z, mplapackint ldz, long double * rhs, long double * rdsum, long double * rdscal, mplapackint *ipiv, mplapackint *jpiv );
void Clatdf ( mplapackint ijob, mplapackint n, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * rhs, long double * rdsum, long double * rdscal, mplapackint *ipiv, mplapackint *jpiv );
void Rlatps ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, long double * ap, long double * x, long double * scale, long double * cnorm, mplapackint *info );
void Clatps ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, std::complex<long double> * ap, std::complex<long double> * x, long double * scale, long double * cnorm, mplapackint *info );
void Rlauu2 ( const char *uplo, mplapackint n, long double * A, mplapackint lda, mplapackint *info );
void Clauu2 ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *info );
void Rlauum ( const char *uplo, mplapackint n, long double * A, mplapackint lda, mplapackint *info );
void Clauum ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *info );
void Rlatrz ( mplapackint m, mplapackint n, mplapackint l, long double * A, mplapackint lda, long double * tau, long double * work );
void Clatrz ( mplapackint m, mplapackint n, mplapackint l, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work );
void Rorgl2 ( mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint *info );
void Cungl2 ( mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint *info );
void Rorgr2 ( mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint *info );
void Cungr2 ( mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint *info );
void Rorm2l ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint *info );
void Cunm2l ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint *info );
void Rorm2r ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint *info );
void Cunm2r ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint *info );
void Rorml2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint *info );
void Cunml2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint *info );
void Rormr2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * C, mplapackint ldc, long double * work, mplapackint *info );
void Cunmr2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint *info );
void Rormr3 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint *info );
void Cunmr3 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint *info );
void Rpbtf2 ( const char *uplo, mplapackint n, mplapackint kd, long double * AB, mplapackint ldab, mplapackint *info );
void Cpbtf2 ( const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, mplapackint *info );
void Rptts2 ( mplapackint n, mplapackint nrhs, long double * d, long double * e, long double * b, mplapackint ldb );
void Cptts2 ( mplapackint iuplo, mplapackint n, mplapackint nrhs, long double * d, std::complex<long double> * e, std::complex<long double> * B, mplapackint ldb );
void Rrscl ( mplapackint n, long double sa, long double * sx, mplapackint incx );
void CRrscl ( mplapackint n, long double sa, std::complex<long double> * sx, mplapackint incx );
void Rsygs2 ( mplapackint itype, const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, mplapackint *info );
void Chegs2 ( mplapackint itype, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rsytf2 ( const char *uplo, mplapackint n, long double * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Csytf2 ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Chetf2 ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rtgex2 ( mplapackint wantq, mplapackint wantz, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * q, mplapackint ldq, long double * z, mplapackint ldz, mplapackint j1, mplapackint n1, mplapackint n2, long double * work, mplapackint lwork, mplapackint *info );
void Ctgex2 ( mplapackint wantq, mplapackint wantz, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * z, mplapackint ldz, mplapackint j1, mplapackint *info );
void Rtgsy2 ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * c, mplapackint ldc, long double * d, mplapackint ldd, long double * e, mplapackint lde, long double * f, mplapackint ldf, long double * scale, long double * rdsum, long double * rdscal, mplapackint *iwork, mplapackint *pq, mplapackint *info );
void Ctgsy2 ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * C, mplapackint ldc, std::complex<long double> * d, mplapackint ldd, std::complex<long double> * e, mplapackint lde, std::complex<long double> * f, mplapackint ldf, long double * scale, long double * rdsum, long double * rdscal, mplapackint *info );
void Rlazq3 ( mplapackint i0, mplapackint n0, long double * z, mplapackint pp, long double * dmin, long double * sigma, long double * desig, long double qmax, mplapackint *nfail, mplapackint *iter, mplapackint *ndiv, mplapackint *ieee, mplapackint *ttype, long double * dmin1, long double * dmin2, long double * dn, long double * dn1, long double * dn2, long double * tau );
void Rlazq4 ( mplapackint i0, mplapackint n0, long double * z, mplapackint pp, mplapackint n0in, long double dmin, long double dmin1, long double dmin2, long double dn, long double dn1, long double dn2, long double * tau, mplapackint *ttype, long double * g );
void Rlaqr0 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, long double * h, mplapackint ldh, long double * wr, long double * wi, mplapackint iloz, mplapackint ihiz, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *info );
void Claqr0 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<long double> * h, mplapackint ldh, std::complex<long double> * w, mplapackint *iloz, mplapackint *ihiz, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rlaqr1 ( mplapackint n, long double * h, mplapackint ldh, long double sr1, long double si1, long double sr2, long double si2, long double * v );
void Claqr1 ( mplapackint n, std::complex<long double> * h, mplapackint ldh, std::complex<long double> s1, std::complex<long double> s2, std::complex<long double> * v );
void Rlaqr2 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, long double * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, long double * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, long double * sr, long double * si, long double * v, mplapackint ldv, mplapackint nh, long double * t, mplapackint ldt, mplapackint nv, long double * wv, mplapackint ldwv, long double * work, mplapackint lwork );
void Claqr2 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, std::complex<long double> * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, std::complex<long double> * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, std::complex<long double> * sh, std::complex<long double> * v, mplapackint ldv, mplapackint nh, std::complex<long double> * t, mplapackint ldt, mplapackint nv, std::complex<long double> * wv, mplapackint ldwv, std::complex<long double> * work, mplapackint lwork );
void Rlaqr3 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, long double * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, long double * z, mplapackint ldz, mplapackint ns, mplapackint nd, long double * sr, long double * si, long double * v, mplapackint ldv, mplapackint nh, long double * t, mplapackint ldt, mplapackint nv, long double * wv, mplapackint ldwv, long double * work, mplapackint lwork );
void Claqr3 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, std::complex<long double> * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, std::complex<long double> * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, std::complex<long double> * sh, std::complex<long double> * v, mplapackint ldv, mplapackint nh, std::complex<long double> * t, mplapackint ldt, mplapackint nv, std::complex<long double> * wv, mplapackint ldwv, std::complex<long double> * work, mplapackint lwork );
void Rlaqr4 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, long double * h, mplapackint ldh, long double * wr, long double * wi, mplapackint iloz, mplapackint ihiz, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *info );
void Claqr4 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<long double> * h, mplapackint ldh, std::complex<long double> * w, mplapackint iloz, mplapackint ihiz, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rlaqr5 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint kac22, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nshfts, long double * sr, long double * si, long double * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, long double * z, mplapackint ldz, long double * v, mplapackint ldv, long double * u, mplapackint ldu, mplapackint nv, long double * wv, mplapackint ldwv, mplapackint nh, long double * wh, mplapackint ldwh );
void Claqr5 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint kacc22, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nshfts, std::complex<long double> * s, std::complex<long double> * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * v, mplapackint ldv, std::complex<long double> * u, mplapackint ldu, mplapackint nv, std::complex<long double> * wv, mplapackint ldwv, mplapackint nh, std::complex<long double> * wh, mplapackint ldwh );
void Rlatzm ( const char *side, mplapackint m, mplapackint n, long double * v, mplapackint incv, long double * tau, long double *c1, long double * c2, mplapackint ldc, long double * work );
void Clatzm ( const char *side, mplapackint m, mplapackint n, std::complex<long double> * v, mplapackint incv, std::complex<long double> * tau, std::complex<long double> * c1, std::complex<long double> * c2, mplapackint ldc, std::complex<long double> * work );
void Clacp2 ( const char *uplo, mplapackint m, mplapackint n, long double * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb );
mplapackint Risnan ( long double din );

/* not yet done ... driver and computational routines */
void Rbdsdc ( const char *uplo, const char *compq, mplapackint n, long double * d, long double * e, long double * u, mplapackint ldu, long double * vt, mplapackint ldvt, long double * q, mplapackint * iq, long double * work, mplapackint * iwork, mplapackint * info );
void Rbdsqr ( const char *uplo, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, long double * d, long double * e, long double * vt, mplapackint ldvt, long double * u, mplapackint ldu, long double * c, mplapackint ldc, long double * work, mplapackint *info );
void Cbdsqr ( const char *uplo, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, long double * d, long double * e, std::complex<long double> * vt, mplapackint ldvt, std::complex<long double> * u, mplapackint ldu, std::complex<long double> * c, mplapackint ldc, long double * rwork, mplapackint * info );
void Rdisna ( const char *job, mplapackint m, mplapackint n, long double * d, long double * sep, mplapackint *info );
void Rgbbrd ( const char *vect, mplapackint m, mplapackint n, mplapackint ncc, mplapackint kl, mplapackint ku, long double * AB, mplapackint ldab, long double * d, long double * e, long double * q, mplapackint ldq, long double * pt, mplapackint ldpt, long double * c, mplapackint ldc, long double * work, mplapackint *info );
void Cgbbrd ( const char *vect, mplapackint m, mplapackint n, mplapackint ncc, mplapackint kl, mplapackint ku, std::complex<long double> * AB, mplapackint ldab, long double * d, long double * e, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * pt, mplapackint ldpt, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, long double * rwork, mplapackint * info );
void Rgbcon ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, long double * AB, mplapackint ldab, mplapackint *ipiv, long double anorm, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Cgbcon ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, std::complex<long double> * AB, mplapackint ldab, mplapackint *ipiv, long double anorm, long double * rcond, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rgbequ ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, long double * AB, mplapackint ldab, long double * r, long double * c, long double * rowcnd, long double * colcnd, long double * amax, mplapackint *info );
void Cgbequ ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, std::complex<long double> * AB, mplapackint ldab, long double * r, long double * c, long double * rowcnd, long double * colcnd, long double * amax, mplapackint *info );
void Rgbrfs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, long double * AB, mplapackint ldab, long double * afb, mplapackint ldafb, mplapackint *ipiv, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Cgbrfs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * afb, mplapackint ldafb, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rgbsv ( mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, long double * AB, mplapackint ldab, mplapackint *ipiv, long double * B, mplapackint ldb, mplapackint *info );
void Cgbsv ( mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, std::complex<long double> * ab, mplapackint ldab, mplapackint *ipiv, std::complex<long double> * b, mplapackint ldb, mplapackint *info );
void Rgbsvx ( const char *fact, const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, long double * AB, mplapackint ldab, long double * afb, mplapackint ldafb, mplapackint * ipiv, char *equed, long double * r, long double * c, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, long double * work, mplapackint * iwork, mplapackint * info );
void Cgbsvx ( const char *fact, const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * afb, mplapackint ldafb, mplapackint * ipiv, char *equed, long double * r, long double * c, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint * info );
void Rgbtrf ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, long double * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Cgbtrf ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, std::complex<long double> * ab, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Rgbtrs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, long double * AB, mplapackint ldab, mplapackint *ipiv, long double * B, mplapackint ldb, mplapackint *info );
void Cgbtrs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, std::complex<long double> * AB, mplapackint ldab, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rgebak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, long double * scale, mplapackint m, long double * v, mplapackint ldv, mplapackint *info );
void Cgebak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, long double * scale, mplapackint m, std::complex<long double> * v, mplapackint ldv, mplapackint *info );
void Rgebal ( const char *job, mplapackint n, long double * A, mplapackint lda, mplapackint *ilo, mplapackint *ihi, long double * scale, mplapackint *info );
void Cgebal ( const char *job, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ilo, mplapackint *ihi, long double * scale, mplapackint *info );
void Rgebrd ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * d, long double * e, long double * tauq, long double * taup, long double * work, mplapackint lwork, mplapackint *info );
void Cgebrd ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * d, long double * e, std::complex<long double> * tauq, std::complex<long double> * taup, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rgecon ( const char *norm, mplapackint n, long double * A, mplapackint lda, long double anorm, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Cgecon ( const char *norm, mplapackint n, std::complex<long double> * A, mplapackint lda, long double anorm, long double * rcond, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rgeequ ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * r, long double * c, long double * rowcnd, long double * colcnd, long double * amax, mplapackint *info );
void Cgeequ ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * r, long double * c, long double * rowcnd, long double * colcnd, long double * amax, mplapackint *info );
void Rgees ( const char *jobvs, const char *sort, LFP select, mplapackint n, long double * A, mplapackint lda, mplapackint *sdim, long double * wr, long double * wi, long double * vs, mplapackint ldvs, long double * work, mplapackint lwork, mplapacklogical * bwork, mplapackint *info );
void Cgees ( const char *jobvs, const char *sort, LFP select, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *sdim, std::complex<long double> * w, std::complex<long double> * vs, mplapackint ldvs, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapacklogical * bwork, mplapackint *info );
void Rgeesx ( const char *jobvs, const char *sort, LFP select, const char *sense, mplapackint n, long double * A, mplapackint lda, mplapackint * sdim, long double * wr, long double * wi, long double * vs, mplapackint ldvs, long double * rconde, long double * rcondv, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Cgeesx ( const char *jobvs, const char *sort, LFP select, const char *sense, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *sdim, std::complex<long double> * w, std::complex<long double> * vs, mplapackint ldvs, long double * rconde, long double * rcondv, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapacklogical * bwork, mplapackint *info );
void Rgeev ( const char *jobvl, const char *jobvr, mplapackint n, long double * A, mplapackint lda, long double * wr, long double * wi, long double * vl, mplapackint ldvl, long double * vr, mplapackint ldvr, long double * work, mplapackint lwork, mplapackint *info );
void Cgeev ( const char *jobvl, const char *jobvr, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * w, std::complex<long double> * vl, mplapackint ldvl, std::complex<long double> * vr, mplapackint ldvr, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * info );
void Rgeevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, long double * A, mplapackint lda, long double * wr, long double * wi, long double * vl, mplapackint ldvl, long double * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, long double * scale, long double * abnrm, long double * rconde, long double * rcondv, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Cgeevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * w, std::complex<long double> * vl, mplapackint ldvl, std::complex<long double> * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, long double * scale, long double * abnrm, long double * rconde, long double * rcondv, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * info );
void Cgehrd ( mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rgehrd ( mplapackint n, mplapackint ilo, mplapackint ihi, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Rgelqf ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cgelqf ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rgels ( const char *trans, mplapackint m, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * work, mplapackint lwork, mplapackint *info );
void Cgels ( const char *trans, mplapackint m, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rgelsx ( mplapackint m, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * B, mplapackint ldb, mplapackint *jpvt, long double rcond, mplapackint *rank, long double * work, mplapackint *info );
void Cgelsx ( mplapackint m, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, mplapackint *jpvt, long double rcond, mplapackint *rank, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rgelsd ( mplapackint m, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * s, long double * rcond, mplapackint *rank, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint *info );
void Cgelsd ( mplapackint m, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, long double * s, long double rcond, mplapackint * rank, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * iwork, mplapackint * info );
void Rgelss ( mplapackint m, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * s, long double rcond, mplapackint * rank, long double * work, mplapackint lwork, mplapackint * info );
void Cgelss ( mplapackint m, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, long double * s, long double rcond, mplapackint * rank, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * info );
void Rgelsy ( mplapackint m, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * B, mplapackint ldb, mplapackint *jpvt, long double rcond, mplapackint *rank, long double * work, mplapackint lwork, mplapackint *info );
void Cgelsy ( mplapackint m, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, mplapackint * jpvt, long double rcond, mplapackint * rank, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * info );
void Rgeqlf ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cgeqlf ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rgeqpf ( mplapackint m, mplapackint n, long double * A, mplapackint lda, mplapackint *jpvt, long double * tau, long double * work, mplapackint *info );
void Cgeqpf ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *jpvt, std::complex<long double> * tau, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rgeqp3 ( mplapackint m, mplapackint n, long double * A, mplapackint lda, mplapackint *jpvt, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cgeqp3 ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *jpvt, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint *info );
void Rgeqrf ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cgeqrf ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rgerfs ( const char *trans, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * af, mplapackint ldaf, mplapackint *ipiv, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Cgerfs ( const char *trans, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * af, mplapackint ldaf, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rgerqf ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cgerqf ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rgesdd ( const char *jobz, mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * s, long double * u, mplapackint ldu, long double * vt, mplapackint ldvt, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Cgesdd ( const char *jobz, mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * s, std::complex<long double> * u, mplapackint ldu, std::complex<long double> * vt, mplapackint ldvt, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * iwork, mplapackint * info );
void Rgesvd ( const char *jobu, const char *jobvt, mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * s, long double * u, mplapackint ldu, long double * vt, mplapackint ldvt, long double * work, mplapackint lwork, mplapackint * info );
void Cgesvd ( const char *jobu, const char *jobvt, mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * s, std::complex<long double> * u, mplapackint ldu, std::complex<long double> * vt, mplapackint ldvt, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * info );
void Rgesvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * af, mplapackint ldaf, mplapackint * ipiv, char *equed, long double * r, long double * c, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, long double * work, mplapackint * iwork, mplapackint * info );
void Cgesvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * af, mplapackint ldaf, mplapackint * ipiv, char *equed, long double * r, long double * c, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint * info );
void Rggbak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, long double * lscale, long double * rscale, mplapackint m, long double * v, mplapackint ldv, mplapackint *info );
void Cggbak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, long double * lscale, long double * rscale, mplapackint m, std::complex<long double> * v, mplapackint ldv, mplapackint *info );
void Rggbal ( const char *job, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, mplapackint *ilo, mplapackint *ihi, long double * lscale, long double * rscale, long double * work, mplapackint *info );
void Cggbal ( const char *job, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, mplapackint *ilo, mplapackint *ihi, long double * lscale, long double * rscale, long double * work, mplapackint *info );
void Rgges ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, mplapackint * sdim, long double * alphar, long double * alphai, long double * beta, long double * vsl, mplapackint ldvsl, long double * vsr, mplapackint ldvsr, long double * work, mplapackint lwork, mplapacklogical * bwork, mplapackint * info );
void Cgges ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, mplapackint * sdim, std::complex<long double> * alpha, std::complex<long double> * beta, std::complex<long double> * vsl, mplapackint ldvsl, std::complex<long double> * vsr, mplapackint ldvsr, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapacklogical * bwork, mplapackint * info );
void Rgegs ( const char *jobvsl, const char *jobvsr, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * alphar, long double * alphai, long double * beta, long double * vsl, mplapackint ldvsl, long double * vsr, mplapackint ldvsr, long double * work, mplapackint lwork, mplapackint *info );
void Cgegs ( const char *jobvsl, const char *jobvsr, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * alpha, std::complex<long double> * beta, std::complex<long double> * vsl, mplapackint ldvsl, std::complex<long double> * vsr, mplapackint ldvsr, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * info );
void Rggesx ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, const char *sense, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, mplapackint * sdim, long double * alphar, long double * alphai, long double * beta, long double * vsl, mplapackint ldvsl, long double * vsr, mplapackint ldvsr, long double * rconde, long double * rcondv, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Cggesx ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, const char *sense, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, mplapackint * sdim, std::complex<long double> * alpha, std::complex<long double> * beta, std::complex<long double> * vsl, mplapackint ldvsl, std::complex<long double> * vsr, mplapackint ldvsr, long double * rconde, long double * rcondv, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Rggev ( const char *jobvl, const char *jobvr, mplapackint n, long double * A, mplapackint lda, long double * b, mplapackint ldb, long double * alphar, long double * alphai, long double * beta, long double * vl, mplapackint ldvl, long double * vr, mplapackint ldvr, long double * work, mplapackint lwork, mplapackint * info );
void Cggev ( const char *jobvl, const char *jobvr, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * alpha, std::complex<long double> * beta, std::complex<long double> * vl, mplapackint ldvl, std::complex<long double> * vr, mplapackint ldvr, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * info );
void Rgegv ( const char *jobvl, const char *jobvr, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * alphar, long double * alphai, long double * beta, long double * vl, mplapackint ldvl, long double * vr, mplapackint ldvr, long double * work, mplapackint lwork, mplapackint * info );
void Cgegv ( const char *jobvl, const char *jobvr, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * alpha, std::complex<long double> * beta, std::complex<long double> * vl, mplapackint ldvl, std::complex<long double> * vr, mplapackint ldvr, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * info );
void Rggevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * alphar, long double * alphai, long double * beta, long double * vl, mplapackint ldvl, long double * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, long double * lscale, long double * rscale, long double * abnrm, long double * bbnrm, long double * rconde, long double * rcondv, long double * work, mplapackint lwork, mplapackint * iwork, mplapacklogical * bwork, mplapackint * info );
void Cggevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * alpha, std::complex<long double> * beta, std::complex<long double> * vl, mplapackint ldvl, std::complex<long double> * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, long double * lscale, long double * rscale, long double * abnrm, long double * bbnrm, long double * rconde, long double * rcondv, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint * iwork, mplapacklogical * bwork, mplapackint * info );
void Rggglm ( mplapackint n, mplapackint m, mplapackint p, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * d, long double * x, long double * y, long double * work, mplapackint lwork, mplapackint *info );
void Cggglm ( mplapackint n, mplapackint m, mplapackint p, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * d, std::complex<long double> * x, std::complex<long double> * y, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rgghrd ( const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * q, mplapackint ldq, long double * z, mplapackint ldz, mplapackint *info );
void Cgghrd ( const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * z, mplapackint ldz, mplapackint *info );
void Rgglse ( mplapackint m, mplapackint n, mplapackint p, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * c, long double * d, long double * x, long double * work, mplapackint lwork, mplapackint *info );
void Cgglse ( mplapackint m, mplapackint n, mplapackint p, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * c, std::complex<long double> * d, std::complex<long double> * x, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rggqrf ( mplapackint n, mplapackint m, mplapackint p, long double * A, mplapackint lda, long double * taua, long double * B, mplapackint ldb, long double * taub, long double * work, mplapackint lwork, mplapackint *info );
void Cggqrf ( mplapackint n, mplapackint m, mplapackint p, std::complex<long double> * A, mplapackint lda, std::complex<long double> * taua, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * taub, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rggrqf ( mplapackint m, mplapackint p, mplapackint n, long double * A, mplapackint lda, long double * taua, long double * B, mplapackint ldb, long double * taub, long double * work, mplapackint lwork, mplapackint *info );
void Cggrqf ( mplapackint m, mplapackint p, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * taua, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * taub, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rggsvd ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint n, mplapackint p, mplapackint *k, mplapackint *l, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * alpha, long double * beta, long double * u, mplapackint ldu, long double * v, mplapackint ldv, long double * q, mplapackint ldq, long double * work, mplapackint *iwork, mplapackint *info );
void Cggsvd ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint n, mplapackint p, mplapackint *k, mplapackint *l, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, long double * alpha, long double * beta, std::complex<long double> * u, mplapackint ldu, std::complex<long double> * v, mplapackint ldv, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * work, long double * rwork, mplapackint *iwork, mplapackint *info );
void Rggsvp ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double tola, long double tolb, mplapackint *k, mplapackint *l, long double * u, mplapackint ldu, long double * v, mplapackint ldv, long double * q, mplapackint ldq, mplapackint *iwork, long double * tau, long double * work, mplapackint *info );
void Cggsvp ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, long double tola, long double tolb, mplapackint *k, mplapackint *l, std::complex<long double> * u, mplapackint ldu, std::complex<long double> * v, mplapackint ldv, std::complex<long double> * q, mplapackint ldq, mplapackint *iwork, long double * rwork, std::complex<long double> * tau, std::complex<long double> * work, mplapackint *info );
void Rgtcon ( const char *norm, mplapackint n, long double * dl, long double * d, long double * du, long double * du2, mplapackint *ipiv, long double anorm, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Cgtcon ( const char *norm, mplapackint n, std::complex<long double> * dl, std::complex<long double> * d, std::complex<long double> * du, std::complex<long double> * du2, mplapackint *ipiv, long double anorm, long double * rcond, std::complex<long double> * work, mplapackint *info );
void Rgtrfs ( const char *trans, mplapackint n, mplapackint nrhs, long double * dl, long double * d, long double * du, long double * dlf, long double * df, long double * duf, long double * du2, mplapackint *ipiv, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Cgtrfs ( const char *trans, mplapackint n, mplapackint nrhs, std::complex<long double> * dl, std::complex<long double> * d, std::complex<long double> * du, std::complex<long double> * dlf, std::complex<long double> * df, std::complex<long double> * duf, std::complex<long double> * du2, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rgtsv ( mplapackint n, mplapackint nrhs, long double * dl, long double * d, long double * du, long double * B, mplapackint ldb, mplapackint *info );
void Cgtsv ( mplapackint n, mplapackint nrhs, std::complex<long double> * dl, std::complex<long double> * d, std::complex<long double> * du, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rgtsvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, long double * dl, long double * d, long double * du, long double * dlf, long double * df, long double * duf, long double * du2, mplapackint *ipiv, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Cgtsvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, std::complex<long double> * dl, std::complex<long double> * d, std::complex<long double> * du, std::complex<long double> * dlf, std::complex<long double> * df, std::complex<long double> * duf, std::complex<long double> * du2, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rgttrf ( mplapackint n, long double * dl, long double * d, long double * du, long double * du2, mplapackint *ipiv, mplapackint *info );
void Cgttrf ( mplapackint n, std::complex<long double> * dl, std::complex<long double> * d, std::complex<long double> * du, std::complex<long double> * du2, mplapackint *ipiv, mplapackint *info );
void Rgttrs ( const char *trans, mplapackint n, mplapackint nrhs, long double * dl, long double * d, long double * du, long double * du2, mplapackint *ipiv, long double * B, mplapackint ldb, mplapackint *info );
void Cgttrs ( const char *trans, mplapackint n, mplapackint nrhs, std::complex<long double> * dl, std::complex<long double> * d, std::complex<long double> * du, std::complex<long double> * du2, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rhgeqz ( const char *job, const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, long double * h, mplapackint ldh, long double * t, mplapackint ldt, long double * alphar, long double * alphai, long double * beta, long double * q, mplapackint ldq, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *info );
void Chgeqz ( const char *job, const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<long double> * h, mplapackint ldh, std::complex<long double> * t, mplapackint ldt, std::complex<long double> * alpha, std::complex<long double> * beta, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint *info );
void Rhsein ( const char *side, const char *eigsrc, const char *initv, mplapacklogical *select, mplapackint n, long double * h, mplapackint ldh, long double * wr, long double * wi, long double * vl, mplapackint ldvl, long double * vr, mplapackint ldvr, mplapackint mm, mplapackint m, long double * work, mplapackint *ifaill, mplapackint *ifailr, mplapackint *info );
void Chsein ( const char *side, const char *eigsrc, const char *initv, mplapacklogical * select, mplapackint n, std::complex<long double> * h, mplapackint ldh, std::complex<long double> * w, std::complex<long double> * vl, mplapackint ldvl, std::complex<long double> * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, std::complex<long double> * work, long double * rwork, mplapackint *ifaill, mplapackint *ifailr, mplapackint *info );
void Rhseqr ( const char *job, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, long double * h, mplapackint ldh, long double * wr, long double * wi, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *info );
void Chseqr ( const char *job, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<long double> * h, mplapackint ldh, std::complex<long double> * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Ropgtr ( const char *uplo, mplapackint n, long double * ap, long double * tau, long double * q, mplapackint ldq, long double * work, mplapackint *info );
void Cupgtr ( const char *uplo, mplapackint n, std::complex<long double> * ap, std::complex<long double> * tau, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * work, mplapackint *info );
void Ropmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, long double * ap, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint *info );
void Cupmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, std::complex<long double> * ap, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint *info );
void Rorgbr ( const char *vect, mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cungbr ( const char *vect, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rorghr ( mplapackint n, mplapackint ilo, mplapackint ihi, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cunghr ( mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rorglq ( mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cunglq ( mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rorgrq ( mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Cungrq ( mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rormbr ( const char *vect, const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint lwork, mplapackint *info );
void Cunmbr ( const char *vect, const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rormhr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint ilo, mplapackint ihi, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint lwork, mplapackint *info );
void Cunmhr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint ilo, mplapackint ihi, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rormlq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint lwork, mplapackint *info );
void Cunmlq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rormql ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint lwork, mplapackint *info );
void Cunmql ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rormqr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint lwork, mplapackint *info );
void Cunmqr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rormrq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint lwork, mplapackint *info );
void Cunmrq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rormrz ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint lwork, mplapackint *info );
void Cunmrz ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rormtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * c, mplapackint ldc, long double * work, mplapackint lwork, mplapackint *info );
void Cunmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rpbcon ( const char *uplo, mplapackint n, mplapackint kd, long double * AB, mplapackint ldab, long double anorm, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Cpbcon ( const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, long double anorm, long double * rcond, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rpbequ ( const char *uplo, mplapackint n, mplapackint kd, long double * ab, mplapackint ldab, long double * s, long double * scond, long double * amax, mplapackint *info );
void Cpbequ ( const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, long double * s, long double * scond, long double * amax, mplapackint *info );
void Rpbrfs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, long double * AB, mplapackint ldab, long double * afb, mplapackint ldafb, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Cpbrfs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * afb, mplapackint ldafb, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rpbstf ( const char *uplo, mplapackint n, mplapackint kd, long double * AB, mplapackint ldab, mplapackint *info );
void Cpbstf ( const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, mplapackint *info );
void Rpbsv ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, long double * AB, mplapackint ldab, long double * B, mplapackint ldb, mplapackint *info );
void Cpbsv ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<long double> * ab, mplapackint ldab, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rpbsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, long double * AB, mplapackint ldab, long double * afb, mplapackint ldafb, char *equed, long double * s, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, long double * work, mplapackint * iwork, mplapackint * info );
void Cpbsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * afb, mplapackint ldafb, char *equed, long double * s, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint * info );
void Rpbtrf ( const char *uplo, mplapackint n, mplapackint kd, long double * AB, mplapackint ldab, mplapackint *info );
void Cpbtrf ( const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, mplapackint *info );
void Rpbtrs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, long double * ab, mplapackint ldab, long double * B, mplapackint ldb, mplapackint *info );
void Cpbtrs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rpocon ( const char *uplo, mplapackint n, long double * A, mplapackint lda, long double anorm, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Cpocon ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double anorm, long double * rcond, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rpoequ ( mplapackint n, long double * A, mplapackint lda, long double * s, long double * scond, long double * amax, mplapackint *info );
void Cpoequ ( mplapackint n, std::complex<long double> * A, mplapackint lda, long double * s, long double * scond, long double * amax, mplapackint *info );
void Rporfs ( const char *uplo, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * af, mplapackint ldaf, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Cporfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * af, mplapackint ldaf, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rposv ( const char *uplo, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * B, mplapackint ldb, mplapackint *info );
void Cposv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rposvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * af, mplapackint ldaf, char *equed, long double * s, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, long double * work, mplapackint * iwork, mplapackint * info );
void Cposvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * af, mplapackint ldaf, char *equed, long double * s, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint * info );
void Rpotri ( const char *uplo, mplapackint n, long double * A, mplapackint lda, mplapackint *info );
void Cpotri ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *info );
void Rpotrs ( const char *uplo, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * B, mplapackint ldb, mplapackint *info );
void Cpotrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rppcon ( const char *uplo, mplapackint n, long double * ap, long double anorm, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Cppcon ( const char *uplo, mplapackint n, std::complex<long double> * ap, long double * anorm, long double * rcond, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rppequ ( const char *uplo, mplapackint n, long double * ap, long double * s, long double * scond, long double * amax, mplapackint *info );
void Cppequ ( const char *uplo, mplapackint n, std::complex<long double> * ap, long double * s, long double * scond, long double * amax, mplapackint *info );
void Rpptrf ( const char *uplo, mplapackint n, long double * ap, mplapackint *info );
void Cpptrf ( const char *uplo, mplapackint n, std::complex<long double> * ap, mplapackint *info );
void Rpptri ( const char *uplo, mplapackint n, long double * ap, mplapackint *info );
void Cpptri ( const char *uplo, mplapackint n, std::complex<long double> * ap, mplapackint *info );
void Rpptrs ( const char *uplo, mplapackint n, mplapackint nrhs, long double * ap, long double * B, mplapackint ldb, mplapackint *info );
void Cpptrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rpprfs ( const char *uplo, mplapackint n, mplapackint nrhs, long double * ap, long double * afp, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Cpprfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, std::complex<long double> * afp, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rppsv ( const char *uplo, mplapackint n, mplapackint nrhs, long double * ap, long double * B, mplapackint ldb, mplapackint *info );
void Cppsv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rppsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, long double * ap, long double * afp, char *equed, long double * s, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Cppsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, std::complex<long double> * afp, char *equed, long double * s, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint * info );
void Rptcon ( mplapackint n, long double * d, long double * e, long double anorm, long double * rcond, long double * work, mplapackint *info );
void Cptcon ( mplapackint n, long double * d, std::complex<long double> * e, long double anorm, long double * rcond, long double * rwork, mplapackint *info );
void Rpteqr ( const char *compz, mplapackint n, long double * d, long double * e, long double * z, mplapackint ldz, long double * work, mplapackint * info );
void Cpteqr ( const char *compz, mplapackint n, long double * d, long double * e, std::complex<long double> * z, mplapackint ldz, long double * work, mplapackint *info );
void Rptrfs ( mplapackint n, mplapackint nrhs, long double * d, long double * e, long double * df, long double * ef, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *info );
void Cptrfs ( const char *uplo, mplapackint n, mplapackint nrhs, long double * d, std::complex<long double> * e, long double * df, std::complex<long double> * ef, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rptsv ( mplapackint n, mplapackint nrhs, long double * d, long double * e, long double * B, mplapackint ldb, mplapackint *info );
void Cptsv ( mplapackint n, mplapackint nrhs, long double * d, std::complex<long double> * e, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rptsvx ( const char *fact, mplapackint n, mplapackint nrhs, long double * d, long double * e, long double * df, long double * ef, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, long double * work, mplapackint *info );
void Cptsvx ( const char *fact, mplapackint n, mplapackint nrhs, long double * d, std::complex<long double> * e, long double * df, std::complex<long double> * ef, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rpttrf ( mplapackint n, long double * d, long double * e, mplapackint *info );
void Cpttrf ( mplapackint n, long double * d, std::complex<long double> * e, mplapackint *info );
void Rpttrs ( mplapackint n, mplapackint nrhs, long double * d, long double * e, long double * B, mplapackint ldb, mplapackint *info );
void Cpttrs ( const char *uplo, mplapackint n, mplapackint nrhs, long double * d, std::complex<long double> * e, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rsbev ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, long double * AB, mplapackint ldab, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint *info );
void Chbev ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rsbevd ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, long double * AB, mplapackint ldab, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chbevd ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsbevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint kd, long double * AB, mplapackint ldab, long double * q, mplapackint ldq, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint * m, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chbevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * q, mplapackint ldq, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint * m, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, long double * rwork, mplapackint * iwork, mplapackint * ifail, mplapackint * info );
void Rsbgst ( const char *vect, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, long double * AB, mplapackint ldab, long double * bb, mplapackint ldbb, long double * x, mplapackint ldx, long double * work, mplapackint *info );
void Chbgst ( const char *vect, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * bb, mplapackint ldbb, std::complex<long double> * x, mplapackint ldx, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rsbgv ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, long double * AB, mplapackint ldab, long double * bb, mplapackint ldbb, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint *info );
void Chbgv ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * bb, mplapackint ldbb, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rsbgvd ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, long double * AB, mplapackint ldab, long double * BB, mplapackint ldbb, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chbgvd ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * BB, mplapackint ldbb, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsbgvx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, long double * AB, mplapackint ldab, long double * BB, mplapackint ldbb, long double * q, mplapackint ldq, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint *m, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chbgvx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, std::complex<long double> * ab, mplapackint ldab, std::complex<long double> * bb, mplapackint ldbb, std::complex<long double> * q, mplapackint ldq, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint *m, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, long double * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsbtrd ( const char *vect, const char *uplo, mplapackint n, mplapackint kd, long double * AB, mplapackint ldab, long double * d, long double * e, long double * q, mplapackint ldq, long double * work, mplapackint *info );
void Chbtrd ( const char *vect, const char *uplo, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, long double * d, long double * e, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * work, mplapackint *info );
void Rspcon ( const char *uplo, mplapackint n, long double * ap, mplapackint *ipiv, long double anorm, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Cspcon ( const char *uplo, mplapackint n, std::complex<long double> * ap, mplapackint *ipiv, long double anorm, long double * rcond, std::complex<long double> * work, mplapackint *info );
void Chpcon ( const char *uplo, mplapackint n, std::complex<long double> * ap, mplapackint *ipiv, long double anorm, long double * rcond, std::complex<long double> * work, mplapackint *info );
void Rspev ( const char *jobz, const char *uplo, mplapackint n, long double * ap, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint *info );
void Chpev ( const char *jobz, const char *uplo, mplapackint n, std::complex<long double> * ap, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rspevd ( const char *jobz, const char *uplo, mplapackint n, long double * ap, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chpevd ( const char *jobz, const char *uplo, mplapackint n, std::complex<long double> * ap, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rspevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, long double * ap, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint *m, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chpevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, std::complex<long double> * ap, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint * m, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, long double * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rspgst ( mplapackint itype, const char *uplo, mplapackint n, long double * ap, long double * bp, mplapackint *info );
void Chpgst ( mplapackint *itype, const char *uplo, mplapackint n, std::complex<long double> * ap, std::complex<long double> * bp, mplapackint *info );
void Rspgv ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, long double * ap, long double * bp, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint *info );
void Chpgv ( mplapackint *itype, const char *jobz, const char *uplo, mplapackint n, std::complex<long double> * ap, std::complex<long double> * bp, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rspgvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, long double * ap, long double * bp, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chpgvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, std::complex<long double> * ap, std::complex<long double> * bp, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rspgvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, long double * ap, long double * bp, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint m, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chpgvx ( mplapackint itype, const char *jobz, char *range, const char *uplo, mplapackint n, std::complex<long double> * ap, std::complex<long double> * bp, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint *m, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, long double * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsprfs ( const char *uplo, mplapackint n, mplapackint nrhs, long double * ap, long double * afp, mplapackint *ipiv, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Csprfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, std::complex<long double> * afp, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Chprfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, std::complex<long double> * afp, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rspsv ( const char *uplo, mplapackint n, mplapackint nrhs, long double * ap, mplapackint *ipiv, long double * B, mplapackint ldb, mplapackint *info );
void Cspsv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Chpsv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rspsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, long double * ap, long double * afp, mplapackint *ipiv, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Cspsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, std::complex<long double> * afp, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Chpsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, std::complex<long double> * afp, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rsptrd ( const char *uplo, mplapackint n, long double * ap, long double * d, long double * e, long double * tau, mplapackint *info );
void Chptrd ( const char *uplo, mplapackint n, std::complex<long double> * ap, long double * d, long double * e, std::complex<long double> * tau, mplapackint *info );
void Rsptrf ( const char *uplo, mplapackint n, long double * ap, mplapackint *ipiv, mplapackint *info );
void Csptrf ( const char *uplo, mplapackint n, std::complex<long double> * ap, mplapackint *ipiv, mplapackint *info );
void Chptrf ( const char *uplo, mplapackint n, std::complex<long double> * ap, mplapackint *ipiv, mplapackint *info );
void Rsptri ( const char *uplo, mplapackint n, long double * ap, mplapackint *ipiv, long double * work, mplapackint *info );
void Csptri ( const char *uplo, mplapackint n, std::complex<long double> * ap, mplapackint *ipiv, std::complex<long double> * work, mplapackint *info );
void Chptri ( const char *uplo, mplapackint n, std::complex<long double> * ap, mplapackint *ipiv, std::complex<long double> * work, mplapackint *info );
void Rsptrs ( const char *uplo, mplapackint n, mplapackint nrhs, long double * ap, mplapackint *ipiv, long double * B, mplapackint ldb, mplapackint *info );
void Csptrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Chptrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rstebz ( const char *range, const char *order, mplapackint n, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, long double * d, long double * e, mplapackint * m, mplapackint * nsplit, long double * w, mplapackint *iblock, mplapackint *isplit, long double * work, mplapackint *iwork, mplapackint *info );
void Rstedc ( const char *compz, mplapackint n, long double * d, long double * e, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Cstedc ( const char *compz, mplapackint n, long double * d, long double * e, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstegr ( const char *jobz, const char *range, mplapackint n, long double * d, long double * e, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint * m, long double * w, long double * z, mplapackint ldz, mplapackint * isuppz, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cstegr ( const char *jobz, const char *range, mplapackint n, long double *d, long double * e, long double * vl, long double * vu, mplapackint *il, mplapackint *iu, long double * abstol, mplapackint m, long double * w, std::complex<long double> * z, mplapackint ldz, mplapackint *isuppz, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstein ( mplapackint n, long double * d, long double * e, mplapackint m, long double * w, mplapackint *iblock, mplapackint *isplit, long double * z, mplapackint ldz, long double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Cstein ( mplapackint n, long double * d, long double * e, mplapackint m, long double * w, mplapackint *iblock, mplapackint *isplit, std::complex<long double> * z, mplapackint ldz, long double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rstev ( const char *jobz, mplapackint n, long double * d, long double * e, long double * z, mplapackint ldz, long double * work, mplapackint *info );
void Rstevd ( const char *jobz, mplapackint n, long double * d, long double * e, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstevr ( const char *jobz, const char *range, mplapackint n, long double * d, long double * e, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint * m, long double * w, long double * z, mplapackint ldz, mplapackint * isuppz, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rstevx ( const char *jobz, const char *range, mplapackint n, long double * d, long double * e, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint *m, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rstemr ( const char *jobz, const char *range, mplapackint n, long double * d, long double * e, long double vl, long double vu, mplapackint il, mplapackint iu, mplapackint * m, long double * w, long double * z, mplapackint ldz, mplapackint nzc, mplapackint * isuppz, mplapacklogical * tryrac, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cstemr ( const char *jobz, const char *range, mplapackint n, long double * d, long double * e, long double vl, long double vu, mplapackint il, mplapackint iu, mplapackint * m, long double * w, std::complex<long double> * z, mplapackint ldz, mplapackint nzc, mplapackint *isuppz, mplapacklogical * tryrac, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsycon ( const char *uplo, mplapackint n, long double * A, mplapackint lda, mplapackint *ipiv, long double anorm, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Csycon ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, long double anorm, long double * rcond, std::complex<long double> * work, mplapackint *info );
void Checon ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, long double anorm, long double * rcond, std::complex<long double> * work, mplapackint *info );
void Rsyevd ( const char *jobz, const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * w, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Cheevd ( const char *jobz, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * w, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsyevr ( const char *jobz, const char *range, const char *uplo, mplapackint n, long double * A, mplapackint lda, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint * m, long double * w, long double * z, mplapackint ldz, mplapackint * isuppz, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cheevr ( const char *jobz, const char *range, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint * m, long double * w, std::complex<long double> * z, mplapackint ldz, mplapackint * isuppz, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint lrwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rsyevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, long double * A, mplapackint lda, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint *m, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Cheevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint *m, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsygst ( mplapackint itype, const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, mplapackint *info );
void Chegst ( mplapackint itype, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rsygv ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * w, long double * work, mplapackint lwork, mplapackint *info );
void Chegv ( mplapackint *itype, const char *jobz, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, long double * w, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint *info );
void Rsygvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * w, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chegvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, long double * w, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsygvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint *m, long double * w, long double * z, mplapackint ldz, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chegvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, long double vl, long double vu, mplapackint il, mplapackint iu, long double abstol, mplapackint * m, long double * w, std::complex<long double> * z, mplapackint ldz, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsyrfs ( const char *uplo, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * af, mplapackint ldaf, mplapackint *ipiv, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Csyrfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * af, mplapackint ldaf, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Cherfs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * af, mplapackint ldaf, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rsysv ( const char *uplo, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, mplapackint *ipiv, long double * B, mplapackint ldb, long double * work, mplapackint lwork, mplapackint *info );
void Csysv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Chesv ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rsysvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * af, mplapackint ldaf, mplapackint *ipiv, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint *info );
void Csysvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * af, mplapackint ldaf, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint *info );
void Chesvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * af, mplapackint ldaf, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * rcond, long double * ferr, long double * berr, std::complex<long double> * work, mplapackint lwork, long double * rwork, mplapackint *info );
void Rsytrf ( const char *uplo, mplapackint n, long double * A, mplapackint lda, mplapackint *ipiv, long double * work, mplapackint lwork, mplapackint *info );
void Csytrf ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Chetrf ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rsytri ( const char *uplo, mplapackint n, long double * A, mplapackint lda, mplapackint *ipiv, long double * work, mplapackint *info );
void Csytri ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * work, mplapackint *info );
void Chetri ( const char *uplo, mplapackint n, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * work, mplapackint *info );
void Rsytrs ( const char *uplo, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, mplapackint *ipiv, long double * B, mplapackint ldb, mplapackint *info );
void Csytrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Chetrs ( const char *uplo, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, mplapackint *ipiv, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rtbcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint kd, long double * AB, mplapackint ldab, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Ctbcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint kd, std::complex<long double> * AB, mplapackint ldab, long double * rcond, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rtbrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, long double * AB, mplapackint ldab, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Ctbrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<long double> * AB, mplapackint ldab, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint * info );
void Rtbtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, long double * ab, mplapackint ldab, long double * B, mplapackint ldb, mplapackint *info );
void Ctbtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, std::complex<long double> * ab, mplapackint ldab, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rtgevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, long double * s, mplapackint lds, long double *p, mplapackint ldp, long double * vl, mplapackint ldvl, long double * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, long double * work, mplapackint * info );
void Ctgevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, std::complex<long double> * s, mplapackint lds, std::complex<long double> * p, mplapackint ldp, std::complex<long double> * vl, mplapackint ldvl, std::complex<long double> * vr, mplapackint ldvr, mplapackint mm, mplapackint * m, std::complex<long double> * work, long double * rwork, mplapackint * info );
void Rtgexc ( mplapacklogical wantq, mplapacklogical wantz, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * q, mplapackint ldq, long double * z, mplapackint ldz, mplapackint * ifst, mplapackint * ilst, long double * work, mplapackint lwork, mplapackint * info );
void Ctgexc ( mplapacklogical wantq, mplapacklogical wantz, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * z, mplapackint ldz, mplapackint ifst, mplapackint *ilst, mplapackint *info );
void Rtgsen ( mplapackint ijob, mplapacklogical wantq, mplapacklogical wantz, mplapacklogical *select, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * alphar, long double * alphai, long double * beta, long double * q, mplapackint ldq, long double * z, mplapackint ldz, mplapackint * m, long double * pl, long double * pr, long double * dif, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Ctgsen ( mplapackint ijob, mplapacklogical wantq, mplapacklogical wantz, mplapacklogical * select, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * alpha, std::complex<long double> * beta, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * z, mplapackint ldz, mplapackint * m, long double * pl, long double * pr, long double * dif, std::complex<long double> * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rtgsja ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mplapackint k, mplapackint l, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double tola, long double tolb, long double * alpha, long double * beta, long double * u, mplapackint ldu, long double * v, mplapackint ldv, long double * q, mplapackint ldq, long double * work, mplapackint ncycle, mplapackint *info );
void Ctgsja ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mplapackint k, mplapackint l, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, long double tola, long double tolb, long double * alpha, long double * beta, std::complex<long double> * u, mplapackint ldu, std::complex<long double> * v, mplapackint ldv, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * work, mplapackint * ncycle, mplapackint *info );
void Rtgsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * vl, mplapackint ldvl, long double * vr, mplapackint ldvr, long double * s, long double * dif, mplapackint mm, mplapackint * m, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Ctgsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * vl, mplapackint ldvl, std::complex<long double> * vr, mplapackint ldvr, long double * s, long double * dif, mplapackint mm, mplapackint * m, std::complex<long double> * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Rtgsyl ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * c, mplapackint ldc, long double * d, mplapackint ldd, long double * e, mplapackint lde, long double * f, mplapackint ldf, long double * scale, long double * dif, long double * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Ctgsyl ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * c, mplapackint ldc, std::complex<long double> * d, mplapackint ldd, std::complex<long double> * e, mplapackint lde, std::complex<long double> * f, mplapackint ldf, long double * scale, long double * dif, std::complex<long double> * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Rtpcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, long double * ap, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Ctpcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, std::complex<long double> * ap, long double * rcond, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rtprfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, long double * ap, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Ctprfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rtptri ( const char *uplo, const char *diag, mplapackint n, long double * ap, mplapackint *info );
void Ctptri ( const char *uplo, const char *diag, mplapackint n, std::complex<long double> * ap, mplapackint *info );
void Rtptrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, long double * ap, long double * B, mplapackint ldb, mplapackint *info );
void Ctptrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, std::complex<long double> * ap, std::complex<long double> * B, mplapackint ldb, mplapackint *info );
void Rtrcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, long double * A, mplapackint lda, long double * rcond, long double * work, mplapackint *iwork, mplapackint *info );
void Ctrcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, std::complex<long double> * A, mplapackint lda, long double * rcond, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rtrevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, long double * t, mplapackint ldt, long double * vl, mplapackint ldvl, long double * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, long double * work, mplapackint *info );
void Ctrevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, std::complex<long double> * t, mplapackint ldt, std::complex<long double> * vl, mplapackint ldvl, std::complex<long double> * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rtrexc ( const char *compq, mplapackint n, long double * t, mplapackint ldt, long double * q, mplapackint ldq, mplapackint *ifst, mplapackint *ilst, long double * work, mplapackint *info );
void Ctrexc ( const char *compq, mplapackint n, std::complex<long double> * t, mplapackint ldt, std::complex<long double> * q, mplapackint ldq, mplapackint ifst, mplapackint ilst, mplapackint *info );
void Rtrrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * x, mplapackint ldx, long double * ferr, long double * berr, long double * work, mplapackint *iwork, mplapackint *info );
void Ctrrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * x, mplapackint ldx, long double * ferr, long double * berr, std::complex<long double> * work, long double * rwork, mplapackint *info );
void Rtrsen ( const char *job, const char *compq, mplapacklogical * select, mplapackint n, long double * t, mplapackint ldt, long double * q, mplapackint ldq, long double * wr, long double * wi, mplapackint m, long double * s, long double * sep, long double * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Ctrsen ( const char *job, const char *compq, mplapacklogical * select, mplapackint n, std::complex<long double> * t, mplapackint ldt, std::complex<long double> * q, mplapackint ldq, std::complex<long double> * w, mplapackint m, long double * s, long double * sep, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rtrsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, long double * t, mplapackint ldt, long double * vl, mplapackint ldvl, long double * vr, mplapackint ldvr, long double * s, long double * sep, mplapackint mm, mplapackint *m, long double * work, mplapackint ldwork, mplapackint *iwork, mplapackint *info );
void Ctrsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, std::complex<long double> * t, mplapackint ldt, std::complex<long double> * vl, mplapackint ldvl, std::complex<long double> * vr, mplapackint ldvr, long double * s, long double * sep, mplapackint mm, mplapackint *m, std::complex<long double> * work, mplapackint ldwork, long double * rwork, mplapackint *info );
void Rtrsyl ( const char *trana, const char *tranb, mplapackint isgn, mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * B, mplapackint ldb, long double * c, mplapackint ldc, long double * scale, mplapackint *info );
void Ctrsyl ( const char *trana, const char *tranb, mplapackint isgn, mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * B, mplapackint ldb, std::complex<long double> * c, mplapackint ldc, long double * scale, mplapackint *info );
void Rtzrzf ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, long double * work, mplapackint lwork, mplapackint *info );
void Ctzrzf ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, std::complex<long double> * work, mplapackint lwork, mplapackint *info );
void Rtzrqf ( mplapackint m, mplapackint n, long double * A, mplapackint lda, long double * tau, mplapackint *info );
void Ctzrqf ( mplapackint m, mplapackint n, std::complex<long double> * A, mplapackint lda, std::complex<long double> * tau, mplapackint *info );

#endif
