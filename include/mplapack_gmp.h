/*
 * Copyright (c) 2008-2010
 *	Nakata, Maho
 * 	All rights reserved.
 *
 * $Id: mplapack_gmp.h,v 1.34 2010/08/07 03:15:46 nakatamaho Exp $
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _MPLAPACK_GMP_H_
#define _MPLAPACK_GMP_H_

#include "mplapack_config.h"
#include "gmpxx.h"
#include "mpc_class.h"

/* MPLAPACK prototypes */

/* MPLAPACK driver routines */
void Rsyev ( const char *jobz, const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * w, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cheev ( const char *jobz, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * w, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint *info );
void Rgesv ( mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cgesv ( mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mplapackint *info );

/* MPLAPACK computational routines */
void Rsteqr ( const char *compz, mplapackint n, mpf_class * d, mpf_class * e, mpf_class * Z, mplapackint ldz, mpf_class * work, mplapackint *info );
void Csteqr ( const char *compz, mplapackint n, mpf_class * d, mpf_class * e, mpc_class * z, mplapackint ldz, mpf_class * work, mplapackint *info );
void Rsterf ( mplapackint n, mpf_class * d, mpf_class * e, mplapackint *info );
void Rorgqr ( mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cungqr ( mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rorgql ( mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cungql ( mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rsytrd ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * d, mpf_class * e, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Chetrd ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * d, mpf_class * e, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rorgtr ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cungtr ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rpotrf ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *info );
void Cpotrf ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *info );
void Rtrtri ( const char *uplo, const char *diag, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *info );
void Ctrtri ( const char *uplo, const char *diag, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *info );
void Rgetrf ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Cgetrf ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rgetri ( mplapackint n, mpf_class * A, mplapackint lda, mplapackint *ipiv, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgetri ( mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rgetrs ( const char *trans, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cgetrs ( const char *trans, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rtrtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mplapackint *info );
void Ctrtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mplapackint *info );

/* MPLAPACK Auxiliary routines */
mpf_class Rlamc3 ( mpf_class a, mpf_class b );
mpf_class Rlamch_gmp(const char *cmach);
mplapackint iMlaenv_gmp(mplapackint ispec, const char *name, const char *opts, mplapackint n1, mplapackint n2, mplapackint n3, mplapackint n4);
void Rlae2 ( mpf_class a, mpf_class b, mpf_class c, mpf_class * rt1, mpf_class * rt2 );
void Rlaev2 ( mpf_class a, mpf_class b, mpf_class c, mpf_class * rt1, mpf_class * rt2, mpf_class * cs1, mpf_class * sn1 );
void Claev2 ( mpc_class a, mpc_class b, mpc_class c, mpf_class * rt1, mpf_class * rt2, mpf_class * cs1, mpc_class * sn1 );
void Rlassq ( mplapackint n, mpf_class * x, mplapackint incx, mpf_class * scale, mpf_class * sumsq );
void Classq ( mplapackint n, mpc_class * x, mplapackint incx, mpf_class * scale, mpf_class * sumsq );
mpf_class Rlanst ( const char *norm, mplapackint n, mpf_class * d, mpf_class * e );
mpf_class Clanht ( const char *norm, mplapackint n, mpf_class * d, mpc_class * e );
mpf_class Rlansy ( const char *norm, const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * work );
mpf_class Clansy ( const char *norm, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * work );
mpf_class Clanhe ( const char *norm, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * work );
mpf_class Rlapy2 ( mpf_class x, mpf_class y );
void Rlarfg ( mplapackint N, mpf_class * alpha, mpf_class * x, mplapackint incx, mpf_class * tau );
mpf_class Rlapy3 ( mpf_class x, mpf_class y, mpf_class z );
void Rladiv ( mpf_class a, mpf_class b, mpf_class c, mpf_class d, mpf_class * p, mpf_class * q );
mpc_class Cladiv ( mpc_class x, mpc_class y );
void Clarfg ( mplapackint n, mpc_class * alpha, mpc_class * x, mplapackint incx, mpc_class * tau );
void Rlartg ( mpf_class f, mpf_class g, mpf_class * cs, mpf_class * sn, mpf_class * r );
void Clartg ( mpc_class f, mpc_class g, mpf_class * cs, mpc_class * sn, mpc_class * r );
void Rlaset ( const char *uplo, mplapackint m, mplapackint n, mpf_class alpha, mpf_class beta, mpf_class * A, mplapackint lda );
void Claset ( const char *uplo, mplapackint m, mplapackint n, mpc_class alpha, mpc_class beta, mpc_class * A, mplapackint lda );
void Rlasr ( const char *side, const char *pivot, const char *direct, mplapackint m, mplapackint n, mpf_class * c, mpf_class * s, mpf_class * A, mplapackint lda );
void Clasr ( const char *side, const char *pivot, const char *direct, mplapackint m, mplapackint n, mpf_class * c, mpf_class * s, mpc_class * A, mplapackint lda );
void Rpotf2 ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *info );
void Clacgv ( mplapackint n, mpc_class * x, mplapackint incx );
void Cpotf2 ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *info );
void Rlascl ( const char *type, mplapackint kl, mplapackint ku, mpf_class cfrom, mpf_class cto, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *info );
void Clascl ( const char *type, mplapackint kl, mplapackint ku, mpf_class cfrom, mpf_class cto, mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *info );
void Rlasrt ( const char *id, mplapackint n, mpf_class * d, mplapackint *info );
void Rsytd2 ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * d, mpf_class * e, mpf_class * tau, mplapackint *info );
void Chetd2 ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * d, mpf_class * e, mpc_class * tau, mplapackint *info );
void Rlarf ( const char *side, mplapackint m, mplapackint n, mpf_class * v, mplapackint incv, mpf_class tau, mpf_class * C, mplapackint ldc, mpf_class * work );
void Clarf ( const char *side, mplapackint m, mplapackint n, mpc_class * v, mplapackint incv, mpc_class tau, mpc_class * c, mplapackint ldc, mpc_class * work );
void Rorg2l ( mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cung2l ( mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint *info );
void Rorg2r ( mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cung2r ( mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint *info );
void Rlarft ( const char *direct, const char *storev, mplapackint n, mplapackint k, mpf_class * v, mplapackint ldv, mpf_class * tau, mpf_class * t, mplapackint ldt );
void Clarft ( const char *direct, const char *storev, mplapackint n, mplapackint k, mpc_class * v, mplapackint ldv, mpc_class * tau, mpc_class * t, mplapackint ldt );
void Rlarfb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mpf_class * V, mplapackint ldv, mpf_class * T, mplapackint ldt, mpf_class * C, mplapackint ldc, mpf_class * work, mplapackint ldwork );
void Clarfb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mpc_class * V, mplapackint ldv, mpc_class * T, mplapackint ldt, mpc_class * C, mplapackint ldc, mpc_class * work, mplapackint ldwork );
void Rlatrd ( const char *uplo, mplapackint n, mplapackint nb, mpf_class * A, mplapackint lda, mpf_class * e, mpf_class * tau, mpf_class * w, mplapackint ldw );
void Clatrd ( const char *uplo, mplapackint n, mplapackint nb, mpc_class * A, mplapackint lda, mpf_class * e, mpc_class * tau, mpc_class * w, mplapackint ldw );
void Clacrm ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpc_class * c, mplapackint ldc, mpf_class * rwork );
void Rtrti2 ( const char *uplo, const char *diag, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *info );
void Ctrti2 ( const char *uplo, const char *diag, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *info );
void Rgetf2 ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Cgetf2 ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rlaswp ( mplapackint n, mpf_class * A, mplapackint lda, mplapackint k1, mplapackint k2, mplapackint *ipiv, mplapackint incx );
void Claswp ( mplapackint n, mpc_class * A, mplapackint lda, mplapackint k1, mplapackint k2, mplapackint *ipiv, mplapackint incx );
void Rlasyf ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, mpf_class * A, mplapackint lda, mplapackint *ipiv, mpf_class * w, mplapackint ldw, mplapackint *info );
void Clasyf ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * w, mplapackint ldw, mplapackint *info );
void Clahef ( const char *uplo, mplapackint n, mplapackint nb, mplapackint kb, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * w, mplapackint ldw, mplapackint *info );
void Clacrt ( mplapackint n, mpc_class * cx, mplapackint incx, mpc_class * cy, mplapackint incy, mpc_class c, mpc_class s );
void Claesy ( mpc_class a, mpc_class b, mpc_class c, mpc_class * rt1, mpc_class * rt2, mpc_class * evscal, mpc_class * cs1, mpc_class * sn1 );
void Crot ( mplapackint n, mpc_class * cx, mplapackint incx, mpc_class * cy, mplapackint incy, mpf_class c, mpc_class s );
void Cspmv ( const char *uplo, mplapackint n, mpc_class alpha, mpc_class * AP, mpc_class * x, mplapackint incx, mpc_class beta, mpc_class * y, mplapackint incy );
void Cspr ( const char *uplo, mplapackint n, mpc_class alpha, mpc_class * x, mplapackint incx, mpc_class * AP );
void Csymv ( const char *uplo, mplapackint n, mpc_class alpha, mpc_class * A, mplapackint lda, mpc_class * x, mplapackint incx, mpc_class beta, mpc_class * y, mplapackint incy );
void Csyr ( const char *uplo, mplapackint n, mpc_class alpha, mpc_class * x, mplapackint incx, mpc_class * A, mplapackint lda );
mplapackint iCmax1 ( mplapackint n, mpc_class * cx, mplapackint incx );
mpf_class RCsum1 ( mplapackint n, mpc_class * cx, mplapackint incx );
void Rlacn2 ( mplapackint n, mpf_class * v, mpf_class * x, mplapackint *isgn, mpf_class * est, mplapackint *kase, mplapackint *isave );
void Clacn2 ( mplapackint n, mpc_class * v, mpc_class * x, mpf_class * est, mplapackint *kase, mplapackint *isave );
void Rlatrs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * x, mpf_class * scale, mpf_class * cnorm, mplapackint *info );
void Clatrs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * x, mpf_class * scale, mpf_class * cnorm, mplapackint *info );

/* not yet done ... auxiliary routines */
void Rgbtf2 ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpf_class * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Cgbtf2 ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpc_class * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Rgebd2 ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * d, mpf_class * e, mpf_class * tauq, mpf_class * taup, mpf_class * work, mplapackint *info );
void Cgebd2 ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * d, mpf_class * e, mpc_class * tauq, mpc_class * taup, mpc_class * work, mplapackint *info );
void Rgehd2 ( mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cgehd2 ( mplapackint n, mplapackint ilo, mplapackint ihi, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint *info );
void Rgelq2 ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cgelq2 ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint *info );
void Rgeql2 ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cgeql2 ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint *info );
void Rgeqr2 ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cgeqr2 ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint *info );
void Rgerq2 ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cgerq2 ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint *info );
void Rgesc2 ( mplapackint n, mpf_class * A, mplapackint lda, mpf_class * rhs, mplapackint *ipiv, mplapackint *jpiv, mpf_class * scale );
void Cgesc2 ( mplapackint n, mpc_class * A, mplapackint lda, mpc_class * rhs, mplapackint *ipiv, mplapackint *jpiv, mpf_class * scale );
void Rgetc2 ( mplapackint n, mpf_class * A, mplapackint lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint *info );
void Cgetc2 ( mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint *info );
void Rgtts2 ( mplapackint itrans, mplapackint n, mplapackint nrhs, mpf_class * dl, mpf_class * d, mpf_class * du, mpf_class * du2, mplapackint *ipiv, mpf_class * B, mplapackint ldb );
void Cgtts2 ( mplapackint itrans, mplapackint n, mplapackint nrhs, mpc_class * dl, mpc_class * d, mpc_class * du, mpc_class * du2, mplapackint *ipiv, mpc_class * B, mplapackint ldb );
void Rlabrd ( mplapackint m, mplapackint n, mplapackint nb, mpf_class * A, mplapackint lda, mpf_class * d, mpf_class * e, mpf_class * tauq, mpf_class * taup, mpf_class * x, mplapackint ldx, mpf_class * y, mplapackint ldy );
void Clabrd ( mplapackint m, mplapackint n, mplapackint nb, mpc_class * A, mplapackint lda, mpf_class * d, mpf_class * e, mpc_class * tauq, mpc_class * taup, mpc_class * x, mplapackint ldx, mpc_class * y, mplapackint ldy );
void Rlacpy ( const char *uplo, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb );
void Clacpy ( const char *uplo, mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb );
void Clarcm ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * c, mplapackint ldc, mpf_class * rwork );
void Rlaebz ( mplapackint ijob, mplapackint nitmax, mplapackint n, mplapackint mmax, mplapackint minp, mplapackint nbmin, mpf_class abstol, mpf_class reltol, mpf_class pivmin, mpf_class * d, mpf_class * e, mpf_class * e2, mplapackint *nval, mpf_class * AB, mpf_class * c, mplapackint *mout, mplapackint *nab, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Rlaed0 ( mplapackint icompq, mplapackint qsiz, mplapackint n, mpf_class * d, mpf_class * e, mpf_class * q, mplapackint ldq, mpf_class * qstore, mplapackint ldqs, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Claed0 ( mplapackint qsiz, mplapackint n, mpf_class * d, mpf_class * e, mpc_class * q, mplapackint ldq, mpc_class * qstore, mplapackint ldqs, mpf_class * rwork, mplapackint *iwork, mplapackint *info );
void Rlaed1 ( mplapackint n, mpf_class * d, mpf_class * q, mplapackint ldq, mplapackint *indxq, mpf_class rho, mplapackint cutpnt, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Rlaed2 ( mplapackint *k, mplapackint n, mplapackint n1, mpf_class * d, mpf_class * q, mplapackint ldq, mplapackint *indxq, mpf_class * rho, mpf_class * z, mpf_class * dlamda, mpf_class * w, mpf_class * q2, mplapackint *indx, mplapackint *indxc, mplapackint *indxp, mplapackint *coltyp, mplapackint *info );
void Rlaed3 ( mplapackint k, mplapackint n, mplapackint n1, mpf_class * d, mpf_class * q, mplapackint ldq, mpf_class * rho, mpf_class * dlamda, mpf_class * q2, mplapackint *indx, mplapackint *ctot, mpf_class * w, mpf_class * s, mplapackint *info );
void Rlaed4 ( mplapackint n, mplapackint i, mpf_class * d, mpf_class * z, mpf_class * delta, mpf_class rho, mpf_class * dlam, mplapackint *info );
void Rlaed5 ( mplapackint i, mpf_class * d, mpf_class * z, mpf_class * delta, mpf_class rho, mpf_class * dlam );
void Rlaed6 ( mplapackint kniter, mplapackint orgati, mpf_class rho, mpf_class * d, mpf_class * z, mpf_class * finit, mpf_class * tau, mplapackint *info );
void Rlaed7 ( mplapackint icompq, mplapackint n, mplapackint qsiz, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, mpf_class * d, mpf_class * q, mplapackint ldq, mplapackint *indxq, mpf_class rho, mplapackint cutpnt, mpf_class * qstore, mplapackint *qptr, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpf_class * givnum, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Claed7 ( mplapackint n, mplapackint cutpnt, mplapackint qsiz, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, mpf_class * d, mpc_class * q, mplapackint ldq, mpf_class rho, mplapackint *indxq, mpf_class * qstore, mplapackint *qptr, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpf_class * givnum, mpc_class * work, mpf_class * rwork, mplapackint *iwork, mplapackint *info );
void Rlaed8 ( mplapackint icompq, mplapackint *k, mplapackint n, mplapackint qsiz, mpf_class * d, mpf_class * q, mplapackint ldq, mplapackint *indxq, mpf_class * rho, mplapackint cutpnt, mpf_class * z, mpf_class * dlamda, mpf_class * q2, mplapackint ldq2, mpf_class * w, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpf_class * givnum, mplapackint *indxp, mplapackint *indx, mplapackint *info );
void Claed8 ( mplapackint *k, mplapackint n, mplapackint qsiz, mpc_class * q, mplapackint ldq, mpf_class * d, mpf_class * rho, mplapackint cutpnt, mpf_class * z, mpf_class * dlamda, mpc_class * q2, mplapackint ldq2, mpf_class * w, mplapackint *indxp, mplapackint *indx, mplapackint *indxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpf_class * givnum, mplapackint *info );
void Rlaed9 ( mplapackint k, mplapackint kstart, mplapackint kstop, mplapackint n, mpf_class * d, mpf_class * q, mplapackint ldq, mpf_class rho, mpf_class * dlamda, mpf_class * w, mpf_class * s, mplapackint lds, mplapackint *info );
void Rlaeda ( mplapackint n, mplapackint tlvls, mplapackint curlvl, mplapackint curpbm, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpf_class * givnum, mpf_class * q, mplapackint *qptr, mpf_class * z, mpf_class * ztemp, mplapackint *info );
void Rlaein ( mplapackint rightv, mplapackint noinit, mplapackint n, mpf_class * h, mplapackint ldh, mpf_class wr, mpf_class wi, mpf_class * vr, mpf_class * vi, mpf_class * B, mplapackint ldb, mpf_class * work, mpf_class eps3, mpf_class smlnum, mpf_class bignum, mplapackint *info );
void Claein ( mplapackint rightv, mplapackint noinit, mplapackint n, mpc_class * h, mplapackint ldh, mpc_class w, mpc_class * v, mpc_class * B, mplapackint ldb, mpf_class * rwork, mpf_class eps3, mpf_class smlnum, mplapackint *info );
void Rlaexc ( mplapackint wantq, mplapackint n, mpf_class * t, mplapackint ldt, mpf_class * q, mplapackint ldq, mplapackint j1, mplapackint n1, mplapackint n2, mpf_class * work, mplapackint *info );
void Rlag2 ( mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class safmin, mpf_class * scale1, mpf_class * scale2, mpf_class * wr1, mpf_class * wr2, mpf_class * wi );
void Rlags2 ( mplapackint upper, mpf_class a1, mpf_class a2, mpf_class a3, mpf_class b1, mpf_class b2, mpf_class b3, mpf_class * csu, mpf_class * snu, mpf_class * csv, mpf_class * snv, mpf_class * csq, mpf_class * snq );
void Clags2 ( mplapacklogical * upper, mpf_class a1, mpc_class a2, mpf_class a3, mpf_class b1, mpc_class b2, mpf_class b3, mpf_class * csu, mpc_class * snu, mpf_class * csv, mpc_class * snv, mpf_class * csq, mpc_class * snq );
void Rlagtf ( mplapackint n, mpf_class * a, mpf_class lambda, mpf_class * b, mpf_class * c, mpf_class * tol, mpf_class * d, mplapackint *in, mplapackint *info );
void Rlagtm ( const char *trans, mplapackint n, mplapackint nrhs, mpf_class alpha, mpf_class * dl, mpf_class * d, mpf_class * du, mpf_class * x, mplapackint ldx, mpf_class * beta, mpf_class * B, mplapackint ldb );
void Clagtm ( const char *trans, mplapackint n, mplapackint nrhs, mpf_class alpha, mpc_class * dl, mpc_class * d, mpc_class * du, mpc_class * x, mplapackint ldx, mpf_class beta, mpc_class * B, mplapackint ldb );
void Rlagts ( mplapackint job, mplapackint n, mpf_class * a, mpf_class * b, mpf_class * c, mpf_class * d, mplapackint *in, mpf_class * y, mpf_class * tol, mplapackint *info );
void Rlagv2 ( mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * alphar, mpf_class * alphai, mpf_class * beta, mpf_class * csl, mpf_class * snl, mpf_class * csr, mpf_class * snr );
void Rlahqr ( mplapackint wantt, mplapackint wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * h, mplapackint ldh, mpf_class * wr, mpf_class * wi, mplapackint iloz, mplapackint ihiz, mpf_class * z, mplapackint ldz, mplapackint *info );
void Clahqr ( mplapackint wantt, mplapackint wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpc_class * h, mplapackint ldh, mpc_class * w, mplapackint iloz, mplapackint ihiz, mpc_class * z, mplapackint ldz, mplapackint *info );
void Rlahr2 ( mplapackint n, mplapackint k, mplapackint nb, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * t, mplapackint ldt, mpf_class * y, mplapackint ldy );
void Clahr2 ( mplapackint n, mplapackint k, mplapackint nb, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * t, mplapackint ldt, mpc_class * y, mplapackint ldy );
void Rlahrd ( mplapackint n, mplapackint k, mplapackint nb, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * t, mplapackint ldt, mpf_class * y, mplapackint ldy );
void Clahrd ( mplapackint n, mplapackint k, mplapackint nb, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * t, mplapackint ldt, mpc_class * y, mplapackint ldy );
void Rlaic1 ( mplapackint job, mplapackint j, mpf_class * x, mpf_class sest, mpf_class * w, mpf_class gamma, mpf_class * sestpr, mpf_class * s, mpf_class * c );
void Claic1 ( mplapackint job, mplapackint j, mpc_class * x, mpf_class sest, mpc_class * w, mpc_class gamma, mpf_class * sestpr, mpc_class * s, mpc_class * c );
void Rlaln2 ( mplapackint ltrans, mplapackint na, mplapackint nw, mpf_class smin, mpf_class ca, mpf_class * A, mplapackint lda, mpf_class d1, mpf_class d2, mpf_class * B, mplapackint ldb, mpf_class wr, mpf_class wi, mpf_class * x, mplapackint ldx, mpf_class * scale, mpf_class * xnorm, mplapackint *info );
void Rlals0 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint nrhs, mpf_class * B, mplapackint ldb, mpf_class * bx, mplapackint ldbx, mplapackint *perm, mplapackint givptr, mplapackint *givcol, mplapackint ldgcol, mpf_class * givnum, mplapackint ldgnum, mpf_class * poles, mpf_class * difl, mpf_class * difr, mpf_class * z, mplapackint k, mpf_class c, mpf_class s, mpf_class * work, mplapackint *info );
void Clals0 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint nrhs, mpc_class * B, mplapackint ldb, mpc_class * bx, mplapackint ldbx, mplapackint *perm, mplapackint givptr, mplapackint *givcol, mplapackint ldgcol, mpf_class * givnum, mplapackint ldgnum, mpf_class * poles, mpf_class * difl, mpf_class * difr, mpf_class * z, mplapackint k, mpf_class c, mpf_class s, mpf_class * rwork, mplapackint *info );
void Rlalsa ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint nrhs, mpf_class * B, mplapackint ldb, mpf_class * bx, mplapackint ldbx, mpf_class * u, mplapackint ldu, mpf_class * vt, mplapackint *k, mpf_class * difl, mpf_class * difr, mpf_class * z, mpf_class * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, mpf_class * givnum, mpf_class * c, mpf_class * s, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Clalsa ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint nrhs, mpc_class * B, mplapackint ldb, mpc_class * bx, mplapackint ldbx, mpf_class * u, mplapackint ldu, mpf_class * vt, mplapackint *k, mpf_class * difl, mpf_class * difr, mpf_class * z, mpf_class * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, mpf_class * givnum, mpf_class * c, mpf_class * s, mpf_class * rwork, mplapackint *iwork, mplapackint *info );
void Rlalsd ( const char *uplo, mplapackint smlsiz, mplapackint n, mplapackint nrhs, mpf_class * d, mpf_class * e, mpf_class * B, mplapackint ldb, mpf_class rcond, mplapackint *rank, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Clalsd ( const char *uplo, mplapackint smlsiz, mplapackint n, mplapackint nrhs, mpf_class * d, mpf_class * e, mpc_class * B, mplapackint ldb, mpf_class rcond, mplapackint *rank, mpc_class * work, mpf_class * rwork, mplapackint *iwork, mplapackint *info );
void Rlamrg ( mplapackint n1, mplapackint n2, mpf_class * a, mplapackint dtrd1, mplapackint dtrd2, mplapackint *index );
mpf_class Rlangb ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, mpf_class * ab, mplapackint ldab, mpf_class * work );
mpf_class Clangb ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, mpc_class * AB, mplapackint ldab, mpf_class * work );
mpf_class Rlange ( const char *norm, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * work );
mpf_class Clange ( const char *norm, mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * work );
mpf_class Rlangt ( const char *norm, mplapackint n, mpf_class * dl, mpf_class * d, mpf_class * du );
mpf_class Clangt ( const char *norm, mplapackint n, mpc_class * dl, mpc_class * d, mpc_class * du );
mpf_class Rlanhs ( const char *norm, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * work );
mpf_class Clanhs ( const char *norm, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * work );
mpf_class Rlansb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, mpf_class * AB, mplapackint ldab, mpf_class * work );
mpf_class Clansb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, mpc_class * AB, mplapackint ldab, mpf_class * work );
mpf_class Clanhb ( const char *norm, const char *uplo, mplapackint n, mplapackint k, mpc_class * AB, mplapackint ldab, mpf_class * work );
mpf_class Rlansp ( const char *norm, const char *uplo, mplapackint n, mpf_class * ap, mpf_class * work );
mpf_class Clansp ( const char *norm, const char *uplo, mplapackint n, mpc_class * ap, mpf_class * work );
mpf_class Clanhp ( const char *norm, const char *uplo, mplapackint n, mpc_class * ap, mpf_class * work );
mpf_class Rlantb ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint k, mpf_class * AB, mplapackint ldab, mpf_class * work );
mpc_class Clantb ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint k, mpc_class * AB, mplapackint ldab, mpf_class * work );
mpf_class Rlantp ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpf_class * ap, mpf_class * work );
mpc_class Clantp ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpc_class * ap, mpf_class * work );
mpf_class Rlantr ( const char *norm, const char *uplo, const char *diag, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * work );
mpf_class Clantr ( const char *norm, const char *uplo, const char *diag, mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * work );
void Rlanv2 ( mpf_class * a, mpf_class * b, mpf_class * c, mpf_class * d, mpf_class * rt1r, mpf_class * rt1i, mpf_class * rt2r, mpf_class * rt2i, mpf_class * cs, mpf_class * sn );
void Rlapll ( mplapackint n, mpf_class * x, mplapackint incx, mpf_class * y, mplapackint incy, mpf_class * ssmin );
void Clapll ( mplapackint n, mpc_class * x, mplapackint incx, mpc_class * y, mplapackint incy, mpf_class * ssmin );
void Rlapmt ( mplapackint *forwrd, mplapackint m, mplapackint n, mpf_class * X, mplapackint ldx, mplapackint *k );
void Clapmt ( mplapackint *forwrd, mplapackint m, mplapackint n, mpc_class * X, mplapackint ldx, mplapackint *k );
void Rlaqgb ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpf_class * AB, mplapackint ldab, mpf_class * r, mpf_class * c, mpf_class rowcnd, mpf_class colcnd, mpf_class amax, char *equed );
void Claqgb ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpc_class * AB, mplapackint ldab, mpf_class * r, mpf_class * c, mpf_class rowcnd, mpf_class colcnd, mpf_class amax, char *equed );
void Rlaqge ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * r, mpf_class * c, mpf_class rowcnd, mpf_class colcnd, mpf_class amax, char *equed );
void Claqge ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * r, mpf_class * c, mpf_class rowcnd, mpf_class colcnd, mpf_class amax, char *equed );
void Rlaqp2 ( mplapackint m, mplapackint n, mplapackint offset, mpf_class * A, mplapackint lda, mplapackint *jpvt, mpf_class * tau, mpf_class * vn1, mpf_class * vn2, mpf_class * work );
void Claqp2 ( mplapackint m, mplapackint n, mplapackint offset, mpc_class * A, mplapackint lda, mplapackint *jpvt, mpc_class * tau, mpf_class * vn1, mpf_class * vn2, mpc_class * work );
void Rlaqps ( mplapackint m, mplapackint n, mplapackint offset, mplapackint nb, mplapackint *kb, mpf_class * A, mplapackint lda, mplapackint *jpvt, mpf_class * tau, mpf_class * vn1, mpf_class * vn2, mpf_class * auxv, mpf_class * f, mplapackint ldf );
void Claqps ( mplapackint m, mplapackint n, mplapackint offset, mplapackint nb, mplapackint *kb, mpc_class * A, mplapackint lda, mplapackint *jpvt, mpc_class * tau, mpf_class * vn1, mpf_class * vn2, mpc_class * auxv, mpc_class * f, mplapackint ldf );
void Rlaqsb ( const char *uplo, mplapackint n, mplapackint kd, mpf_class * ab, mplapackint ldab, mpf_class * s, mpf_class scond, mpf_class amax, char *equed );
void Claqsb ( const char *uplo, mplapackint n, mplapackint kd, mpc_class * ab, mplapackint ldab, mpf_class * s, mpf_class scond, mpf_class amax, char *equed );
void Claqhb ( const char *uplo, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mpf_class * s, mpf_class scond, mpf_class amax, char *equed );
void Rlaqsp ( const char *uplo, mplapackint n, mpf_class * ap, mpf_class * s, mpf_class scond, mpf_class amax, char *equed );
void Claqsp ( const char *uplo, mplapackint n, mpc_class * ap, mpf_class * s, mpf_class scond, mpf_class amax, char *equed );
void Claqhp ( const char *uplo, mplapackint n, mpc_class * ap, mpf_class * s, mpf_class scond, mpf_class amax, char *equed );
void Rlaqsy ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * s, mpf_class scond, mpf_class amax, char *equed );
void Claqsy ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * s, mpf_class scond, mpf_class amax, char *equed );
void Claqhe ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * s, mpf_class scond, mpf_class amax, char *equed );
void Rlaqtr ( mplapackint ltran, mplapackint lreal, mplapackint n, mpf_class * t, mplapackint ldt, mpf_class * B, mpf_class w, mpf_class * scale, mpf_class * x, mpf_class * work, mplapackint *info );
void Rlar1v ( mplapackint n, mplapackint b1, mplapackint bn, mpf_class lambda, mpf_class * d, mpf_class * l, mpf_class * ld, mpf_class * lld, mpf_class pivmin, mpf_class gaptol, mpf_class * z, mplapackint wantnc, mplapackint *negcnt, mpf_class * ztz, mpf_class * mingma, mplapackint *r, mplapackint *isuppz, mpf_class * nrminv, mpf_class * resid, mpf_class * rqcorr, mpf_class * work );
void Clar1v ( mplapackint n, mplapackint b1, mplapackint bn, mpf_class lambda, mpf_class * d, mpf_class * l, mpf_class * ld, mpf_class * lld, mpf_class pivmin, mpf_class gaptol, mpc_class * z, mplapackint wantnc, mplapackint *negcnt, mpf_class * ztz, mpf_class * mingma, mplapackint *r, mplapackint *isuppz, mpf_class * nrminv, mpf_class * resid, mpf_class * rqcorr, mpf_class * work );
void Rlar2v ( mplapackint n, mpf_class * x, mpf_class * y, mpf_class * z, mplapackint incx, mpf_class * c, mpf_class * s, mplapackint incc );
void Clar2v ( mplapackint n, mpc_class * x, mpc_class * y, mpc_class * z, mplapackint incx, mpf_class * c, mpc_class * s, mplapackint incc );
void Rlarfx ( const char *side, mplapackint m, mplapackint n, mpf_class * v, mpf_class tau, mpf_class * c, mplapackint ldc, mpf_class * work );
void Clarfx ( const char *side, mplapackint m, mplapackint n, mpc_class * v, mpc_class tau, mpc_class * c, mplapackint ldc, mpc_class * work );
void Rlargv ( mplapackint n, mpf_class * x, mplapackint incx, mpf_class * y, mplapackint incy, mpf_class * c, mplapackint incc );
void Clargv ( mplapackint n, mpc_class * x, mplapackint incx, mpc_class * y, mplapackint incy, mpf_class * c, mplapackint incc );
void Rlarnv ( mplapackint idist, mplapackint *iseed, mplapackint n, mpf_class * x );
void Clarnv ( mplapackint idist, mplapackint *iseed, mplapackint n, mpc_class * x );
mplapackint Rlaneg ( mplapackint n, mpf_class * d, mpf_class * lld, mpf_class sigma, mpf_class pivmin, mplapackint r );
void Rlarra ( mplapackint n, mpf_class * d, mpf_class * e, mpf_class * e2, mpf_class spltol, mpf_class tnrm, mplapackint *nsplit, mplapackint *isplit, mplapackint *info );
void Rlarrb ( mplapackint n, mpf_class * d, mpf_class * lld, mplapackint ifirst, mplapackint ilast, mpf_class rtol1, mpf_class rtol2, mplapackint offset, mpf_class * w, mpf_class * wgap, mpf_class * werr, mpf_class * work, mplapackint *iwork, mpf_class pivmin, mpf_class spdiam, mplapackint twist, mplapackint *info );
void Rlarrc ( const char *jobt, mplapackint n, mpf_class vl, mpf_class vu, mpf_class * d, mpf_class * e, mpf_class pivmin, mplapackint *eigcnt, mplapackint *lcnt, mplapackint *rcnt, mplapackint *info );
void Rlarrd ( const char *range, const char *order, mplapackint n, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class *gers, mpf_class reltol, mpf_class * d, mpf_class * e, mpf_class * e2, mpf_class pivmin, mplapackint nsplit, mplapackint *isplit, mplapackint *m, mpf_class * w, mpf_class * werr, mpf_class * wl, mpf_class * wu, mplapackint *iblock, mplapackint *indexw, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Rlarre ( const char *range, mplapackint n, mpf_class * vl, mpf_class * vu, mplapackint il, mplapackint iu, mpf_class * d, mpf_class * e, mpf_class * e2, mpf_class rtol1, mpf_class rtol2, mpf_class spltol, mplapackint * nsplit, mplapackint *isplit, mplapackint * m, mpf_class * w, mpf_class * werr, mpf_class * wgap, mplapackint *iblock, mplapackint *indexw, mpf_class * gers, mpf_class * pivmin, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Rlarrf ( mplapackint n, mpf_class * d, mpf_class * l, mpf_class * ld, mplapackint clstrt, mplapackint clend, mpf_class * w, mpf_class * wgap, mpf_class * werr, mpf_class spdiam, mpf_class clgapl, mpf_class clgapr, mpf_class pivmin, mpf_class * sigma, mpf_class * dplus, mpf_class * lplus, mpf_class * work, mplapackint *info );
void Rlarrj ( mplapackint n, mpf_class * d, mpf_class * e2, mplapackint ifirst, mplapackint ilast, mpf_class rtol, mplapackint offset, mpf_class * w, mpf_class * werr, mpf_class * work, mplapackint *iwork, mpf_class pivmin, mpf_class spdiam, mplapackint *info );
void Rlarrk ( mplapackint n, mplapackint iw, mpf_class gl, mpf_class gu, mpf_class * d, mpf_class * e2, mpf_class pivmin, mpf_class reltol, mpf_class * w, mpf_class * werr, mplapackint *info );
void Rlarrr ( mplapackint n, mpf_class * d, mpf_class * e, mplapackint *info );
void Rlartv ( mplapackint n, mpf_class * x, mplapackint incx, mpf_class * y, mplapackint incy, mpf_class * c, mpf_class * s, mplapackint incc );
void Clartv ( mplapackint n, mpc_class * x, mplapackint incx, mpc_class * y, mplapackint incy, mpf_class * c, mpc_class * s, mplapackint incc );
void Rlarrv ( mplapackint n, mpf_class vl, mpf_class vu, mpf_class * d, mpf_class * l, mpf_class pivmin, mplapackint * isplit, mplapackint m, mplapackint dol, mplapackint dou, mpf_class minrgp, mpf_class rtol1, mpf_class rtol2, mpf_class * w, mpf_class * werr, mpf_class * wgap, mplapackint * iblock, mplapackint * indexw, mpf_class * gers, mpf_class * z, mplapackint ldz, mplapackint * isuppz, mpf_class * work, mplapackint * iwork, mplapackint * info );
void Clarrv ( mplapackint n, mpf_class vl, mpf_class vu, mpf_class * d, mpf_class * l, mpf_class pivmin, mplapackint *isplit, mplapackint m, mplapackint dol, mplapackint dou, mpf_class minrgp, mpf_class rtol1, mpf_class rtol2, mpf_class * w, mpf_class * werr, mpf_class * wgap, mplapackint *iblock, mplapackint *indexw, mpf_class * gers, mpc_class * z, mplapackint ldz, mplapackint *isuppz, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Rlaruv ( mplapackint *iseed, mplapackint n, mpf_class * x );
void Rlarz ( const char *side, mplapackint m, mplapackint n, mplapackint l, mpf_class * v, mplapackint incv, mpf_class tau, mpf_class * C, mplapackint ldc, mpf_class * work );
void Clarz ( const char *side, mplapackint m, mplapackint n, mplapackint l, mpc_class * v, mplapackint incv, mpc_class tau, mpc_class * c, mplapackint ldc, mpc_class * work );
void Rlarzb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpf_class * v, mplapackint ldv, mpf_class * t, mplapackint ldt, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint ldwork );
void Clarzb ( const char *side, const char *trans, const char *direct, const char *storev, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpc_class * v, mplapackint ldv, mpc_class * t, mplapackint ldt, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint ldwork );
void Rlarzt ( const char *direct, const char *storev, mplapackint n, mplapackint k, mpf_class * v, mplapackint ldv, mpf_class * tau, mpf_class * t, mplapackint ldt );
void Clarzt ( const char *direct, const char *storev, mplapackint n, mplapackint k, mpc_class * v, mplapackint ldv, mpc_class * tau, mpc_class * t, mplapackint ldt );
void Rlas2 ( mpf_class f, mpf_class g, mpf_class h, mpf_class * ssmin, mpf_class * ssmax );
void Rlasd0 ( mplapackint n, mplapackint sqre, mpf_class * d, mpf_class * e, mpf_class * u, mplapackint ldu, mpf_class * vt, mplapackint ldvt, mplapackint smlsiz, mplapackint *iwork, mpf_class * work, mplapackint *info );
void Rlasd1 ( mplapackint nl, mplapackint nr, mplapackint *sqre, mpf_class * d, mpf_class * alpha, mpf_class * beta, mpf_class * u, mplapackint ldu, mpf_class * vt, mplapackint ldvt, mplapackint *idxq, mplapackint *iwork, mpf_class * work, mplapackint *info );
void Rlasd2 ( mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint *k, mpf_class * d, mpf_class * z, mpf_class alpha, mpf_class beta, mpf_class * u, mplapackint ldu, mpf_class * vt, mplapackint ldvt, mpf_class * dsigma, mpf_class * u2, mplapackint ldu2, mpf_class * vt2, mplapackint ldvt2, mplapackint *idxp, mplapackint *idx, mplapackint *idxc, mplapackint *idxq, mplapackint *coltyp, mplapackint *info );
void Rlasd3 ( mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint k, mpf_class * d, mpf_class * q, mplapackint ldq, mpf_class * dsigma, mpf_class * u, mplapackint ldu, mpf_class * u2, mplapackint ldu2, mpf_class * vt, mplapackint ldvt, mpf_class * vt2, mplapackint ldvt2, mplapackint *idxc, mplapackint *ctot, mpf_class * z, mplapackint *info );
void Rlasd4 ( mplapackint n, mplapackint i, mpf_class * d, mpf_class * z, mpf_class * delta, mpf_class rho, mpf_class * sigma, mpf_class * work, mplapackint *info );
void Rlasd5 ( mplapackint i, mpf_class * d, mpf_class * z, mpf_class * delta, mpf_class rho, mpf_class * dsigma, mpf_class * work );
void Rlasd6 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mpf_class * d, mpf_class * vf, mpf_class * vl, mpf_class * alpha, mpf_class * beta, mplapackint *idxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mpf_class * givnum, mplapackint ldgnum, mpf_class * poles, mpf_class * difl, mpf_class * difr, mpf_class * z, mplapackint k, mpf_class * c, mpf_class * s, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Rlasd7 ( mplapackint icompq, mplapackint nl, mplapackint nr, mplapackint sqre, mplapackint k, mpf_class * d, mpf_class * z, mpf_class * zw, mpf_class * vf, mpf_class * vfw, mpf_class * vl, mpf_class * vlw, mpf_class alpha, mpf_class beta, mpf_class * dsigma, mplapackint *idx, mplapackint *idxp, mplapackint *idxq, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mpf_class * givnum, mplapackint ldgnum, mpf_class * c, mpf_class * s, mplapackint *info );
void Rlasd8 ( mplapackint icompq, mplapackint k, mpf_class * d, mpf_class * z, mpf_class * vf, mpf_class * vl, mpf_class * difl, mpf_class * difr, mplapackint lddifr, mpf_class * dsigma, mpf_class * work, mplapackint *info );
void Rlasda ( mplapackint icompq, mplapackint smlsiz, mplapackint n, mplapackint sqre, mpf_class * d, mpf_class * e, mpf_class * u, mplapackint ldu, mpf_class * vt, mplapackint *k, mpf_class * difl, mpf_class * difr, mpf_class * z, mpf_class * poles, mplapackint *givptr, mplapackint *givcol, mplapackint ldgcol, mplapackint *perm, mpf_class * givnum, mpf_class * c, mpf_class * s, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Rlasdq ( const char *uplo, mplapackint sqre, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, mpf_class * d, mpf_class * e, mpf_class * vt, mplapackint ldvt, mpf_class * u, mplapackint ldu, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint *info );
void Rlasdt ( mplapackint n, mplapackint lvl, mplapackint nd, mplapackint *inode, mplapackint *ndiml, mplapackint *ndimr, mplapackint msub );
void Rlasq1 ( mplapackint n, mpf_class * d, mpf_class * e, mpf_class * work, mplapackint *info );
void Rlasq2 ( mplapackint n, mpf_class * z, mplapackint *info );
void Rlasq3 ( mplapackint i0, mplapackint n0, mpf_class * z, mplapackint pp, mpf_class * dmin, mpf_class * sigma, mpf_class * desig, mpf_class qmax, mplapackint *nfail, mplapackint *iter, mplapackint *ndiv, mplapackint ieee );
void Rlasq4 ( mplapackint i0, mplapackint n0, mpf_class * z, mplapackint pp, mplapackint n0in, mpf_class dmin, mpf_class dmin1, mpf_class dmin2, mpf_class dn, mpf_class dn1, mpf_class dn2, mpf_class * tau, mplapackint *ttype );
void Rlasq5 ( mplapackint i0, mplapackint n0, mpf_class * z, mplapackint pp, mpf_class tau, mpf_class * dmin, mpf_class * dmin1, mpf_class * dmin2, mpf_class * dn, mpf_class * dnm1, mpf_class * dnm2, mplapackint ieee );
void Rlasq6 ( mplapackint i0, mplapackint n0, mpf_class * z, mplapackint pp, mpf_class * dmin, mpf_class * dmin1, mpf_class * dmin2, mpf_class * dn, mpf_class * dnm1, mpf_class * dnm2 );
void Rlasv2 ( mpf_class f, mpf_class g, mpf_class h, mpf_class * ssmin, mpf_class * ssmax, mpf_class * snr, mpf_class * csr, mpf_class * snl, mpf_class * csl );
void Rlasy2 ( mplapackint ltranl, mplapackint ltranr, mplapackint isgn, mplapackint n1, mplapackint n2, mpf_class * tl, mplapackint ldtl, mpf_class * tr, mplapackint ldtr, mpf_class * B, mplapackint ldb, mpf_class * scale, mpf_class * x, mplapackint ldx, mpf_class * xnorm, mplapackint *info );
void Rlatbs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mplapackint kd, mpf_class * AB, mplapackint ldab, mpf_class * x, mpf_class * scale, mpf_class * cnorm, mplapackint *info );
void Clatbs ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mpc_class * x, mpf_class * scale, mpf_class * cnorm, mplapackint *info );
void Rlatdf ( mplapackint ijob, mplapackint n, mpf_class * z, mplapackint ldz, mpf_class * rhs, mpf_class * rdsum, mpf_class * rdscal, mplapackint *ipiv, mplapackint *jpiv );
void Clatdf ( mplapackint ijob, mplapackint n, mpc_class * z, mplapackint ldz, mpc_class * rhs, mpf_class * rdsum, mpf_class * rdscal, mplapackint *ipiv, mplapackint *jpiv );
void Rlatps ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mpf_class * ap, mpf_class * x, mpf_class * scale, mpf_class * cnorm, mplapackint *info );
void Clatps ( const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint n, mpc_class * ap, mpc_class * x, mpf_class * scale, mpf_class * cnorm, mplapackint *info );
void Rlauu2 ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *info );
void Clauu2 ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *info );
void Rlauum ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *info );
void Clauum ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *info );
void Rlatrz ( mplapackint m, mplapackint n, mplapackint l, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work );
void Clatrz ( mplapackint m, mplapackint n, mplapackint l, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work );
void Rorgl2 ( mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cungl2 ( mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint *info );
void Rorgr2 ( mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cungr2 ( mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint *info );
void Rorm2l ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint *info );
void Cunm2l ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint *info );
void Rorm2r ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint *info );
void Cunm2r ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint *info );
void Rorml2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint *info );
void Cunml2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint *info );
void Rormr2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * C, mplapackint ldc, mpf_class * work, mplapackint *info );
void Cunmr2 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint *info );
void Rormr3 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint *info );
void Cunmr3 ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint *info );
void Rpbtf2 ( const char *uplo, mplapackint n, mplapackint kd, mpf_class * AB, mplapackint ldab, mplapackint *info );
void Cpbtf2 ( const char *uplo, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mplapackint *info );
void Rptts2 ( mplapackint n, mplapackint nrhs, mpf_class * d, mpf_class * e, mpf_class * b, mplapackint ldb );
void Cptts2 ( mplapackint iuplo, mplapackint n, mplapackint nrhs, mpf_class * d, mpc_class * e, mpc_class * B, mplapackint ldb );
void Rrscl ( mplapackint n, mpf_class sa, mpf_class * sx, mplapackint incx );
void CRrscl ( mplapackint n, mpf_class sa, mpc_class * sx, mplapackint incx );
void Rsygs2 ( mplapackint itype, const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mplapackint *info );
void Chegs2 ( mplapackint itype, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rsytf2 ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Csytf2 ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Chetf2 ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mplapackint *info );
void Rtgex2 ( mplapackint wantq, mplapackint wantz, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * q, mplapackint ldq, mpf_class * z, mplapackint ldz, mplapackint j1, mplapackint n1, mplapackint n2, mpf_class * work, mplapackint lwork, mplapackint *info );
void Ctgex2 ( mplapackint wantq, mplapackint wantz, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * q, mplapackint ldq, mpc_class * z, mplapackint ldz, mplapackint j1, mplapackint *info );
void Rtgsy2 ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * c, mplapackint ldc, mpf_class * d, mplapackint ldd, mpf_class * e, mplapackint lde, mpf_class * f, mplapackint ldf, mpf_class * scale, mpf_class * rdsum, mpf_class * rdscal, mplapackint *iwork, mplapackint *pq, mplapackint *info );
void Ctgsy2 ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * C, mplapackint ldc, mpc_class * d, mplapackint ldd, mpc_class * e, mplapackint lde, mpc_class * f, mplapackint ldf, mpf_class * scale, mpf_class * rdsum, mpf_class * rdscal, mplapackint *info );
void Rlazq3 ( mplapackint i0, mplapackint n0, mpf_class * z, mplapackint pp, mpf_class * dmin, mpf_class * sigma, mpf_class * desig, mpf_class qmax, mplapackint *nfail, mplapackint *iter, mplapackint *ndiv, mplapackint *ieee, mplapackint *ttype, mpf_class * dmin1, mpf_class * dmin2, mpf_class * dn, mpf_class * dn1, mpf_class * dn2, mpf_class * tau );
void Rlazq4 ( mplapackint i0, mplapackint n0, mpf_class * z, mplapackint pp, mplapackint n0in, mpf_class dmin, mpf_class dmin1, mpf_class dmin2, mpf_class dn, mpf_class dn1, mpf_class dn2, mpf_class * tau, mplapackint *ttype, mpf_class * g );
void Rlaqr0 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * h, mplapackint ldh, mpf_class * wr, mpf_class * wi, mplapackint iloz, mplapackint ihiz, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *info );
void Claqr0 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpc_class * h, mplapackint ldh, mpc_class * w, mplapackint *iloz, mplapackint *ihiz, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rlaqr1 ( mplapackint n, mpf_class * h, mplapackint ldh, mpf_class sr1, mpf_class si1, mpf_class sr2, mpf_class si2, mpf_class * v );
void Claqr1 ( mplapackint n, mpc_class * h, mplapackint ldh, mpc_class s1, mpc_class s2, mpc_class * v );
void Rlaqr2 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, mpf_class * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpf_class * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, mpf_class * sr, mpf_class * si, mpf_class * v, mplapackint ldv, mplapackint nh, mpf_class * t, mplapackint ldt, mplapackint nv, mpf_class * wv, mplapackint ldwv, mpf_class * work, mplapackint lwork );
void Claqr2 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, mpc_class * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpc_class * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, mpc_class * sh, mpc_class * v, mplapackint ldv, mplapackint nh, mpc_class * t, mplapackint ldt, mplapackint nv, mpc_class * wv, mplapackint ldwv, mpc_class * work, mplapackint lwork );
void Rlaqr3 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, mpf_class * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpf_class * z, mplapackint ldz, mplapackint ns, mplapackint nd, mpf_class * sr, mpf_class * si, mpf_class * v, mplapackint ldv, mplapackint nh, mpf_class * t, mplapackint ldt, mplapackint nv, mpf_class * wv, mplapackint ldwv, mpf_class * work, mplapackint lwork );
void Claqr3 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nw, mpc_class * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpc_class * z, mplapackint ldz, mplapackint *ns, mplapackint *nd, mpc_class * sh, mpc_class * v, mplapackint ldv, mplapackint nh, mpc_class * t, mplapackint ldt, mplapackint nv, mpc_class * wv, mplapackint ldwv, mpc_class * work, mplapackint lwork );
void Rlaqr4 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * h, mplapackint ldh, mpf_class * wr, mpf_class * wi, mplapackint iloz, mplapackint ihiz, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *info );
void Claqr4 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint n, mplapackint ilo, mplapackint ihi, mpc_class * h, mplapackint ldh, mpc_class * w, mplapackint iloz, mplapackint ihiz, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rlaqr5 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint kac22, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nshfts, mpf_class * sr, mpf_class * si, mpf_class * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpf_class * z, mplapackint ldz, mpf_class * v, mplapackint ldv, mpf_class * u, mplapackint ldu, mplapackint nv, mpf_class * wv, mplapackint ldwv, mplapackint nh, mpf_class * wh, mplapackint ldwh );
void Claqr5 ( mplapacklogical wantt, mplapacklogical wantz, mplapackint kacc22, mplapackint n, mplapackint ktop, mplapackint kbot, mplapackint nshfts, mpc_class * s, mpc_class * h, mplapackint ldh, mplapackint iloz, mplapackint ihiz, mpc_class * z, mplapackint ldz, mpc_class * v, mplapackint ldv, mpc_class * u, mplapackint ldu, mplapackint nv, mpc_class * wv, mplapackint ldwv, mplapackint nh, mpc_class * wh, mplapackint ldwh );
void Rlatzm ( const char *side, mplapackint m, mplapackint n, mpf_class * v, mplapackint incv, mpf_class * tau, mpf_class *c1, mpf_class * c2, mplapackint ldc, mpf_class * work );
void Clatzm ( const char *side, mplapackint m, mplapackint n, mpc_class * v, mplapackint incv, mpc_class * tau, mpc_class * c1, mpc_class * c2, mplapackint ldc, mpc_class * work );
void Clacp2 ( const char *uplo, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpc_class * B, mplapackint ldb );
mplapackint Risnan ( mpf_class din );

/* not yet done ... driver and computational routines */
void Rbdsdc ( const char *uplo, const char *compq, mplapackint n, mpf_class * d, mpf_class * e, mpf_class * u, mplapackint ldu, mpf_class * vt, mplapackint ldvt, mpf_class * q, mplapackint * iq, mpf_class * work, mplapackint * iwork, mplapackint * info );
void Rbdsqr ( const char *uplo, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, mpf_class * d, mpf_class * e, mpf_class * vt, mplapackint ldvt, mpf_class * u, mplapackint ldu, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint *info );
void Cbdsqr ( const char *uplo, mplapackint n, mplapackint ncvt, mplapackint nru, mplapackint ncc, mpf_class * d, mpf_class * e, mpc_class * vt, mplapackint ldvt, mpc_class * u, mplapackint ldu, mpc_class * c, mplapackint ldc, mpf_class * rwork, mplapackint * info );
void Rdisna ( const char *job, mplapackint m, mplapackint n, mpf_class * d, mpf_class * sep, mplapackint *info );
void Rgbbrd ( const char *vect, mplapackint m, mplapackint n, mplapackint ncc, mplapackint kl, mplapackint ku, mpf_class * AB, mplapackint ldab, mpf_class * d, mpf_class * e, mpf_class * q, mplapackint ldq, mpf_class * pt, mplapackint ldpt, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint *info );
void Cgbbrd ( const char *vect, mplapackint m, mplapackint n, mplapackint ncc, mplapackint kl, mplapackint ku, mpc_class * AB, mplapackint ldab, mpf_class * d, mpf_class * e, mpc_class * q, mplapackint ldq, mpc_class * pt, mplapackint ldpt, mpc_class * c, mplapackint ldc, mpc_class * work, mpf_class * rwork, mplapackint * info );
void Rgbcon ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, mpf_class * AB, mplapackint ldab, mplapackint *ipiv, mpf_class anorm, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cgbcon ( const char *norm, mplapackint n, mplapackint kl, mplapackint ku, mpc_class * AB, mplapackint ldab, mplapackint *ipiv, mpf_class anorm, mpf_class * rcond, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rgbequ ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpf_class * AB, mplapackint ldab, mpf_class * r, mpf_class * c, mpf_class * rowcnd, mpf_class * colcnd, mpf_class * amax, mplapackint *info );
void Cgbequ ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpc_class * AB, mplapackint ldab, mpf_class * r, mpf_class * c, mpf_class * rowcnd, mpf_class * colcnd, mpf_class * amax, mplapackint *info );
void Rgbrfs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpf_class * AB, mplapackint ldab, mpf_class * afb, mplapackint ldafb, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cgbrfs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpc_class * AB, mplapackint ldab, mpc_class * afb, mplapackint ldafb, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rgbsv ( mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpf_class * AB, mplapackint ldab, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cgbsv ( mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpc_class * ab, mplapackint ldab, mplapackint *ipiv, mpc_class * b, mplapackint ldb, mplapackint *info );
void Rgbsvx ( const char *fact, const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpf_class * AB, mplapackint ldab, mpf_class * afb, mplapackint ldafb, mplapackint * ipiv, char *equed, mpf_class * r, mpf_class * c, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint * iwork, mplapackint * info );
void Cgbsvx ( const char *fact, const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpc_class * AB, mplapackint ldab, mpc_class * afb, mplapackint ldafb, mplapackint * ipiv, char *equed, mpf_class * r, mpf_class * c, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint * info );
void Rgbtrf ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpf_class * AB, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Cgbtrf ( mplapackint m, mplapackint n, mplapackint kl, mplapackint ku, mpc_class * ab, mplapackint ldab, mplapackint *ipiv, mplapackint *info );
void Rgbtrs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpf_class * AB, mplapackint ldab, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cgbtrs ( const char *trans, mplapackint n, mplapackint kl, mplapackint ku, mplapackint nrhs, mpc_class * AB, mplapackint ldab, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rgebak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * scale, mplapackint m, mpf_class * v, mplapackint ldv, mplapackint *info );
void Cgebak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * scale, mplapackint m, mpc_class * v, mplapackint ldv, mplapackint *info );
void Rgebal ( const char *job, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *ilo, mplapackint *ihi, mpf_class * scale, mplapackint *info );
void Cgebal ( const char *job, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ilo, mplapackint *ihi, mpf_class * scale, mplapackint *info );
void Rgebrd ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * d, mpf_class * e, mpf_class * tauq, mpf_class * taup, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgebrd ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * d, mpf_class * e, mpc_class * tauq, mpc_class * taup, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rgecon ( const char *norm, mplapackint n, mpf_class * A, mplapackint lda, mpf_class anorm, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cgecon ( const char *norm, mplapackint n, mpc_class * A, mplapackint lda, mpf_class anorm, mpf_class * rcond, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rgeequ ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * r, mpf_class * c, mpf_class * rowcnd, mpf_class * colcnd, mpf_class * amax, mplapackint *info );
void Cgeequ ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * r, mpf_class * c, mpf_class * rowcnd, mpf_class * colcnd, mpf_class * amax, mplapackint *info );
void Rgees ( const char *jobvs, const char *sort, LFP select, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *sdim, mpf_class * wr, mpf_class * wi, mpf_class * vs, mplapackint ldvs, mpf_class * work, mplapackint lwork, mplapacklogical * bwork, mplapackint *info );
void Cgees ( const char *jobvs, const char *sort, LFP select, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *sdim, mpc_class * w, mpc_class * vs, mplapackint ldvs, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapacklogical * bwork, mplapackint *info );
void Rgeesx ( const char *jobvs, const char *sort, LFP select, const char *sense, mplapackint n, mpf_class * A, mplapackint lda, mplapackint * sdim, mpf_class * wr, mpf_class * wi, mpf_class * vs, mplapackint ldvs, mpf_class * rconde, mpf_class * rcondv, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Cgeesx ( const char *jobvs, const char *sort, LFP select, const char *sense, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *sdim, mpc_class * w, mpc_class * vs, mplapackint ldvs, mpf_class * rconde, mpf_class * rcondv, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapacklogical * bwork, mplapackint *info );
void Rgeev ( const char *jobvl, const char *jobvr, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * wr, mpf_class * wi, mpf_class * vl, mplapackint ldvl, mpf_class * vr, mplapackint ldvr, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgeev ( const char *jobvl, const char *jobvr, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * w, mpc_class * vl, mplapackint ldvl, mpc_class * vr, mplapackint ldvr, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * info );
void Rgeevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * wr, mpf_class * wi, mpf_class * vl, mplapackint ldvl, mpf_class * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, mpf_class * scale, mpf_class * abnrm, mpf_class * rconde, mpf_class * rcondv, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Cgeevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * w, mpc_class * vl, mplapackint ldvl, mpc_class * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, mpf_class * scale, mpf_class * abnrm, mpf_class * rconde, mpf_class * rcondv, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * info );
void Cgehrd ( mplapackint n, mplapackint ilo, mplapackint ihi, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rgehrd ( mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Rgelqf ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgelqf ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rgels ( const char *trans, mplapackint m, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgels ( const char *trans, mplapackint m, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rgelsx ( mplapackint m, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mplapackint *jpvt, mpf_class rcond, mplapackint *rank, mpf_class * work, mplapackint *info );
void Cgelsx ( mplapackint m, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mplapackint *jpvt, mpf_class rcond, mplapackint *rank, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rgelsd ( mplapackint m, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * s, mpf_class * rcond, mplapackint *rank, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint *info );
void Cgelsd ( mplapackint m, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpf_class * s, mpf_class rcond, mplapackint * rank, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * iwork, mplapackint * info );
void Rgelss ( mplapackint m, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * s, mpf_class rcond, mplapackint * rank, mpf_class * work, mplapackint lwork, mplapackint * info );
void Cgelss ( mplapackint m, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpf_class * s, mpf_class rcond, mplapackint * rank, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * info );
void Rgelsy ( mplapackint m, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mplapackint *jpvt, mpf_class rcond, mplapackint *rank, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgelsy ( mplapackint m, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mplapackint * jpvt, mpf_class rcond, mplapackint * rank, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * info );
void Rgeqlf ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgeqlf ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rgeqpf ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *jpvt, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cgeqpf ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *jpvt, mpc_class * tau, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rgeqp3 ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *jpvt, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgeqp3 ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *jpvt, mpc_class * tau, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint *info );
void Rgeqrf ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgeqrf ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rgerfs ( const char *trans, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * af, mplapackint ldaf, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cgerfs ( const char *trans, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * af, mplapackint ldaf, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rgerqf ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgerqf ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rgesdd ( const char *jobz, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * s, mpf_class * u, mplapackint ldu, mpf_class * vt, mplapackint ldvt, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Cgesdd ( const char *jobz, mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * s, mpc_class * u, mplapackint ldu, mpc_class * vt, mplapackint ldvt, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * iwork, mplapackint * info );
void Rgesvd ( const char *jobu, const char *jobvt, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * s, mpf_class * u, mplapackint ldu, mpf_class * vt, mplapackint ldvt, mpf_class * work, mplapackint lwork, mplapackint * info );
void Cgesvd ( const char *jobu, const char *jobvt, mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * s, mpc_class * u, mplapackint ldu, mpc_class * vt, mplapackint ldvt, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * info );
void Rgesvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * af, mplapackint ldaf, mplapackint * ipiv, char *equed, mpf_class * r, mpf_class * c, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint * iwork, mplapackint * info );
void Cgesvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * af, mplapackint ldaf, mplapackint * ipiv, char *equed, mpf_class * r, mpf_class * c, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint * info );
void Rggbak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * lscale, mpf_class * rscale, mplapackint m, mpf_class * v, mplapackint ldv, mplapackint *info );
void Cggbak ( const char *job, const char *side, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * lscale, mpf_class * rscale, mplapackint m, mpc_class * v, mplapackint ldv, mplapackint *info );
void Rggbal ( const char *job, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mplapackint *ilo, mplapackint *ihi, mpf_class * lscale, mpf_class * rscale, mpf_class * work, mplapackint *info );
void Cggbal ( const char *job, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mplapackint *ilo, mplapackint *ihi, mpf_class * lscale, mpf_class * rscale, mpf_class * work, mplapackint *info );
void Rgges ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mplapackint * sdim, mpf_class * alphar, mpf_class * alphai, mpf_class * beta, mpf_class * vsl, mplapackint ldvsl, mpf_class * vsr, mplapackint ldvsr, mpf_class * work, mplapackint lwork, mplapacklogical * bwork, mplapackint * info );
void Cgges ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mplapackint * sdim, mpc_class * alpha, mpc_class * beta, mpc_class * vsl, mplapackint ldvsl, mpc_class * vsr, mplapackint ldvsr, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapacklogical * bwork, mplapackint * info );
void Rgegs ( const char *jobvsl, const char *jobvsr, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * alphar, mpf_class * alphai, mpf_class * beta, mpf_class * vsl, mplapackint ldvsl, mpf_class * vsr, mplapackint ldvsr, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgegs ( const char *jobvsl, const char *jobvsr, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * alpha, mpc_class * beta, mpc_class * vsl, mplapackint ldvsl, mpc_class * vsr, mplapackint ldvsr, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * info );
void Rggesx ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, const char *sense, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mplapackint * sdim, mpf_class * alphar, mpf_class * alphai, mpf_class * beta, mpf_class * vsl, mplapackint ldvsl, mpf_class * vsr, mplapackint ldvsr, mpf_class * rconde, mpf_class * rcondv, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Cggesx ( const char *jobvsl, const char *jobvsr, const char *sort, LFP selctg, const char *sense, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mplapackint * sdim, mpc_class * alpha, mpc_class * beta, mpc_class * vsl, mplapackint ldvsl, mpc_class * vsr, mplapackint ldvsr, mpf_class * rconde, mpf_class * rcondv, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * iwork, mplapackint liwork, mplapacklogical * bwork, mplapackint * info );
void Rggev ( const char *jobvl, const char *jobvr, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * b, mplapackint ldb, mpf_class * alphar, mpf_class * alphai, mpf_class * beta, mpf_class * vl, mplapackint ldvl, mpf_class * vr, mplapackint ldvr, mpf_class * work, mplapackint lwork, mplapackint * info );
void Cggev ( const char *jobvl, const char *jobvr, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * alpha, mpc_class * beta, mpc_class * vl, mplapackint ldvl, mpc_class * vr, mplapackint ldvr, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * info );
void Rgegv ( const char *jobvl, const char *jobvr, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * alphar, mpf_class * alphai, mpf_class * beta, mpf_class * vl, mplapackint ldvl, mpf_class * vr, mplapackint ldvr, mpf_class * work, mplapackint lwork, mplapackint * info );
void Cgegv ( const char *jobvl, const char *jobvr, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * alpha, mpc_class * beta, mpc_class * vl, mplapackint ldvl, mpc_class * vr, mplapackint ldvr, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * info );
void Rggevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * alphar, mpf_class * alphai, mpf_class * beta, mpf_class * vl, mplapackint ldvl, mpf_class * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, mpf_class * lscale, mpf_class * rscale, mpf_class * abnrm, mpf_class * bbnrm, mpf_class * rconde, mpf_class * rcondv, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapacklogical * bwork, mplapackint * info );
void Cggevx ( const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * alpha, mpc_class * beta, mpc_class * vl, mplapackint ldvl, mpc_class * vr, mplapackint ldvr, mplapackint * ilo, mplapackint * ihi, mpf_class * lscale, mpf_class * rscale, mpf_class * abnrm, mpf_class * bbnrm, mpf_class * rconde, mpf_class * rcondv, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint * iwork, mplapacklogical * bwork, mplapackint * info );
void Rggglm ( mplapackint n, mplapackint m, mplapackint p, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * d, mpf_class * x, mpf_class * y, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cggglm ( mplapackint n, mplapackint m, mplapackint p, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * d, mpc_class * x, mpc_class * y, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rgghrd ( const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * q, mplapackint ldq, mpf_class * z, mplapackint ldz, mplapackint *info );
void Cgghrd ( const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * q, mplapackint ldq, mpc_class * z, mplapackint ldz, mplapackint *info );
void Rgglse ( mplapackint m, mplapackint n, mplapackint p, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * c, mpf_class * d, mpf_class * x, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cgglse ( mplapackint m, mplapackint n, mplapackint p, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * c, mpc_class * d, mpc_class * x, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rggqrf ( mplapackint n, mplapackint m, mplapackint p, mpf_class * A, mplapackint lda, mpf_class * taua, mpf_class * B, mplapackint ldb, mpf_class * taub, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cggqrf ( mplapackint n, mplapackint m, mplapackint p, mpc_class * A, mplapackint lda, mpc_class * taua, mpc_class * B, mplapackint ldb, mpc_class * taub, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rggrqf ( mplapackint m, mplapackint p, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * taua, mpf_class * B, mplapackint ldb, mpf_class * taub, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cggrqf ( mplapackint m, mplapackint p, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * taua, mpc_class * B, mplapackint ldb, mpc_class * taub, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rggsvd ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint n, mplapackint p, mplapackint *k, mplapackint *l, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * alpha, mpf_class * beta, mpf_class * u, mplapackint ldu, mpf_class * v, mplapackint ldv, mpf_class * q, mplapackint ldq, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cggsvd ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint n, mplapackint p, mplapackint *k, mplapackint *l, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpf_class * alpha, mpf_class * beta, mpc_class * u, mplapackint ldu, mpc_class * v, mplapackint ldv, mpc_class * q, mplapackint ldq, mpc_class * work, mpf_class * rwork, mplapackint *iwork, mplapackint *info );
void Rggsvp ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class tola, mpf_class tolb, mplapackint *k, mplapackint *l, mpf_class * u, mplapackint ldu, mpf_class * v, mplapackint ldv, mpf_class * q, mplapackint ldq, mplapackint *iwork, mpf_class * tau, mpf_class * work, mplapackint *info );
void Cggsvp ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpf_class tola, mpf_class tolb, mplapackint *k, mplapackint *l, mpc_class * u, mplapackint ldu, mpc_class * v, mplapackint ldv, mpc_class * q, mplapackint ldq, mplapackint *iwork, mpf_class * rwork, mpc_class * tau, mpc_class * work, mplapackint *info );
void Rgtcon ( const char *norm, mplapackint n, mpf_class * dl, mpf_class * d, mpf_class * du, mpf_class * du2, mplapackint *ipiv, mpf_class anorm, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cgtcon ( const char *norm, mplapackint n, mpc_class * dl, mpc_class * d, mpc_class * du, mpc_class * du2, mplapackint *ipiv, mpf_class anorm, mpf_class * rcond, mpc_class * work, mplapackint *info );
void Rgtrfs ( const char *trans, mplapackint n, mplapackint nrhs, mpf_class * dl, mpf_class * d, mpf_class * du, mpf_class * dlf, mpf_class * df, mpf_class * duf, mpf_class * du2, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cgtrfs ( const char *trans, mplapackint n, mplapackint nrhs, mpc_class * dl, mpc_class * d, mpc_class * du, mpc_class * dlf, mpc_class * df, mpc_class * duf, mpc_class * du2, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rgtsv ( mplapackint n, mplapackint nrhs, mpf_class * dl, mpf_class * d, mpf_class * du, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cgtsv ( mplapackint n, mplapackint nrhs, mpc_class * dl, mpc_class * d, mpc_class * du, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rgtsvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, mpf_class * dl, mpf_class * d, mpf_class * du, mpf_class * dlf, mpf_class * df, mpf_class * duf, mpf_class * du2, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cgtsvx ( const char *fact, const char *trans, mplapackint n, mplapackint nrhs, mpc_class * dl, mpc_class * d, mpc_class * du, mpc_class * dlf, mpc_class * df, mpc_class * duf, mpc_class * du2, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rgttrf ( mplapackint n, mpf_class * dl, mpf_class * d, mpf_class * du, mpf_class * du2, mplapackint *ipiv, mplapackint *info );
void Cgttrf ( mplapackint n, mpc_class * dl, mpc_class * d, mpc_class * du, mpc_class * du2, mplapackint *ipiv, mplapackint *info );
void Rgttrs ( const char *trans, mplapackint n, mplapackint nrhs, mpf_class * dl, mpf_class * d, mpf_class * du, mpf_class * du2, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cgttrs ( const char *trans, mplapackint n, mplapackint nrhs, mpc_class * dl, mpc_class * d, mpc_class * du, mpc_class * du2, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rhgeqz ( const char *job, const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * h, mplapackint ldh, mpf_class * t, mplapackint ldt, mpf_class * alphar, mpf_class * alphai, mpf_class * beta, mpf_class * q, mplapackint ldq, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *info );
void Chgeqz ( const char *job, const char *compq, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpc_class * h, mplapackint ldh, mpc_class * t, mplapackint ldt, mpc_class * alpha, mpc_class * beta, mpc_class * q, mplapackint ldq, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint *info );
void Rhsein ( const char *side, const char *eigsrc, const char *initv, mplapacklogical *select, mplapackint n, mpf_class * h, mplapackint ldh, mpf_class * wr, mpf_class * wi, mpf_class * vl, mplapackint ldvl, mpf_class * vr, mplapackint ldvr, mplapackint mm, mplapackint m, mpf_class * work, mplapackint *ifaill, mplapackint *ifailr, mplapackint *info );
void Chsein ( const char *side, const char *eigsrc, const char *initv, mplapacklogical * select, mplapackint n, mpc_class * h, mplapackint ldh, mpc_class * w, mpc_class * vl, mplapackint ldvl, mpc_class * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, mpc_class * work, mpf_class * rwork, mplapackint *ifaill, mplapackint *ifailr, mplapackint *info );
void Rhseqr ( const char *job, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * h, mplapackint ldh, mpf_class * wr, mpf_class * wi, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *info );
void Chseqr ( const char *job, const char *compz, mplapackint n, mplapackint ilo, mplapackint ihi, mpc_class * h, mplapackint ldh, mpc_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mplapackint *info );
void Ropgtr ( const char *uplo, mplapackint n, mpf_class * ap, mpf_class * tau, mpf_class * q, mplapackint ldq, mpf_class * work, mplapackint *info );
void Cupgtr ( const char *uplo, mplapackint n, mpc_class * ap, mpc_class * tau, mpc_class * q, mplapackint ldq, mpc_class * work, mplapackint *info );
void Ropmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, mpf_class * ap, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint *info );
void Cupmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, mpc_class * ap, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint *info );
void Rorgbr ( const char *vect, mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cungbr ( const char *vect, mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rorghr ( mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cunghr ( mplapackint n, mplapackint ilo, mplapackint ihi, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rorglq ( mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cunglq ( mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rorgrq ( mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cungrq ( mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rormbr ( const char *vect, const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cunmbr ( const char *vect, const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rormhr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint ilo, mplapackint ihi, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cunmhr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint ilo, mplapackint ihi, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rormlq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cunmlq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rormql ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cunmql ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rormqr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cunmqr ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rormrq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cunmrq ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rormrz ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cunmrz ( const char *side, const char *trans, mplapackint m, mplapackint n, mplapackint k, mplapackint l, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rormtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * c, mplapackint ldc, mpf_class * work, mplapackint lwork, mplapackint *info );
void Cunmtr ( const char *side, const char *uplo, const char *trans, mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * c, mplapackint ldc, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rpbcon ( const char *uplo, mplapackint n, mplapackint kd, mpf_class * AB, mplapackint ldab, mpf_class anorm, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cpbcon ( const char *uplo, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mpf_class anorm, mpf_class * rcond, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rpbequ ( const char *uplo, mplapackint n, mplapackint kd, mpf_class * ab, mplapackint ldab, mpf_class * s, mpf_class * scond, mpf_class * amax, mplapackint *info );
void Cpbequ ( const char *uplo, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mpf_class * s, mpf_class * scond, mpf_class * amax, mplapackint *info );
void Rpbrfs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpf_class * AB, mplapackint ldab, mpf_class * afb, mplapackint ldafb, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cpbrfs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpc_class * AB, mplapackint ldab, mpc_class * afb, mplapackint ldafb, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rpbstf ( const char *uplo, mplapackint n, mplapackint kd, mpf_class * AB, mplapackint ldab, mplapackint *info );
void Cpbstf ( const char *uplo, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mplapackint *info );
void Rpbsv ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpf_class * AB, mplapackint ldab, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cpbsv ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpc_class * ab, mplapackint ldab, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rpbsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpf_class * AB, mplapackint ldab, mpf_class * afb, mplapackint ldafb, char *equed, mpf_class * s, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint * iwork, mplapackint * info );
void Cpbsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpc_class * AB, mplapackint ldab, mpc_class * afb, mplapackint ldafb, char *equed, mpf_class * s, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint * info );
void Rpbtrf ( const char *uplo, mplapackint n, mplapackint kd, mpf_class * AB, mplapackint ldab, mplapackint *info );
void Cpbtrf ( const char *uplo, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mplapackint *info );
void Rpbtrs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpf_class * ab, mplapackint ldab, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cpbtrs ( const char *uplo, mplapackint n, mplapackint kd, mplapackint nrhs, mpc_class * AB, mplapackint ldab, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rpocon ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class anorm, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cpocon ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class anorm, mpf_class * rcond, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rpoequ ( mplapackint n, mpf_class * A, mplapackint lda, mpf_class * s, mpf_class * scond, mpf_class * amax, mplapackint *info );
void Cpoequ ( mplapackint n, mpc_class * A, mplapackint lda, mpf_class * s, mpf_class * scond, mpf_class * amax, mplapackint *info );
void Rporfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * af, mplapackint ldaf, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cporfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * af, mplapackint ldaf, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rposv ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cposv ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rposvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * af, mplapackint ldaf, char *equed, mpf_class * s, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint * iwork, mplapackint * info );
void Cposvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * af, mplapackint ldaf, char *equed, mpf_class * s, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint * info );
void Rpotri ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *info );
void Cpotri ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *info );
void Rpotrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cpotrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rppcon ( const char *uplo, mplapackint n, mpf_class * ap, mpf_class anorm, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cppcon ( const char *uplo, mplapackint n, mpc_class * ap, mpf_class * anorm, mpf_class * rcond, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rppequ ( const char *uplo, mplapackint n, mpf_class * ap, mpf_class * s, mpf_class * scond, mpf_class * amax, mplapackint *info );
void Cppequ ( const char *uplo, mplapackint n, mpc_class * ap, mpf_class * s, mpf_class * scond, mpf_class * amax, mplapackint *info );
void Rpptrf ( const char *uplo, mplapackint n, mpf_class * ap, mplapackint *info );
void Cpptrf ( const char *uplo, mplapackint n, mpc_class * ap, mplapackint *info );
void Rpptri ( const char *uplo, mplapackint n, mpf_class * ap, mplapackint *info );
void Cpptri ( const char *uplo, mplapackint n, mpc_class * ap, mplapackint *info );
void Rpptrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * ap, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cpptrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rpprfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * ap, mpf_class * afp, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cpprfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mpc_class * afp, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rppsv ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * ap, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cppsv ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rppsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * ap, mpf_class * afp, char *equed, mpf_class * s, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cppsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mpc_class * afp, char *equed, mpf_class * s, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint * info );
void Rptcon ( mplapackint n, mpf_class * d, mpf_class * e, mpf_class anorm, mpf_class * rcond, mpf_class * work, mplapackint *info );
void Cptcon ( mplapackint n, mpf_class * d, mpc_class * e, mpf_class anorm, mpf_class * rcond, mpf_class * rwork, mplapackint *info );
void Rpteqr ( const char *compz, mplapackint n, mpf_class * d, mpf_class * e, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint * info );
void Cpteqr ( const char *compz, mplapackint n, mpf_class * d, mpf_class * e, mpc_class * z, mplapackint ldz, mpf_class * work, mplapackint *info );
void Rptrfs ( mplapackint n, mplapackint nrhs, mpf_class * d, mpf_class * e, mpf_class * df, mpf_class * ef, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *info );
void Cptrfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * d, mpc_class * e, mpf_class * df, mpc_class * ef, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rptsv ( mplapackint n, mplapackint nrhs, mpf_class * d, mpf_class * e, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cptsv ( mplapackint n, mplapackint nrhs, mpf_class * d, mpc_class * e, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rptsvx ( const char *fact, mplapackint n, mplapackint nrhs, mpf_class * d, mpf_class * e, mpf_class * df, mpf_class * ef, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *info );
void Cptsvx ( const char *fact, mplapackint n, mplapackint nrhs, mpf_class * d, mpc_class * e, mpf_class * df, mpc_class * ef, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rpttrf ( mplapackint n, mpf_class * d, mpf_class * e, mplapackint *info );
void Cpttrf ( mplapackint n, mpf_class * d, mpc_class * e, mplapackint *info );
void Rpttrs ( mplapackint n, mplapackint nrhs, mpf_class * d, mpf_class * e, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cpttrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * d, mpc_class * e, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rsbev ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, mpf_class * AB, mplapackint ldab, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *info );
void Chbev ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rsbevd ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, mpf_class * AB, mplapackint ldab, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chbevd ( const char *jobz, const char *uplo, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsbevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint kd, mpf_class * AB, mplapackint ldab, mpf_class * q, mplapackint ldq, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint * m, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chbevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mpc_class * q, mplapackint ldq, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint * m, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mpf_class * rwork, mplapackint * iwork, mplapackint * ifail, mplapackint * info );
void Rsbgst ( const char *vect, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpf_class * AB, mplapackint ldab, mpf_class * bb, mplapackint ldbb, mpf_class * x, mplapackint ldx, mpf_class * work, mplapackint *info );
void Chbgst ( const char *vect, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpc_class * AB, mplapackint ldab, mpc_class * bb, mplapackint ldbb, mpc_class * x, mplapackint ldx, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rsbgv ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpf_class * AB, mplapackint ldab, mpf_class * bb, mplapackint ldbb, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *info );
void Chbgv ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpc_class * AB, mplapackint ldab, mpc_class * bb, mplapackint ldbb, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rsbgvd ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpf_class * AB, mplapackint ldab, mpf_class * BB, mplapackint ldbb, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chbgvd ( const char *jobz, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpc_class * AB, mplapackint ldab, mpc_class * BB, mplapackint ldbb, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsbgvx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpf_class * AB, mplapackint ldab, mpf_class * BB, mplapackint ldbb, mpf_class * q, mplapackint ldq, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint *m, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chbgvx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mplapackint ka, mplapackint kb, mpc_class * ab, mplapackint ldab, mpc_class * bb, mplapackint ldbb, mpc_class * q, mplapackint ldq, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint *m, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mpf_class * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsbtrd ( const char *vect, const char *uplo, mplapackint n, mplapackint kd, mpf_class * AB, mplapackint ldab, mpf_class * d, mpf_class * e, mpf_class * q, mplapackint ldq, mpf_class * work, mplapackint *info );
void Chbtrd ( const char *vect, const char *uplo, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mpf_class * d, mpf_class * e, mpc_class * q, mplapackint ldq, mpc_class * work, mplapackint *info );
void Rspcon ( const char *uplo, mplapackint n, mpf_class * ap, mplapackint *ipiv, mpf_class anorm, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cspcon ( const char *uplo, mplapackint n, mpc_class * ap, mplapackint *ipiv, mpf_class anorm, mpf_class * rcond, mpc_class * work, mplapackint *info );
void Chpcon ( const char *uplo, mplapackint n, mpc_class * ap, mplapackint *ipiv, mpf_class anorm, mpf_class * rcond, mpc_class * work, mplapackint *info );
void Rspev ( const char *jobz, const char *uplo, mplapackint n, mpf_class * ap, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *info );
void Chpev ( const char *jobz, const char *uplo, mplapackint n, mpc_class * ap, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rspevd ( const char *jobz, const char *uplo, mplapackint n, mpf_class * ap, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chpevd ( const char *jobz, const char *uplo, mplapackint n, mpc_class * ap, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rspevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpf_class * ap, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint *m, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chpevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpc_class * ap, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint * m, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mpf_class * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rspgst ( mplapackint itype, const char *uplo, mplapackint n, mpf_class * ap, mpf_class * bp, mplapackint *info );
void Chpgst ( mplapackint *itype, const char *uplo, mplapackint n, mpc_class * ap, mpc_class * bp, mplapackint *info );
void Rspgv ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpf_class * ap, mpf_class * bp, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *info );
void Chpgv ( mplapackint *itype, const char *jobz, const char *uplo, mplapackint n, mpc_class * ap, mpc_class * bp, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rspgvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpf_class * ap, mpf_class * bp, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chpgvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpc_class * ap, mpc_class * bp, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rspgvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, mpf_class * ap, mpf_class * bp, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint m, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chpgvx ( mplapackint itype, const char *jobz, char *range, const char *uplo, mplapackint n, mpc_class * ap, mpc_class * bp, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint *m, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mpf_class * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsprfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * ap, mpf_class * afp, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Csprfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mpc_class * afp, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Chprfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mpc_class * afp, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rspsv ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * ap, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mplapackint *info );
void Cspsv ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mplapackint *info );
void Chpsv ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rspsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * ap, mpf_class * afp, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Cspsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mpc_class * afp, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Chpsvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mpc_class * afp, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rsptrd ( const char *uplo, mplapackint n, mpf_class * ap, mpf_class * d, mpf_class * e, mpf_class * tau, mplapackint *info );
void Chptrd ( const char *uplo, mplapackint n, mpc_class * ap, mpf_class * d, mpf_class * e, mpc_class * tau, mplapackint *info );
void Rsptrf ( const char *uplo, mplapackint n, mpf_class * ap, mplapackint *ipiv, mplapackint *info );
void Csptrf ( const char *uplo, mplapackint n, mpc_class * ap, mplapackint *ipiv, mplapackint *info );
void Chptrf ( const char *uplo, mplapackint n, mpc_class * ap, mplapackint *ipiv, mplapackint *info );
void Rsptri ( const char *uplo, mplapackint n, mpf_class * ap, mplapackint *ipiv, mpf_class * work, mplapackint *info );
void Csptri ( const char *uplo, mplapackint n, mpc_class * ap, mplapackint *ipiv, mpc_class * work, mplapackint *info );
void Chptri ( const char *uplo, mplapackint n, mpc_class * ap, mplapackint *ipiv, mpc_class * work, mplapackint *info );
void Rsptrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * ap, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mplapackint *info );
void Csptrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mplapackint *info );
void Chptrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * ap, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rstebz ( const char *range, const char *order, mplapackint n, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mpf_class * d, mpf_class * e, mplapackint * m, mplapackint * nsplit, mpf_class * w, mplapackint *iblock, mplapackint *isplit, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Rstedc ( const char *compz, mplapackint n, mpf_class * d, mpf_class * e, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Cstedc ( const char *compz, mplapackint n, mpf_class * d, mpf_class * e, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstegr ( const char *jobz, const char *range, mplapackint n, mpf_class * d, mpf_class * e, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint * m, mpf_class * w, mpf_class * z, mplapackint ldz, mplapackint * isuppz, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cstegr ( const char *jobz, const char *range, mplapackint n, mpf_class *d, mpf_class * e, mpf_class * vl, mpf_class * vu, mplapackint *il, mplapackint *iu, mpf_class * abstol, mplapackint m, mpf_class * w, mpc_class * z, mplapackint ldz, mplapackint *isuppz, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstein ( mplapackint n, mpf_class * d, mpf_class * e, mplapackint m, mpf_class * w, mplapackint *iblock, mplapackint *isplit, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Cstein ( mplapackint n, mpf_class * d, mpf_class * e, mplapackint m, mpf_class * w, mplapackint *iblock, mplapackint *isplit, mpc_class * z, mplapackint ldz, mpf_class * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rstev ( const char *jobz, mplapackint n, mpf_class * d, mpf_class * e, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *info );
void Rstevd ( const char *jobz, mplapackint n, mpf_class * d, mpf_class * e, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rstevr ( const char *jobz, const char *range, mplapackint n, mpf_class * d, mpf_class * e, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint * m, mpf_class * w, mpf_class * z, mplapackint ldz, mplapackint * isuppz, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rstevx ( const char *jobz, const char *range, mplapackint n, mpf_class * d, mpf_class * e, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint *m, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rstemr ( const char *jobz, const char *range, mplapackint n, mpf_class * d, mpf_class * e, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mplapackint * m, mpf_class * w, mpf_class * z, mplapackint ldz, mplapackint nzc, mplapackint * isuppz, mplapacklogical * tryrac, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cstemr ( const char *jobz, const char *range, mplapackint n, mpf_class * d, mpf_class * e, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mplapackint * m, mpf_class * w, mpc_class * z, mplapackint ldz, mplapackint nzc, mplapackint *isuppz, mplapacklogical * tryrac, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsycon ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *ipiv, mpf_class anorm, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Csycon ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpf_class anorm, mpf_class * rcond, mpc_class * work, mplapackint *info );
void Checon ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpf_class anorm, mpf_class * rcond, mpc_class * work, mplapackint *info );
void Rsyevd ( const char *jobz, const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * w, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Cheevd ( const char *jobz, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * w, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsyevr ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint * m, mpf_class * w, mpf_class * z, mplapackint ldz, mplapackint * isuppz, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Cheevr ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint * m, mpf_class * w, mpc_class * z, mplapackint ldz, mplapackint * isuppz, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint lrwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rsyevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint *m, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Cheevx ( const char *jobz, const char *range, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint *m, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsygst ( mplapackint itype, const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mplapackint *info );
void Chegst ( mplapackint itype, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rsygv ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * w, mpf_class * work, mplapackint lwork, mplapackint *info );
void Chegv ( mplapackint *itype, const char *jobz, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpf_class * w, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint *info );
void Rsygvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * w, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Chegvd ( mplapackint itype, const char *jobz, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpf_class * w, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint lrwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Rsygvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint *m, mpf_class * w, mpf_class * z, mplapackint ldz, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Chegvx ( mplapackint itype, const char *jobz, const char *range, const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpf_class vl, mpf_class vu, mplapackint il, mplapackint iu, mpf_class abstol, mplapackint * m, mpf_class * w, mpc_class * z, mplapackint ldz, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint *iwork, mplapackint *ifail, mplapackint *info );
void Rsyrfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * af, mplapackint ldaf, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Csyrfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * af, mplapackint ldaf, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Cherfs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * af, mplapackint ldaf, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rsysv ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mpf_class * work, mplapackint lwork, mplapackint *info );
void Csysv ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * work, mplapackint lwork, mplapackint *info );
void Chesv ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rsysvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * af, mplapackint ldaf, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint *info );
void Csysvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * af, mplapackint ldaf, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint *info );
void Chesvx ( const char *fact, const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * af, mplapackint ldaf, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * rcond, mpf_class * ferr, mpf_class * berr, mpc_class * work, mplapackint lwork, mpf_class * rwork, mplapackint *info );
void Rsytrf ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *ipiv, mpf_class * work, mplapackint lwork, mplapackint *info );
void Csytrf ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * work, mplapackint lwork, mplapackint *info );
void Chetrf ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rsytri ( const char *uplo, mplapackint n, mpf_class * A, mplapackint lda, mplapackint *ipiv, mpf_class * work, mplapackint *info );
void Csytri ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * work, mplapackint *info );
void Chetri ( const char *uplo, mplapackint n, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * work, mplapackint *info );
void Rsytrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mplapackint *ipiv, mpf_class * B, mplapackint ldb, mplapackint *info );
void Csytrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mplapackint *info );
void Chetrs ( const char *uplo, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mplapackint *ipiv, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rtbcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint kd, mpf_class * AB, mplapackint ldab, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Ctbcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mplapackint kd, mpc_class * AB, mplapackint ldab, mpf_class * rcond, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rtbrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, mpf_class * AB, mplapackint ldab, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Ctbrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, mpc_class * AB, mplapackint ldab, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint * info );
void Rtbtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, mpf_class * ab, mplapackint ldab, mpf_class * B, mplapackint ldb, mplapackint *info );
void Ctbtrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint kd, mplapackint nrhs, mpc_class * ab, mplapackint ldab, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rtgevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, mpf_class * s, mplapackint lds, mpf_class *p, mplapackint ldp, mpf_class * vl, mplapackint ldvl, mpf_class * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, mpf_class * work, mplapackint * info );
void Ctgevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, mpc_class * s, mplapackint lds, mpc_class * p, mplapackint ldp, mpc_class * vl, mplapackint ldvl, mpc_class * vr, mplapackint ldvr, mplapackint mm, mplapackint * m, mpc_class * work, mpf_class * rwork, mplapackint * info );
void Rtgexc ( mplapacklogical wantq, mplapacklogical wantz, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * q, mplapackint ldq, mpf_class * z, mplapackint ldz, mplapackint * ifst, mplapackint * ilst, mpf_class * work, mplapackint lwork, mplapackint * info );
void Ctgexc ( mplapacklogical wantq, mplapacklogical wantz, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * q, mplapackint ldq, mpc_class * z, mplapackint ldz, mplapackint ifst, mplapackint *ilst, mplapackint *info );
void Rtgsen ( mplapackint ijob, mplapacklogical wantq, mplapacklogical wantz, mplapacklogical *select, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * alphar, mpf_class * alphai, mpf_class * beta, mpf_class * q, mplapackint ldq, mpf_class * z, mplapackint ldz, mplapackint * m, mpf_class * pl, mpf_class * pr, mpf_class * dif, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Ctgsen ( mplapackint ijob, mplapacklogical wantq, mplapacklogical wantz, mplapacklogical * select, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * alpha, mpc_class * beta, mpc_class * q, mplapackint ldq, mpc_class * z, mplapackint ldz, mplapackint * m, mpf_class * pl, mpf_class * pr, mpf_class * dif, mpc_class * work, mplapackint lwork, mplapackint * iwork, mplapackint liwork, mplapackint * info );
void Rtgsja ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mplapackint k, mplapackint l, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class tola, mpf_class tolb, mpf_class * alpha, mpf_class * beta, mpf_class * u, mplapackint ldu, mpf_class * v, mplapackint ldv, mpf_class * q, mplapackint ldq, mpf_class * work, mplapackint ncycle, mplapackint *info );
void Ctgsja ( const char *jobu, const char *jobv, const char *jobq, mplapackint m, mplapackint p, mplapackint n, mplapackint k, mplapackint l, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpf_class tola, mpf_class tolb, mpf_class * alpha, mpf_class * beta, mpc_class * u, mplapackint ldu, mpc_class * v, mplapackint ldv, mpc_class * q, mplapackint ldq, mpc_class * work, mplapackint * ncycle, mplapackint *info );
void Rtgsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * vl, mplapackint ldvl, mpf_class * vr, mplapackint ldvr, mpf_class * s, mpf_class * dif, mplapackint mm, mplapackint * m, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Ctgsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * vl, mplapackint ldvl, mpc_class * vr, mplapackint ldvr, mpf_class * s, mpf_class * dif, mplapackint mm, mplapackint * m, mpc_class * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Rtgsyl ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * c, mplapackint ldc, mpf_class * d, mplapackint ldd, mpf_class * e, mplapackint lde, mpf_class * f, mplapackint ldf, mpf_class * scale, mpf_class * dif, mpf_class * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Ctgsyl ( const char *trans, mplapackint ijob, mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * c, mplapackint ldc, mpc_class * d, mplapackint ldd, mpc_class * e, mplapackint lde, mpc_class * f, mplapackint ldf, mpf_class * scale, mpf_class * dif, mpc_class * work, mplapackint lwork, mplapackint * iwork, mplapackint * info );
void Rtpcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpf_class * ap, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Ctpcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpc_class * ap, mpf_class * rcond, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rtprfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpf_class * ap, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Ctprfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpc_class * ap, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rtptri ( const char *uplo, const char *diag, mplapackint n, mpf_class * ap, mplapackint *info );
void Ctptri ( const char *uplo, const char *diag, mplapackint n, mpc_class * ap, mplapackint *info );
void Rtptrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpf_class * ap, mpf_class * B, mplapackint ldb, mplapackint *info );
void Ctptrs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpc_class * ap, mpc_class * B, mplapackint ldb, mplapackint *info );
void Rtrcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * rcond, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Ctrcon ( const char *norm, const char *uplo, const char *diag, mplapackint n, mpc_class * A, mplapackint lda, mpf_class * rcond, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rtrevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, mpf_class * t, mplapackint ldt, mpf_class * vl, mplapackint ldvl, mpf_class * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, mpf_class * work, mplapackint *info );
void Ctrevc ( const char *side, const char *howmny, mplapacklogical * select, mplapackint n, mpc_class * t, mplapackint ldt, mpc_class * vl, mplapackint ldvl, mpc_class * vr, mplapackint ldvr, mplapackint mm, mplapackint *m, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rtrexc ( const char *compq, mplapackint n, mpf_class * t, mplapackint ldt, mpf_class * q, mplapackint ldq, mplapackint *ifst, mplapackint *ilst, mpf_class * work, mplapackint *info );
void Ctrexc ( const char *compq, mplapackint n, mpc_class * t, mplapackint ldt, mpc_class * q, mplapackint ldq, mplapackint ifst, mplapackint ilst, mplapackint *info );
void Rtrrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpf_class * work, mplapackint *iwork, mplapackint *info );
void Ctrrfs ( const char *uplo, const char *trans, const char *diag, mplapackint n, mplapackint nrhs, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * x, mplapackint ldx, mpf_class * ferr, mpf_class * berr, mpc_class * work, mpf_class * rwork, mplapackint *info );
void Rtrsen ( const char *job, const char *compq, mplapacklogical * select, mplapackint n, mpf_class * t, mplapackint ldt, mpf_class * q, mplapackint ldq, mpf_class * wr, mpf_class * wi, mplapackint m, mpf_class * s, mpf_class * sep, mpf_class * work, mplapackint lwork, mplapackint *iwork, mplapackint liwork, mplapackint *info );
void Ctrsen ( const char *job, const char *compq, mplapacklogical * select, mplapackint n, mpc_class * t, mplapackint ldt, mpc_class * q, mplapackint ldq, mpc_class * w, mplapackint m, mpf_class * s, mpf_class * sep, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rtrsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, mpf_class * t, mplapackint ldt, mpf_class * vl, mplapackint ldvl, mpf_class * vr, mplapackint ldvr, mpf_class * s, mpf_class * sep, mplapackint mm, mplapackint *m, mpf_class * work, mplapackint ldwork, mplapackint *iwork, mplapackint *info );
void Ctrsna ( const char *job, const char *howmny, mplapacklogical * select, mplapackint n, mpc_class * t, mplapackint ldt, mpc_class * vl, mplapackint ldvl, mpc_class * vr, mplapackint ldvr, mpf_class * s, mpf_class * sep, mplapackint mm, mplapackint *m, mpc_class * work, mplapackint ldwork, mpf_class * rwork, mplapackint *info );
void Rtrsyl ( const char *trana, const char *tranb, mplapackint isgn, mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * B, mplapackint ldb, mpf_class * c, mplapackint ldc, mpf_class * scale, mplapackint *info );
void Ctrsyl ( const char *trana, const char *tranb, mplapackint isgn, mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * B, mplapackint ldb, mpc_class * c, mplapackint ldc, mpf_class * scale, mplapackint *info );
void Rtzrzf ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mpf_class * work, mplapackint lwork, mplapackint *info );
void Ctzrzf ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mpc_class * work, mplapackint lwork, mplapackint *info );
void Rtzrqf ( mplapackint m, mplapackint n, mpf_class * A, mplapackint lda, mpf_class * tau, mplapackint *info );
void Ctzrqf ( mplapackint m, mplapackint n, mpc_class * A, mplapackint lda, mpc_class * tau, mplapackint *info );

#endif
