/*
 * Copyright (c) 2008-2021
 *	Nakata, Maho
 * 	All rights reserved.
 *
 * $Id: mplapack_gmp.h,v 1.34 2010/08/07 03:15:46 nakatamaho Exp $
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _MPLAPACK_GMP_H_
#define _MPLAPACK_GMP_H_

#include "mplapack_config.h"
#include "gmpxx.h"
#include "mpc_class.h"

bool Risnan(mpf_class const din);
bool Rlaisnan(mpf_class const din1, mpf_class const din2);
mpc_class Cladiv(mpc_class const x, mpc_class const y);
mpf_class Clangb(const char *norm, mplapackint const n, mplapackint const kl, mplapackint const ku, mpc_class *ab, mplapackint const ldab, mpf_class *work);
mpf_class Clange(const char *norm, mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *work);
mpf_class Clangt(const char *norm, mplapackint const n, mpc_class *dl, mpc_class *d, mpc_class *du);
mpf_class Clanhb(const char *norm, const char *uplo, mplapackint const n, mplapackint const k, mpc_class *ab, mplapackint const ldab, mpf_class *work);
mpf_class Clanhe(const char *norm, const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *work);
mpf_class Clanhp(const char *norm, const char *uplo, mplapackint const n, mpc_class *ap, mpf_class *work);
mpf_class Clanht(const char *norm, mplapackint const n, mpf_class *d, mpc_class *e);
mpf_class Clansb(const char *norm, const char *uplo, mplapackint const n, mplapackint const k, mpc_class *ab, mplapackint const ldab, mpf_class *work);
mpf_class Clansp(const char *norm, const char *uplo, mplapackint const n, mpc_class *ap, mpf_class *work);
mpf_class Clansy(const char *norm, const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *work);
mpf_class RCsum1(mplapackint const n, mpc_class *cx, mplapackint const incx);
mpf_class Rla_gbrpvgrw(mplapackint const n, mplapackint const kl, mplapackint const ku, mplapackint const ncols, mpf_class *ab, mplapackint const ldab, mpf_class *afb, mplapackint const ldafb);
mpf_class Rla_gerpvgrw(mplapackint const n, mplapackint const ncols, mpf_class *a, mplapackint const lda, mpf_class *af, mplapackint const ldaf);
mpf_class Rladiv2(mpf_class const &a, mpf_class const &b, mpf_class const &c, mpf_class const &d, mpf_class const &r, mpf_class const &t);
mpf_class Rlamc3(mpf_class a, mpf_class b);
mpf_class Rlamch_gmp(const char *cmach);
mpf_class Rlangb(const char *norm, mplapackint const n, mplapackint const kl, mplapackint const ku, mpf_class *ab, mplapackint const ldab, mpf_class *work);
mpf_class Rlange(const char *norm, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *work);
mpf_class Rlangt(const char *norm, mplapackint const n, mpf_class *dl, mpf_class *d, mpf_class *du);
mpf_class Rlanhs(const char *norm, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *work);
mpf_class Rlansb(const char *norm, const char *uplo, mplapackint const n, mplapackint const k, mpf_class *ab, mplapackint const ldab, mpf_class *work);
mpf_class Rlansp(const char *norm, const char *uplo, mplapackint const n, mpf_class *ap, mpf_class *work);
mpf_class Rlanst(const char *norm, mplapackint const n, mpf_class *d, mpf_class *e);
mpf_class Rlansy(const char *norm, const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *work);
mpf_class Rlantb(const char *norm, const char *uplo, const char *diag, mplapackint const n, mplapackint const k, mpf_class *ab, mplapackint const ldab, mpf_class *work);
mpf_class Rlantr(const char *norm, const char *uplo, const char *diag, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *work);
mpf_class Rlapy2(mpf_class const x, mpf_class const y);
mpf_class Rlapy3(mpf_class const x, mpf_class const y, mpf_class const z);
mplapackint Rlaneg(mplapackint const n, mpf_class *d, mpf_class *lld, mpf_class const sigma, mpf_class const, mplapackint const r);
mplapackint iCmax1(mplapackint const n, mpc_class *zx, mplapackint const incx);
mplapackint iMieeeck_gmp(mplapackint const &ispec, mpf_class const &zero, mpf_class const &one);
mplapackint iMladiag(const char *diag);
mplapackint iMladlc(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda);
mplapackint iMladlr(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda);
mplapackint iMlaenv_gmp(mplapackint ispec, const char *name, const char *opts, mplapackint n1, mplapackint n2, mplapackint n3, mplapackint n4);
mplapackint iMlaprec(const char *prec);
mplapackint iMlatrans(const char *trans);
mplapackint iMlauplo(const char *uplo);
mplapackint iMlazlc(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda);
mplapackint iMlazlr(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda);
mplapackint iMparmq_gmp(mplapackint const ispec, const char *name, const char *opts, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mplapackint const lwork);
void CRrscl(mplapackint const n, mpf_class const sa, mpc_class *sx, mplapackint const incx);
void Cbdsqr(const char *uplo, mplapackint const n, mplapackint const ncvt, mplapackint const nru, mplapackint const ncc, mpf_class *d, mpf_class *e, mpc_class *vt, mplapackint const ldvt, mpc_class *u, mplapackint const ldu, mpc_class *c, mplapackint const ldc, mpf_class *rwork, mplapackint &info);
void Cgbsv(mplapackint const n, mplapackint const kl, mplapackint const ku, mplapackint const nrhs, mpc_class *ab, mplapackint const ldab, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cgbtf2(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, mpc_class *ab, mplapackint const ldab, mplapackint *ipiv, mplapackint &info);
void Cgbtrf(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, mpc_class *ab, mplapackint const ldab, mplapackint *ipiv, mplapackint &info);
void Cgbtrs(const char *trans, mplapackint const n, mplapackint const kl, mplapackint const ku, mplapackint const nrhs, mpc_class *ab, mplapackint const ldab, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cgebak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *scale, mplapackint const m, mpc_class *v, mplapackint const ldv, mplapackint &info);
void Cgebal(const char *job, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &ilo, mplapackint &ihi, mpf_class *scale, mplapackint &info);
void Cgebd2(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *d, mpf_class *e, mpc_class *tauq, mpc_class *taup, mpc_class *work, mplapackint &info);
void Cgebrd(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *d, mpf_class *e, mpc_class *tauq, mpc_class *taup, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cgees(const char *jobvs, const char *sort, bool (*select)(mpc_class), mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &sdim, mpc_class *w, mpc_class *vs, mplapackint const ldvs, mpc_class *work, mplapackint const lwork, mpf_class *rwork, bool *bwork, mplapackint &info);
void Cgeev(const char *jobvl, const char *jobvr, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *w, mpc_class *vl, mplapackint const ldvl, mpc_class *vr, mplapackint const ldvr, mpc_class *work, mplapackint const lwork, mpf_class *rwork, mplapackint &info);
void Cgehd2(mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint &info);
void Cgehrd(mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cgelq(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const tsize, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cgelq2(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint &info);
void Cgelqf(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cgelqt(mplapackint const m, mplapackint const n, mplapackint const mb, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const ldt, mpc_class *work, mplapackint &info);
void Cgelqt3(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const ldt, mplapackint &info);
void Cgemlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const mb, mpc_class *v, mplapackint const ldv, mpc_class *t, mplapackint const ldt, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint &info);
void Cgemqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const nb, mpc_class *v, mplapackint const ldv, mpc_class *t, mplapackint const ldt, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint &info);
void Cgeql2(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint &info);
void Cgeqlf(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cgeqr(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const tsize, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cgeqr2(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint &info);
void Cgeqr2p(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint &info);
void Cgeqrf(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cgeqrfp(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cgeqrt(mplapackint const m, mplapackint const n, mplapackint const nb, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const ldt, mpc_class *work, mplapackint &info);
void Cgeqrt2(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const ldt, mplapackint &info);
void Cgeqrt3(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const ldt, mplapackint &info);
void Cgerq2(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint &info);
void Cgerqf(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cgesv(mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cgesvd(const char *jobu, const char *jobvt, mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *s, mpc_class *u, mplapackint const ldu, mpc_class *vt, mplapackint const ldvt, mpc_class *work, mplapackint const lwork, mpf_class *rwork, mplapackint &info);
void Cgetc2(mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint &info);
void Cgetf2(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Cgetrf(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Cgetrf2(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Cgetri(mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cgetrs(const char *trans, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cggbak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *lscale, mpf_class *rscale, mplapackint const m, mpc_class *v, mplapackint const ldv, mplapackint &info);
void Cgtsv(mplapackint const n, mplapackint const nrhs, mpc_class *dl, mpc_class *d, mpc_class *du, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cgttrs(const char *trans, mplapackint const n, mplapackint const nrhs, mpc_class *dl, mpc_class *d, mpc_class *du, mpc_class *du2, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cgtts2(mplapackint const itrans, mplapackint const n, mplapackint const nrhs, mpc_class *dl, mpc_class *d, mpc_class *du, mpc_class *du2, mplapackint *ipiv, mpc_class *b, mplapackint const ldb);
void Chbev(const char *jobz, const char *uplo, mplapackint const n, mplapackint const kd, mpc_class *ab, mplapackint const ldab, mpf_class *w, mpc_class *z, mplapackint const ldz, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Chbtrd(const char *vect, const char *uplo, mplapackint const n, mplapackint const kd, mpc_class *ab, mplapackint const ldab, mpf_class *d, mpf_class *e, mpc_class *q, mplapackint const ldq, mpc_class *work, mplapackint &info);
void Checon(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class const anorm, mpf_class &rcond, mpc_class *work, mplapackint &info);
void Cheev(const char *jobz, const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *w, mpc_class *work, mplapackint const lwork, mpf_class *rwork, mplapackint &info);
void Chegs2(mplapackint const itype, const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Chegst(mplapackint const itype, const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cherfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *af, mplapackint const ldaf, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Chesv(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Chesv_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Chesvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *af, mplapackint const ldaf, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpc_class *work, mplapackint const lwork, mpf_class *rwork, mplapackint &info);
void Cheswapr(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint const i1, mplapackint const i2);
void Chetd2(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *d, mpf_class *e, mpc_class *tau, mplapackint &info);
void Chetf2(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Chetf2_rk(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mplapackint &info);
void Chetf2_rook(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Chetrd(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *d, mpf_class *e, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Chetrf(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Chetrf_aa(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Chetrf_rk(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Chetrf_rook(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Chetri(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint &info);
void Chetri2(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Chetri2x(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const nb, mplapackint &info);
void Chetri_3(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Chetri_3x(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mpc_class *work, mplapackint const nb, mplapackint &info);
void Chetri_rook(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint &info);
void Chetrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Chetrs2(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *work, mplapackint &info);
void Chetrs_3(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Chetrs_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Chetrs_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Chfrk(const char *transr, const char *uplo, const char *trans, mplapackint const n, mplapackint const k, mpf_class const alpha, mpc_class *a, mplapackint const lda, mpf_class const beta, mpc_class *c);
void Chpcon(const char *uplo, mplapackint const n, mpc_class *ap, mplapackint *ipiv, mpf_class const anorm, mpf_class &rcond, mpc_class *work, mplapackint &info);
void Chpev(const char *jobz, const char *uplo, mplapackint const n, mpc_class *ap, mpf_class *w, mpc_class *z, mplapackint const ldz, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Chprfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mpc_class *afp, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Chpsv(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Chpsvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mpc_class *afp, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Chptrd(const char *uplo, mplapackint const n, mpc_class *ap, mpf_class *d, mpf_class *e, mpc_class *tau, mplapackint &info);
void Chptrf(const char *uplo, mplapackint const n, mpc_class *ap, mplapackint *ipiv, mplapackint &info);
void Chptrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Chseqr(const char *job, const char *compz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpc_class *h, mplapackint const ldh, mpc_class *w, mpc_class *z, mplapackint const ldz, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cla_wwaddw(mplapackint const n, mpc_class *x, mpc_class *y, mpc_class *w);
void Clabrd(mplapackint const m, mplapackint const n, mplapackint const nb, mpc_class *a, mplapackint const lda, mpf_class *d, mpf_class *e, mpc_class *tauq, mpc_class *taup, mpc_class *x, mplapackint const ldx, mpc_class *y, mplapackint const ldy);
void Clacgv(mplapackint const n, mpc_class *x, mplapackint const incx);
void Clacn2(mplapackint const n, mpc_class *v, mpc_class *x, mpf_class &est, mplapackint &kase, mplapackint *isave);
void Clacp2(const char *uplo, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb);
void Clacpy(const char *uplo, mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb);
void Clacrm(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpc_class *c, mplapackint const ldc, mpf_class *rwork);
void Clacrt(mplapackint const n, mpc_class *cx, mplapackint const incx, mpc_class *cy, mplapackint const incy, mpc_class const c, mpc_class const s);
void Claesy(mpc_class const a, mpc_class const b, mpc_class const c, mpc_class &rt1, mpc_class &rt2, mpc_class &evscal, mpc_class &cs1, mpc_class &sn1);
void Claev2(mpc_class const a, mpc_class const b, mpc_class const c, mpf_class &rt1, mpf_class &rt2, mpf_class &cs1, mpc_class &sn1);
void Clags2(bool const upper, mpf_class const a1, mpc_class const a2, mpf_class const a3, mpf_class const b1, mpc_class const b2, mpf_class const b3, mpf_class &csu, mpc_class &snu, mpf_class &csv, mpc_class &snv, mpf_class csq, mpc_class snq);
void Clagtm(const char *trans, mplapackint const n, mplapackint const nrhs, mpf_class const alpha, mpc_class *dl, mpc_class *d, mpc_class *du, mpc_class *x, mplapackint const ldx, mpf_class const beta, mpc_class *b, mplapackint const ldb);
void Clahef(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *w, mplapackint const ldw, mplapackint &info);
void Clahef_aa(const char *uplo, mplapackint const j1, mplapackint const m, mplapackint const nb, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *h, mplapackint const ldh, mpc_class *work);
void Clahef_rk(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mpc_class *w, mplapackint const ldw, mplapackint &info);
void Clahef_rook(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *w, mplapackint const ldw, mplapackint &info);
void Clahqr(bool const wantt, bool const wantz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpc_class *h, mplapackint const ldh, mpc_class *w, mplapackint const iloz, mplapackint const ihiz, mpc_class *z, mplapackint const ldz, mplapackint &info);
void Clahr2(mplapackint const n, mplapackint const k, mplapackint const nb, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *t, mplapackint const ldt, mpc_class *y, mplapackint const ldy);
void Clamtsqr(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const mb, mplapackint const nb, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const ldt, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Clapll(mplapackint const n, mpc_class *x, mplapackint const incx, mpc_class *y, mplapackint const incy, mpf_class &ssmin);
void Clapmr(bool const forwrd, mplapackint const m, mplapackint const n, mpc_class *x, mplapackint const ldx, mplapackint *k);
void Clapmt(bool const forwrd, mplapackint const m, mplapackint const n, mpc_class *x, mplapackint const ldx, mplapackint *k);
void Claqgb(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, mpc_class *ab, mplapackint const ldab, mpf_class *r, mpf_class *c, mpf_class const rowcnd, mpf_class const colcnd, mpf_class const amax, char *equed);
void Claqge(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *r, mpf_class *c, mpf_class const rowcnd, mpf_class const colcnd, mpf_class const amax, char *equed);
void Claqhb(const char *uplo, mplapackint const n, mplapackint const kd, mpc_class *ab, mplapackint const ldab, mpf_class *s, mpf_class const scond, mpf_class const amax, char *equed);
void Claqhe(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *s, mpf_class const scond, mpf_class const amax, char *equed);
void Claqhp(const char *uplo, mplapackint const n, mpc_class *ap, mpf_class *s, mpf_class const scond, mpf_class const amax, char *equed);
void Claqr0(bool const wantt, bool const wantz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpc_class *h, mplapackint const ldh, mpc_class *w, mplapackint const iloz, mplapackint const ihiz, mpc_class *z, mplapackint const ldz, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Claqr1(mplapackint const n, mpc_class *h, mplapackint const ldh, mpc_class const s1, mpc_class const s2, mpc_class *v);
void Claqr2(bool const wantt, bool const wantz, mplapackint const n, mplapackint const ktop, mplapackint const kbot, mplapackint const nw, mpc_class *h, mplapackint const ldh, mplapackint const iloz, mplapackint const ihiz, mpc_class *z, mplapackint const ldz, mplapackint &ns, mplapackint &nd, mpc_class *sh, mpc_class *v, mplapackint const ldv, mplapackint const nh, mpc_class *t, mplapackint const ldt, mplapackint const nv, mpc_class *wv, mplapackint const ldwv, mpc_class *work, mplapackint const lwork);
void Claqr3(bool const wantt, bool const wantz, mplapackint const n, mplapackint const ktop, mplapackint const kbot, mplapackint const nw, mpc_class *h, mplapackint const ldh, mplapackint const iloz, mplapackint const ihiz, mpc_class *z, mplapackint const ldz, mplapackint &ns, mplapackint &nd, mpc_class *sh, mpc_class *v, mplapackint const ldv, mplapackint const nh, mpc_class *t, mplapackint const ldt, mplapackint const nv, mpc_class *wv, mplapackint const ldwv, mpc_class *work, mplapackint const lwork);
void Claqr4(bool const wantt, bool const wantz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpc_class *h, mplapackint const ldh, mpc_class *w, mplapackint const iloz, mplapackint const ihiz, mpc_class *z, mplapackint const ldz, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Claqr5(bool const wantt, bool const wantz, mplapackint const kacc22, mplapackint const n, mplapackint const ktop, mplapackint const kbot, mplapackint const nshfts, mpc_class *s, mpc_class *h, mplapackint const ldh, mplapackint const iloz, mplapackint const ihiz, mpc_class *z, mplapackint const ldz, mpc_class *v, mplapackint const ldv, mpc_class *u, mplapackint const ldu, mplapackint const nv, mpc_class *wv, mplapackint const ldwv, mplapackint const nh, mpc_class *wh, mplapackint const ldwh);
void Claqsb(const char *uplo, mplapackint const n, mplapackint const kd, mpc_class *ab, mplapackint const ldab, mpf_class *s, mpf_class const scond, mpf_class const amax, char *equed);
void Claqsp(const char *uplo, mplapackint const n, mpc_class *ap, mpf_class *s, mpf_class const scond, mpf_class const amax, char *equed);
void Claqsy(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *s, mpf_class const scond, mpf_class const amax, char *equed);
void Clar2v(mplapackint const n, mpc_class *x, mpc_class *y, mpc_class *z, mplapackint const incx, mpf_class *c, mpc_class *s, mplapackint const incc);
void Clarf(const char *side, mplapackint const m, mplapackint const n, mpc_class *v, mplapackint const incv, mpc_class const tau, mpc_class *c, mplapackint const ldc, mpc_class *work);
void Clarfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *v, mplapackint const ldv, mpc_class *t, mplapackint const ldt, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint const ldwork);
void Clarfb_gett(const char *ident, mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *t, mplapackint const ldt, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *work, mplapackint const ldwork);
void Clarfg(mplapackint const n, mpc_class &alpha, mpc_class *x, mplapackint const incx, mpc_class &tau);
void Clarfgp(mplapackint const n, mpc_class &alpha, mpc_class *x, mplapackint const incx, mpc_class &tau);
void Clarft(const char *direct, const char *storev, mplapackint const n, mplapackint const k, mpc_class *v, mplapackint const ldv, mpc_class *tau, mpc_class *t, mplapackint const ldt);
void Clarfx(const char *side, mplapackint const m, mplapackint const n, mpc_class *v, mpc_class const tau, mpc_class *c, mplapackint const ldc, mpc_class *work);
void Clarfy(const char *uplo, mplapackint const n, mpc_class *v, mplapackint const incv, mpc_class const tau, mpc_class *c, mplapackint const ldc, mpc_class *work);
void Clargv(mplapackint const n, mpc_class *x, mplapackint const incx, mpc_class *y, mplapackint const incy, mpf_class *c, mplapackint const incc);
void Clarnv(mplapackint const idist, mplapackint *iseed, mplapackint const n, mpc_class *x);
void Clarscl2(mplapackint const m, mplapackint const n, mpf_class *d, mpc_class *x, mplapackint const ldx);
void Clartg(mpc_class const f, mpc_class const g, mpf_class &cs, mpc_class &sn, mpc_class &r);
void Clartv(mplapackint const n, mpc_class *x, mplapackint const incx, mpc_class *y, mplapackint const incy, mpf_class *c, mpc_class *s, mplapackint const incc);
void Clarz(const char *side, mplapackint const m, mplapackint const n, mplapackint const l, mpc_class *v, mplapackint const incv, mpc_class const tau, mpc_class *c, mplapackint const ldc, mpc_class *work);
void Clarzb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mpc_class *v, mplapackint const ldv, mpc_class *t, mplapackint const ldt, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint const ldwork);
void Clarzt(const char *direct, const char *storev, mplapackint const n, mplapackint const k, mpc_class *v, mplapackint const ldv, mpc_class *tau, mpc_class *t, mplapackint const ldt);
void Clascl(const char *type, mplapackint const kl, mplapackint const ku, mpf_class const cfrom, mpf_class const cto, mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &info);
void Clascl2(mplapackint const m, mplapackint const n, mpf_class *d, mpc_class *x, mplapackint const ldx);
void Claset(const char *uplo, mplapackint const m, mplapackint const n, mpc_class const alpha, mpc_class const beta, mpc_class *a, mplapackint const lda);
void Clasr(const char *side, const char *pivot, const char *direct, mplapackint const m, mplapackint const n, mpf_class *c, mpf_class *s, mpc_class *a, mplapackint const lda);
void Classq(mplapackint const n, mpc_class *x, mplapackint const incx, mpf_class &scale, mpf_class &sumsq);
void Claswlq(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const ldt, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Claswp(mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint const k1, mplapackint const k2, mplapackint *ipiv, mplapackint const incx);
void Clasyf(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *w, mplapackint const ldw, mplapackint &info);
void Clasyf_aa(const char *uplo, mplapackint const j1, mplapackint const m, mplapackint const nb, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *h, mplapackint const ldh, mpc_class *work);
void Clasyf_rk(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mpc_class *w, mplapackint const ldw, mplapackint &info);
void Clasyf_rook(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *w, mplapackint const ldw, mplapackint &info);
void Clatps(const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint const n, mpc_class *ap, mpc_class *x, mpf_class &scale, mpf_class *cnorm, mplapackint &info);
void Clatrd(const char *uplo, mplapackint const n, mplapackint const nb, mpc_class *a, mplapackint const lda, mpf_class *e, mpc_class *tau, mpc_class *w, mplapackint const ldw);
void Clatrs(const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *x, mpf_class &scale, mpf_class *cnorm, mplapackint &info);
void Clatrz(mplapackint const m, mplapackint const n, mplapackint const l, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work);
void Clatsqr(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const ldt, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Claunhr_col_getrfnp(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *d, mplapackint &info);
void Claunhr_col_getrfnp2(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *d, mplapackint &info);
void Clauu2(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &info);
void Clauum(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &info);
void Cpbequ(const char *uplo, mplapackint const n, mplapackint const kd, mpc_class *ab, mplapackint const ldab, mpf_class *s, mpf_class &scond, mpf_class &amax, mplapackint &info);
void Cpbstf(const char *uplo, mplapackint const n, mplapackint const kd, mpc_class *ab, mplapackint const ldab, mplapackint &info);
void Cpbsv(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, mpc_class *ab, mplapackint const ldab, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cpbtf2(const char *uplo, mplapackint const n, mplapackint const kd, mpc_class *ab, mplapackint const ldab, mplapackint &info);
void Cpbtrf(const char *uplo, mplapackint const n, mplapackint const kd, mpc_class *ab, mplapackint const ldab, mplapackint &info);
void Cpbtrs(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, mpc_class *ab, mplapackint const ldab, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cpocon(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class const anorm, mpf_class &rcond, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Cpoequ(mplapackint const n, mpc_class *a, mplapackint const lda, mpf_class *s, mpf_class &scond, mpf_class &amax, mplapackint &info);
void Cporfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *af, mplapackint const ldaf, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Cposv(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cposvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *af, mplapackint const ldaf, char *equed, mpf_class *s, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Cpotf2(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &info);
void Cpotrf(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &info);
void Cpotrf2(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &info);
void Cpotri(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &info);
void Cpotrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cppcon(const char *uplo, mplapackint const n, mpc_class *ap, mpf_class const anorm, mpf_class &rcond, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Cppequ(const char *uplo, mplapackint const n, mpc_class *ap, mpf_class *s, mpf_class &scond, mpf_class &amax, mplapackint &info);
void Cpprfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mpc_class *afp, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Cppsv(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cppsvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mpc_class *afp, char *equed, mpf_class *s, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Cpptrf(const char *uplo, mplapackint const n, mpc_class *ap, mplapackint &info);
void Cpptrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cptcon(mplapackint const n, mpf_class *d, mpc_class *e, mpf_class const anorm, mpf_class &rcond, mpf_class *rwork, mplapackint &info);
void Cptrfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *d, mpc_class *e, mpf_class *df, mpc_class *ef, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Cptsv(mplapackint const n, mplapackint const nrhs, mpf_class *d, mpc_class *e, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cptsvx(const char *fact, mplapackint const n, mplapackint const nrhs, mpf_class *d, mpc_class *e, mpf_class *df, mpc_class *ef, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Cpttrf(mplapackint const n, mpf_class *d, mpc_class *e, mplapackint &info);
void Cpttrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *d, mpc_class *e, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cptts2(mplapackint const iuplo, mplapackint const n, mplapackint const nrhs, mpf_class *d, mpc_class *e, mpc_class *b, mplapackint const ldb);
void Crot(mplapackint const n, mpc_class *cx, mplapackint const incx, mpc_class *cy, mplapackint const incy, mpf_class const c, mpc_class const s);
void Cspcon(const char *uplo, mplapackint const n, mpc_class *ap, mplapackint *ipiv, mpf_class const anorm, mpf_class &rcond, mpc_class *work, mplapackint &info);
void Cspmv(const char *uplo, mplapackint const n, mpc_class const alpha, mpc_class *ap, mpc_class *x, mplapackint const incx, mpc_class const beta, mpc_class *y, mplapackint const incy);
void Cspr(const char *uplo, mplapackint const n, mpc_class const alpha, mpc_class *x, mplapackint const incx, mpc_class *ap);
void Csprfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mpc_class *afp, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Cspsv(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Cspsvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mpc_class *afp, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Csptrf(const char *uplo, mplapackint const n, mpc_class *ap, mplapackint *ipiv, mplapackint &info);
void Csptrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Csteqr(const char *compz, mplapackint const n, mpf_class *d, mpf_class *e, mpc_class *z, mplapackint const ldz, mpf_class *work, mplapackint &info);
void Csycon(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class const anorm, mpf_class &rcond, mpc_class *work, mplapackint &info);
void Csyconv(const char *uplo, const char *way, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *e, mplapackint &info);
void Csyconvf(const char *uplo, const char *way, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mplapackint &info);
void Csyconvf_rook(const char *uplo, const char *way, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mplapackint &info);
void Csymv(const char *uplo, mplapackint const n, mpc_class const alpha, mpc_class *a, mplapackint const lda, mpc_class *x, mplapackint const incx, mpc_class const beta, mpc_class *y, mplapackint const incy);
void Csyr(const char *uplo, mplapackint const n, mpc_class const alpha, mpc_class *x, mplapackint const incx, mpc_class *a, mplapackint const lda);
void Csyrfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *af, mplapackint const ldaf, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpc_class *work, mpf_class *rwork, mplapackint &info);
void Csysvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *af, mplapackint const ldaf, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpc_class *work, mplapackint const lwork, mpf_class *rwork, mplapackint &info);
void Csyswapr(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint const i1, mplapackint const i2);
void Csytf2(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Csytf2_rk(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mplapackint &info);
void Csytf2_rook(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Csytrf(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Csytrf_aa(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Csytrf_rk(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Csytrf_rook(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Csytri(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint &info);
void Csytri2(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Csytri2x(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint const nb, mplapackint &info);
void Csytri_3(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Csytri_3x(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mpc_class *work, mplapackint const nb, mplapackint &info);
void Csytri_rook(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *work, mplapackint &info);
void Csytrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Csytrs2(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *work, mplapackint &info);
void Csytrs_3(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *e, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Csytrs_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Csytrs_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mplapackint *ipiv, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Ctbtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const kd, mplapackint const nrhs, mpc_class *ab, mplapackint const ldab, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Ctgex2(bool const wantq, bool const wantz, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *q, mplapackint const ldq, mpc_class *z, mplapackint const ldz, mplapackint const j1, mplapackint &info);
void Ctgexc(bool const wantq, bool const wantz, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *q, mplapackint const ldq, mpc_class *z, mplapackint const ldz, mplapackint const ifst, mplapackint &ilst, mplapackint &info);
void Ctgsja(const char *jobu, const char *jobv, const char *jobq, mplapackint const m, mplapackint const p, mplapackint const n, mplapackint const k, mplapackint const l, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpf_class const tola, mpf_class const tolb, mpf_class *alpha, mpf_class *beta, mpc_class *u, mplapackint const ldu, mpc_class *v, mplapackint const ldv, mpc_class *q, mplapackint const ldq, mpc_class *work, mplapackint &ncycle, mplapackint &info);
void Ctplqt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const mb, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *t, mplapackint const ldt, mpc_class *work, mplapackint &info);
void Ctplqt2(mplapackint const m, mplapackint const n, mplapackint const l, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *t, mplapackint const ldt, mplapackint &info);
void Ctpmlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const mb, mpc_class *v, mplapackint const ldv, mpc_class *t, mplapackint const ldt, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *work, mplapackint &info);
void Ctpmqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const nb, mpc_class *v, mplapackint const ldv, mpc_class *t, mplapackint const ldt, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *work, mplapackint &info);
void Ctpqrt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const nb, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *t, mplapackint const ldt, mpc_class *work, mplapackint &info);
void Ctpqrt2(mplapackint const m, mplapackint const n, mplapackint const l, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *t, mplapackint const ldt, mplapackint &info);
void Ctprfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mpc_class *v, mplapackint const ldv, mpc_class *t, mplapackint const ldt, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *work, mplapackint const ldwork);
void Ctptrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, mpc_class *ap, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Ctpttr(const char *uplo, mplapackint const n, mpc_class *ap, mpc_class *a, mplapackint const lda, mplapackint &info);
void Ctrevc3(const char *side, const char *howmny, bool *select, mplapackint const n, mpc_class *t, mplapackint const ldt, mpc_class *vl, mplapackint const ldvl, mpc_class *vr, mplapackint const ldvr, mplapackint const mm, mplapackint &m, mpc_class *work, mplapackint const lwork, mpf_class *rwork, mplapackint const lrwork, mplapackint &info);
void Ctrexc(const char *compq, mplapackint const n, mpc_class *t, mplapackint const ldt, mpc_class *q, mplapackint const ldq, mplapackint const ifst, mplapackint const ilst, mplapackint &info);
void Ctrsen(const char *job, const char *compq, bool *select, mplapackint const n, mpc_class *t, mplapackint const ldt, mpc_class *q, mplapackint const ldq, mpc_class *w, mplapackint &m, mpf_class &s, mpf_class &sep, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Ctrsyl(const char *trana, const char *tranb, mplapackint const isgn, mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mpc_class *c, mplapackint const ldc, mpf_class &scale, mplapackint &info);
void Ctrti2(const char *uplo, const char *diag, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &info);
void Ctrtri(const char *uplo, const char *diag, mplapackint const n, mpc_class *a, mplapackint const lda, mplapackint &info);
void Ctrtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, mpc_class *a, mplapackint const lda, mpc_class *b, mplapackint const ldb, mplapackint &info);
void Ctrttp(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *ap, mplapackint &info);
void Ctzrzf(mplapackint const m, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cunbdb5(mplapackint const m1, mplapackint const m2, mplapackint const n, mpc_class *x1, mplapackint const incx1, mpc_class *x2, mplapackint const incx2, mpc_class *q1, mplapackint const ldq1, mpc_class *q2, mplapackint const ldq2, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cunbdb6(mplapackint const m1, mplapackint const m2, mplapackint const n, mpc_class *x1, mplapackint const incx1, mpc_class *x2, mplapackint const incx2, mpc_class *q1, mplapackint const ldq1, mpc_class *q2, mplapackint const ldq2, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cung2l(mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint &info);
void Cung2r(mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint &info);
void Cungbr(const char *vect, mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cunghr(mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cungl2(mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint &info);
void Cunglq(mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cungql(mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cungqr(mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cungr2(mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint &info);
void Cungrq(mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cungtr(const char *uplo, mplapackint const n, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cungtsqr(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const ldt, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cunhr_col(mplapackint const m, mplapackint const n, mplapackint const nb, mpc_class *a, mplapackint const lda, mpc_class *t, mplapackint const ldt, mpc_class *d, mplapackint &info);
void Cunm22(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const n1, mplapackint const n2, mpc_class *q, mplapackint const ldq, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cunm2l(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint &info);
void Cunm2r(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint &info);
void Cunmbr(const char *vect, const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cunmhr(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cunml2(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint &info);
void Cunmlq(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cunmqr(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint const lwork, mplapackint &info);
void Cunmr2(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint &info);
void Cunmr3(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mpc_class *a, mplapackint const lda, mpc_class *tau, mpc_class *c, mplapackint const ldc, mpc_class *work, mplapackint &info);
void Cupgtr(const char *uplo, mplapackint const n, mpc_class *ap, mpc_class *tau, mpc_class *q, mplapackint const ldq, mpc_class *work, mplapackint &info);
void Rbbcsd(const char *jobu1, const char *jobu2, const char *jobv1t, const char *jobv2t, const char *trans, mplapackint const m, mplapackint const p, mplapackint const q, mpf_class *theta, mpf_class *phi, mpf_class *u1, mplapackint const ldu1, mpf_class *u2, mplapackint const ldu2, mpf_class *v1t, mplapackint const ldv1t, mpf_class *v2t, mplapackint const ldv2t, mpf_class *b11d, mpf_class *b11e, mpf_class *b12d, mpf_class *b12e, mpf_class *b21d, mpf_class *b21e, mpf_class *b22d, mpf_class *b22e, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rbdsdc(const char *uplo, const char *compq, mplapackint const n, mpf_class *d, mpf_class *e, mpf_class *u, mplapackint const ldu, mpf_class *vt, mplapackint const ldvt, mpf_class *q, mplapackint *iq, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rbdsqr(const char *uplo, mplapackint const n, mplapackint const ncvt, mplapackint const nru, mplapackint const ncc, mpf_class *d, mpf_class *e, mpf_class *vt, mplapackint const ldvt, mpf_class *u, mplapackint const ldu, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rcombssq(mpf_class *v1, mpf_class *v2);
void Rdisna(const char *job, mplapackint const m, mplapackint const n, mpf_class *d, mpf_class *sep, mplapackint &info);
void Rgbbrd(const char *vect, mplapackint const m, mplapackint const n, mplapackint const ncc, mplapackint const kl, mplapackint const ku, mpf_class *ab, mplapackint const ldab, mpf_class *d, mpf_class *e, mpf_class *q, mplapackint const ldq, mpf_class *pt, mplapackint const ldpt, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rgbcon(const char *norm, mplapackint const n, mplapackint const kl, mplapackint const ku, mpf_class *ab, mplapackint const ldab, mplapackint *ipiv, mpf_class const anorm, mpf_class &rcond, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rgbequ(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, mpf_class *ab, mplapackint const ldab, mpf_class *r, mpf_class *c, mpf_class &rowcnd, mpf_class &colcnd, mpf_class &amax, mplapackint &info);
void Rgbequb(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, mpf_class *ab, mplapackint const ldab, mpf_class *r, mpf_class *c, mpf_class &rowcnd, mpf_class &colcnd, mpf_class &amax, mplapackint &info);
void Rgbrfs(const char *trans, mplapackint const n, mplapackint const kl, mplapackint const ku, mplapackint const nrhs, mpf_class *ab, mplapackint const ldab, mpf_class *afb, mplapackint const ldafb, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rgbsv(mplapackint const n, mplapackint const kl, mplapackint const ku, mplapackint const nrhs, mpf_class *ab, mplapackint const ldab, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rgbsvx(const char *fact, const char *trans, mplapackint const n, mplapackint const kl, mplapackint const ku, mplapackint const nrhs, mpf_class *ab, mplapackint const ldab, mpf_class *afb, mplapackint const ldafb, mplapackint *ipiv, char *equed, mpf_class *r, mpf_class *c, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rgbtf2(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, mpf_class *ab, mplapackint const ldab, mplapackint *ipiv, mplapackint &info);
void Rgbtrf(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, mpf_class *ab, mplapackint const ldab, mplapackint *ipiv, mplapackint &info);
void Rgbtrs(const char *trans, mplapackint const n, mplapackint const kl, mplapackint const ku, mplapackint const nrhs, mpf_class *ab, mplapackint const ldab, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rgebak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *scale, mplapackint const m, mpf_class *v, mplapackint const ldv, mplapackint &info);
void Rgebal(const char *job, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &ilo, mplapackint &ihi, mpf_class *scale, mplapackint &info);
void Rgebd2(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *d, mpf_class *e, mpf_class *tauq, mpf_class *taup, mpf_class *work, mplapackint &info);
void Rgebrd(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *d, mpf_class *e, mpf_class *tauq, mpf_class *taup, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgecon(const char *norm, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class const anorm, mpf_class &rcond, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rgeequ(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *r, mpf_class *c, mpf_class &rowcnd, mpf_class &colcnd, mpf_class &amax, mplapackint &info);
void Rgeequb(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *r, mpf_class *c, mpf_class &rowcnd, mpf_class &colcnd, mpf_class &amax, mplapackint &info);
void Rgees(const char *jobvs, const char *sort, bool (*select)(mpf_class, mpf_class), mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &sdim, mpf_class *wr, mpf_class *wi, mpf_class *vs, mplapackint const ldvs, mpf_class *work, mplapackint const lwork, bool *bwork, mplapackint &info);
void Rgeesx(const char *jobvs, const char *sort, bool (*select)(mpf_class, mpf_class), const char *sense, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &sdim, mpf_class *wr, mpf_class *wi, mpf_class *vs, mplapackint const ldvs, mpf_class rconde, mpf_class &rcondv, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, bool *bwork, mplapackint &info);
void Rgeev(const char *jobvl, const char *jobvr, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *wr, mpf_class *wi, mpf_class *vl, mplapackint const ldvl, mpf_class *vr, mplapackint const ldvr, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgeevx(const char *balanc, const char *jobvl, const char *jobvr, const char *sense, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *wr, mpf_class *wi, mpf_class *vl, mplapackint const ldvl, mpf_class *vr, mplapackint const ldvr, mplapackint ilo, mplapackint ihi, mpf_class *scale, mpf_class &abnrm, mpf_class *rconde, mpf_class *rcondv, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint &info);
void Rgehd2(mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint &info);
void Rgehrd(mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgejsv(const char *joba, const char *jobu, const char *jobv, const char *jobr, const char *jobt, const char *jobp, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *sva, mpf_class *u, mplapackint const ldu, mpf_class *v, mplapackint const ldv, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint &info);
void Rgelq(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const tsize, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgelq2(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint &info);
void Rgelqf(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgelqt(mplapackint const m, mplapackint const n, mplapackint const mb, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const ldt, mpf_class *work, mplapackint &info);
void Rgelqt3(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const ldt, mplapackint &info);
void Rgels(const char *trans, mplapackint const m, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgelsd(mplapackint const m, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *s, mpf_class const rcond, mplapackint &rank, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint &info);
void Rgelss(mplapackint const m, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *s, mpf_class const rcond, mplapackint &rank, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgelsy(mplapackint const m, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mplapackint *jpvt, mpf_class const rcond, mplapackint &rank, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgemlq(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const tsize, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgemlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const mb, mpf_class *v, mplapackint const ldv, mpf_class *t, mplapackint const ldt, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rgemqr(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const tsize, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgemqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const nb, mpf_class *v, mplapackint const ldv, mpf_class *t, mplapackint const ldt, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rgeql2(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint &info);
void Rgeqlf(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgeqp3(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *jpvt, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgeqr(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const tsize, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgeqr2(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint &info);
void Rgeqr2p(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint &info);
void Rgeqrf(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgeqrfp(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgeqrt(mplapackint const m, mplapackint const n, mplapackint const nb, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const ldt, mpf_class *work, mplapackint &info);
void Rgeqrt2(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const ldt, mplapackint &info);
void Rgeqrt3(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const ldt, mplapackint &info);
void Rgerfs(const char *trans, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *af, mplapackint const ldaf, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rgerq2(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint &info);
void Rgerqf(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgesc2(mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *rhs, mplapackint *ipiv, mplapackint *jpiv, mpf_class &scale);
void Rgesdd(const char *jobz, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *s, mpf_class *u, mplapackint const ldu, mpf_class *vt, mplapackint const ldvt, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint &info);
void Rgesv(mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rgesvd(const char *jobu, const char *jobvt, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *s, mpf_class *u, mplapackint const ldu, mpf_class *vt, mplapackint const ldvt, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgesvdq(const char *joba, const char *jobp, const char *jobr, const char *jobu, const char *jobv, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *s, mpf_class *u, mplapackint const ldu, mpf_class *v, mplapackint const ldv, mplapackint &numrank, mplapackint *iwork, mplapackint const liwork, mpf_class *work, mplapackint const lwork, mpf_class *rwork, mplapackint const lrwork, mplapackint &info);
void Rgesvj(const char *joba, const char *jobu, const char *jobv, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *sva, mplapackint const mv, mpf_class *v, mplapackint const ldv, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgesvx(const char *fact, const char *trans, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *af, mplapackint const ldaf, mplapackint *ipiv, char *equed, mpf_class *r, mpf_class *c, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rgetc2(mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint *jpiv, mplapackint &info);
void Rgetf2(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rgetrf(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rgetrf2(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rgetri(mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgetrs(const char *trans, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rgetsls(const char *trans, mplapackint const m, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rggbak(const char *job, const char *side, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *lscale, mpf_class *rscale, mplapackint const m, mpf_class *v, mplapackint const ldv, mplapackint &info);
void Rggbal(const char *job, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mplapackint &ilo, mplapackint &ihi, mpf_class *lscale, mpf_class *rscale, mpf_class *work, mplapackint &info);
void Rgges(const char *jobvsl, const char *jobvsr, const char *sort, bool (*selctg)(mpf_class, mpf_class), mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mplapackint &sdim, mpf_class *alphar, mpf_class *alphai, mpf_class *beta, mpf_class *vsl, mplapackint const ldvsl, mpf_class *vsr, mplapackint const ldvsr, mpf_class *work, mplapackint const lwork, bool *bwork, mplapackint &info);
void Rgges3(const char *jobvsl, const char *jobvsr, const char *sort, bool (*selctg)(mpf_class, mpf_class), mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mplapackint &sdim, mpf_class *alphar, mpf_class *alphai, mpf_class *beta, mpf_class *vsl, mplapackint const ldvsl, mpf_class *vsr, mplapackint const ldvsr, mpf_class *work, mplapackint const lwork, bool *bwork, mplapackint &info);
void Rggev(const char *jobvl, const char *jobvr, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *alphar, mpf_class *alphai, mpf_class *beta, mpf_class *vl, mplapackint const ldvl, mpf_class *vr, mplapackint const ldvr, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rggev3(const char *jobvl, const char *jobvr, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *alphar, mpf_class *alphai, mpf_class *beta, mpf_class *vl, mplapackint const ldvl, mpf_class *vr, mplapackint const ldvr, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rggglm(mplapackint const n, mplapackint const m, mplapackint const p, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *d, mpf_class *x, mpf_class *y, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgghd3(const char *compq, const char *compz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *q, mplapackint const ldq, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgghrd(const char *compq, const char *compz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *q, mplapackint const ldq, mpf_class *z, mplapackint const ldz, mplapackint &info);
void Rgglse(mplapackint const m, mplapackint const n, mplapackint const p, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *c, mpf_class *d, mpf_class *x, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rggqrf(mplapackint const n, mplapackint const m, mplapackint const p, mpf_class *a, mplapackint const lda, mpf_class *taua, mpf_class *b, mplapackint const ldb, mpf_class *taub, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rggrqf(mplapackint const m, mplapackint const p, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *taua, mpf_class *b, mplapackint const ldb, mpf_class *taub, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rggsvd3(const char *jobu, const char *jobv, const char *jobq, mplapackint const m, mplapackint const n, mplapackint const p, mplapackint k, mplapackint l, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *alpha, mpf_class *beta, mpf_class *u, mplapackint const ldu, mpf_class *v, mplapackint const ldv, mpf_class *q, mplapackint const ldq, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint &info);
void Rggsvp3(const char *jobu, const char *jobv, const char *jobq, mplapackint const m, mplapackint const p, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class const tola, mpf_class const tolb, mplapackint &k, mplapackint &l, mpf_class *u, mplapackint const ldu, mpf_class *v, mplapackint const ldv, mpf_class *q, mplapackint const ldq, mplapackint *iwork, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgsvj0(const char *jobv, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *d, mpf_class *sva, mplapackint const mv, mpf_class *v, mplapackint const ldv, mpf_class const eps, mpf_class const sfmin, mpf_class const tol, mplapackint const nsweep, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgsvj1(const char *jobv, mplapackint const m, mplapackint const n, mplapackint const n1, mpf_class *a, mplapackint const lda, mpf_class *d, mpf_class *sva, mplapackint const mv, mpf_class *v, mplapackint const ldv, mpf_class const eps, mpf_class const sfmin, mpf_class const tol, mplapackint const nsweep, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rgtcon(const char *norm, mplapackint const n, mpf_class *dl, mpf_class *d, mpf_class *du, mpf_class *du2, mplapackint *ipiv, mpf_class const anorm, mpf_class &rcond, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rgtrfs(const char *trans, mplapackint const n, mplapackint const nrhs, mpf_class *dl, mpf_class *d, mpf_class *du, mpf_class *dlf, mpf_class *df, mpf_class *duf, mpf_class *du2, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rgtsv(mplapackint const n, mplapackint const nrhs, mpf_class *dl, mpf_class *d, mpf_class *du, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rgttrf(mplapackint const n, mpf_class *dl, mpf_class *d, mpf_class *du, mpf_class *du2, mplapackint *ipiv, mplapackint &info);
void Rgttrs(const char *trans, mplapackint const n, mplapackint const nrhs, mpf_class *dl, mpf_class *d, mpf_class *du, mpf_class *du2, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rgtts2(mplapackint const itrans, mplapackint const n, mplapackint const nrhs, mpf_class *dl, mpf_class *d, mpf_class *du, mpf_class *du2, mplapackint *ipiv, mpf_class *b, mplapackint const ldb);
void Rhgeqz(const char *job, const char *compq, const char *compz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *h, mplapackint const ldh, mpf_class *t, mplapackint const ldt, mpf_class *alphar, mpf_class *alphai, mpf_class *beta, mpf_class *q, mplapackint const ldq, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rhseqr(const char *job, const char *compz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *h, mplapackint const ldh, mpf_class *wr, mpf_class *wi, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rla_wwaddw(mplapackint const n, mpf_class *x, mpf_class *y, mpf_class *w);
void Rlabad(mpf_class &small, mpf_class &large);
void Rlabrd(mplapackint const m, mplapackint const n, mplapackint const nb, mpf_class *a, mplapackint const lda, mpf_class *d, mpf_class *e, mpf_class *tauq, mpf_class *taup, mpf_class *x, mplapackint const ldx, mpf_class *y, mplapackint const ldy);
void Rlacn2(mplapackint const n, mpf_class *v, mpf_class *x, mplapackint *isgn, mpf_class &est, mplapackint &kase, mplapackint *isave);
void Rlacpy(const char *uplo, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb);
void Rladiv(mpf_class const &a, mpf_class const &b, mpf_class const &c, mpf_class const &d, mpf_class &p, mpf_class &q);
void Rladiv1(mpf_class &a, mpf_class const &b, mpf_class const &c, mpf_class const &d, mpf_class &p, mpf_class &q);
void Rlae2(mpf_class const a, mpf_class const b, mpf_class const c, mpf_class &rt1, mpf_class &rt2);
void Rlaed0(mplapackint const icompq, mplapackint const qsiz, mplapackint const n, mpf_class *d, mpf_class *e, mpf_class *q, mplapackint const ldq, mpf_class *qstore, mplapackint const ldqs, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rlaed1(mplapackint const n, mpf_class *d, mpf_class *q, mplapackint const ldq, mplapackint *indxq, mpf_class rho, mplapackint const cutpnt, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rlaed2(mplapackint &k, mplapackint const n, mplapackint const n1, mpf_class *d, mpf_class *q, mplapackint const ldq, mplapackint *indxq, mpf_class &rho, mpf_class *z, mpf_class *dlamda, mpf_class *w, mpf_class *q2, mplapackint *indx, mplapackint *indxc, mplapackint *indxp, mplapackint *coltyp, mplapackint &info);
void Rlaed3(mplapackint const k, mplapackint const n, mplapackint const n1, mpf_class *d, mpf_class *q, mplapackint const ldq, mpf_class const rho, mpf_class *dlamda, mpf_class *q2, mplapackint *indx, mplapackint *ctot, mpf_class *w, mpf_class *s, mplapackint &info);
void Rlaed4(mplapackint const n, mplapackint const i, mpf_class *d, mpf_class *z, mpf_class *delta, mpf_class const rho, mpf_class &dlam, mplapackint &info);
void Rlaed5(mplapackint const i, mpf_class *d, mpf_class *z, mpf_class *delta, mpf_class const rho, mpf_class &dlam);
void Rlaed6(mplapackint const kniter, bool const orgati, mpf_class const rho, mpf_class *d, mpf_class *z, mpf_class const finit, mpf_class &tau, mplapackint &info);
void Rlaed7(mplapackint const icompq, mplapackint const n, mplapackint const qsiz, mplapackint const tlvls, mplapackint const curlvl, mplapackint const curpbm, mpf_class *d, mpf_class *q, mplapackint const ldq, mplapackint *indxq, mpf_class rho, mplapackint const cutpnt, mpf_class *qstore, mplapackint *qptr, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpf_class *givnum, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rlaed8(mplapackint const icompq, mplapackint &k, mplapackint const n, mplapackint const qsiz, mpf_class *d, mpf_class *q, mplapackint const ldq, mplapackint *indxq, mpf_class &rho, mplapackint const cutpnt, mpf_class *z, mpf_class *dlamda, mpf_class *q2, mplapackint const ldq2, mpf_class *w, mplapackint *perm, mplapackint &givptr, mplapackint *givcol, mpf_class *givnum, mplapackint *indxp, mplapackint *indx, mplapackint &info);
void Rlaed9(mplapackint const k, mplapackint const kstart, mplapackint const kstop, mplapackint const n, mpf_class *d, mpf_class *q, mplapackint const ldq, mpf_class const rho, mpf_class *dlamda, mpf_class *w, mpf_class *s, mplapackint const lds, mplapackint &info);
void Rlaeda(mplapackint const n, mplapackint const tlvls, mplapackint const curlvl, mplapackint const curpbm, mplapackint *prmptr, mplapackint *perm, mplapackint *givptr, mplapackint *givcol, mpf_class *givnum, mpf_class *q, mplapackint *qptr, mpf_class *z, mpf_class *ztemp, mplapackint &info);
void Rlaev2(mpf_class const a, mpf_class const b, mpf_class const c, mpf_class &rt1, mpf_class &rt2, mpf_class &cs1, mpf_class &sn1);
void Rlaexc(bool const wantq, mplapackint const n, mpf_class *t, mplapackint const ldt, mpf_class *q, mplapackint const ldq, mplapackint const j1, mplapackint const n1, mplapackint const n2, mpf_class *work, mplapackint &info);
void Rlag2(mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class const safmin, mpf_class &scale1, mpf_class &scale2, mpf_class &wr1, mpf_class &wr2, mpf_class &wi);
void Rlags2(bool const upper, mpf_class const a1, mpf_class const a2, mpf_class const a3, mpf_class const b1, mpf_class const b2, mpf_class const b3, mpf_class &csu, mpf_class &snu, mpf_class &csv, mpf_class &snv, mpf_class csq, mpf_class snq);
void Rlagtf(mplapackint const n, mpf_class *a, mpf_class const lambda, mpf_class *b, mpf_class *c, mpf_class const tol, mpf_class *d, mplapackint *in, mplapackint &info);
void Rlagtm(const char *trans, mplapackint const n, mplapackint const nrhs, mpf_class const alpha, mpf_class *dl, mpf_class *d, mpf_class *du, mpf_class *x, mplapackint const ldx, mpf_class const beta, mpf_class *b, mplapackint const ldb);
void Rlagv2(mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *alphar, mpf_class *alphai, mpf_class *beta, mpf_class &csl, mpf_class &snl, mpf_class &csr, mpf_class &snr);
void Rlahqr(bool const wantt, bool const wantz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *h, mplapackint const ldh, mpf_class *wr, mpf_class *wi, mplapackint const iloz, mplapackint const ihiz, mpf_class *z, mplapackint const ldz, mplapackint &info);
void Rlahr2(mplapackint const n, mplapackint const k, mplapackint const nb, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *t, mplapackint const ldt, mpf_class *y, mplapackint const ldy);
void Rlaic1(mplapackint const job, mplapackint const j, mpf_class *x, mpf_class const sest, mpf_class *w, mpf_class const gamma, mpf_class &sestpr, mpf_class &s, mpf_class &c);
void Rlaln2(bool const ltrans, mplapackint const na, mplapackint const nw, mpf_class const smin, mpf_class const ca, mpf_class *a, mplapackint const lda, mpf_class const d1, mpf_class const d2, mpf_class *b, mplapackint const ldb, mpf_class const wr, mpf_class const wi, mpf_class *x, mplapackint const ldx, mpf_class &scale, mpf_class &xnorm, mplapackint &info);
void Rlals0(mplapackint const icompq, mplapackint const nl, mplapackint const nr, mplapackint const sqre, mplapackint const nrhs, mpf_class *b, mplapackint const ldb, mpf_class *bx, mplapackint const ldbx, mplapackint *perm, mplapackint const givptr, mplapackint *givcol, mplapackint const ldgcol, mpf_class *givnum, mplapackint const ldgnum, mpf_class *poles, mpf_class *difl, mpf_class *difr, mpf_class *z, mplapackint const k, mpf_class const c, mpf_class const s, mpf_class *work, mplapackint &info);
void Rlalsa(mplapackint const icompq, mplapackint const smlsiz, mplapackint const n, mplapackint const nrhs, mpf_class *b, mplapackint const ldb, mpf_class *bx, mplapackint const ldbx, mpf_class *u, mplapackint const ldu, mpf_class *vt, mplapackint *k, mpf_class *difl, mpf_class *difr, mpf_class *z, mpf_class *poles, mplapackint *givptr, mplapackint *givcol, mplapackint const ldgcol, mplapackint *perm, mpf_class *givnum, mpf_class *c, mpf_class *s, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rlalsd(const char *uplo, mplapackint const smlsiz, mplapackint const n, mplapackint const nrhs, mpf_class *d, mpf_class *e, mpf_class *b, mplapackint const ldb, mpf_class const rcond, mplapackint &rank, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rlamrg(mplapackint const n1, mplapackint const n2, mpf_class *a, mplapackint const dtrd1, mplapackint const dtrd2, mplapackint *index);
void Rlamswlq(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const mb, mplapackint const nb, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const ldt, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rlamtsqr(const char *side, const char *trans, mplapackint const &m, mplapackint const &n, mplapackint const &k, mplapackint const &mb, mplapackint const &nb, mpf_class *a, mplapackint const &lda, mpf_class *t, mplapackint const &ldt, mpf_class *c, mplapackint const &ldc, mpf_class *work, mplapackint const &lwork, mplapackint &info);
void Rlanv2(mpf_class &a, mpf_class &b, mpf_class &c, mpf_class &d, mpf_class &rt1r, mpf_class &rt1i, mpf_class &rt2r, mpf_class &rt2i, mpf_class &cs, mpf_class &sn);
void Rlaorhr_col_getrfnp(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *d, mplapackint &info);
void Rlaorhr_col_getrfnp2(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *d, mplapackint &info);
void Rlapll(mplapackint const n, mpf_class *x, mplapackint const incx, mpf_class *y, mplapackint const incy, mpf_class &ssmin);
void Rlapmr(bool const forwrd, mplapackint const m, mplapackint const n, mpf_class *x, mplapackint const ldx, mplapackint *k);
void Rlapmt(bool const forwrd, mplapackint const m, mplapackint const n, mpf_class *x, mplapackint const ldx, mplapackint *k);
void Rlaqgb(mplapackint const m, mplapackint const n, mplapackint const kl, mplapackint const ku, mpf_class *ab, mplapackint const ldab, mpf_class *r, mpf_class *c, mpf_class const rowcnd, mpf_class const colcnd, mpf_class const amax, char *equed);
void Rlaqge(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *r, mpf_class *c, mpf_class const rowcnd, mpf_class const colcnd, mpf_class const amax, char *equed);
void Rlaqp2(mplapackint const m, mplapackint const n, mplapackint const offset, mpf_class *a, mplapackint const lda, mplapackint *jpvt, mpf_class *tau, mpf_class *vn1, mpf_class *vn2, mpf_class *work);
void Rlaqps(mplapackint const m, mplapackint const n, mplapackint const offset, mplapackint const nb, mplapackint &kb, mpf_class *a, mplapackint const lda, mplapackint *jpvt, mpf_class *tau, mpf_class *vn1, mpf_class *vn2, mpf_class *auxv, mpf_class *f, mplapackint const ldf);
void Rlaqr0(bool const wantt, bool const wantz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *h, mplapackint const ldh, mpf_class *wr, mpf_class *wi, mplapackint const iloz, mplapackint const ihiz, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rlaqr1(mplapackint const n, mpf_class *h, mplapackint const ldh, mpf_class const sr1, mpf_class const si1, mpf_class const sr2, mpf_class const si2, mpf_class *v);
void Rlaqr2(bool const wantt, bool const wantz, mplapackint const n, mplapackint const ktop, mplapackint const kbot, mplapackint const nw, mpf_class *h, mplapackint const ldh, mplapackint const iloz, mplapackint const ihiz, mpf_class *z, mplapackint const ldz, mplapackint &ns, mplapackint &nd, mpf_class *sr, mpf_class *si, mpf_class *v, mplapackint const ldv, mplapackint const nh, mpf_class *t, mplapackint const ldt, mplapackint const nv, mpf_class *wv, mplapackint const ldwv, mpf_class *work, mplapackint const lwork);
void Rlaqr3(bool const wantt, bool const wantz, mplapackint const n, mplapackint const ktop, mplapackint const kbot, mplapackint const nw, mpf_class *h, mplapackint const ldh, mplapackint const iloz, mplapackint const ihiz, mpf_class *z, mplapackint const ldz, mplapackint &ns, mplapackint &nd, mpf_class *sr, mpf_class *si, mpf_class *v, mplapackint const ldv, mplapackint const nh, mpf_class *t, mplapackint const ldt, mplapackint const nv, mpf_class *wv, mplapackint const ldwv, mpf_class *work, mplapackint const lwork);
void Rlaqr4(bool const wantt, bool const wantz, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *h, mplapackint const ldh, mpf_class *wr, mpf_class *wi, mplapackint const iloz, mplapackint const ihiz, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rlaqr5(bool const wantt, bool const wantz, mplapackint const kacc22, mplapackint const n, mplapackint const ktop, mplapackint const kbot, mplapackint const nshfts, mpf_class *sr, mpf_class *si, mpf_class *h, mplapackint const ldh, mplapackint const iloz, mplapackint const ihiz, mpf_class *z, mplapackint const ldz, mpf_class *v, mplapackint const ldv, mpf_class *u, mplapackint const ldu, mplapackint const nv, mpf_class *wv, mplapackint const ldwv, mplapackint const nh, mpf_class *wh, mplapackint const ldwh);
void Rlaqsb(const char *uplo, mplapackint const n, mplapackint const kd, mpf_class *ab, mplapackint const ldab, mpf_class *s, mpf_class const scond, mpf_class const amax, char *equed);
void Rlaqsp(const char *uplo, mplapackint const n, mpf_class *ap, mpf_class *s, mpf_class const scond, mpf_class const amax, char *equed);
void Rlaqsy(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *s, mpf_class const scond, mpf_class const amax, char *equed);
void Rlaqtr(bool const ltran, bool const lreal, mplapackint const n, mpf_class *t, mplapackint const ldt, mpf_class *b, mpf_class const w, mpf_class &scale, mpf_class *x, mpf_class *work, mplapackint &info);
void Rlar1v(mplapackint const n, mplapackint const b1, mplapackint const bn, mpf_class const lambda, mpf_class *d, mpf_class *l, mpf_class *ld, mpf_class *lld, mpf_class const pivmin, mpf_class const gaptol, mpf_class *z, bool const wantnc, mplapackint &negcnt, mpf_class &ztz, mpf_class &mingma, mplapackint &r, mplapackint *isuppz, mpf_class &nrminv, mpf_class &resid, mpf_class &rqcorr, mpf_class *work);
void Rlar2v(mplapackint const n, mpf_class *x, mpf_class *y, mpf_class *z, mplapackint const incx, mpf_class *c, mpf_class *s, mplapackint const incc);
void Rlarf(const char *side, mplapackint const m, mplapackint const n, mpf_class *v, mplapackint const incv, mpf_class const tau, mpf_class *c, mplapackint const ldc, mpf_class *work);
void Rlarfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *v, mplapackint const ldv, mpf_class *t, mplapackint const ldt, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const ldwork);
void Rlarfb_gett(const char *ident, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *t, mplapackint const ldt, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint const ldwork);
void Rlarfg(mplapackint const n, mpf_class &alpha, mpf_class *x, mplapackint const incx, mpf_class &tau);
void Rlarfgp(mplapackint const n, mpf_class &alpha, mpf_class *x, mplapackint const incx, mpf_class &tau);
void Rlarft(const char *direct, const char *storev, mplapackint const n, mplapackint const k, mpf_class *v, mplapackint const ldv, mpf_class *tau, mpf_class *t, mplapackint const ldt);
void Rlarfx(const char *side, mplapackint const m, mplapackint const n, mpf_class *v, mpf_class const tau, mpf_class *c, mplapackint const ldc, mpf_class *work);
void Rlarfy(const char *uplo, mplapackint const n, mpf_class *v, mplapackint const incv, mpf_class const tau, mpf_class *c, mplapackint const ldc, mpf_class *work);
void Rlargv(mplapackint const n, mpf_class *x, mplapackint const incx, mpf_class *y, mplapackint const incy, mpf_class *c, mplapackint const incc);
void Rlarnv(mplapackint const idist, mplapackint *iseed, mplapackint const n, mpf_class *x);
void Rlarra(mplapackint const n, mpf_class *d, mpf_class *e, mpf_class *e2, mpf_class const spltol, mpf_class const tnrm, mplapackint &nsplit, mplapackint *isplit, mplapackint &info);
void Rlarrc(const char *jobt, mplapackint const n, mpf_class const vl, mpf_class const vu, mpf_class *d, mpf_class *e, mpf_class const, mplapackint &eigcnt, mplapackint &lcnt, mplapackint &rcnt, mplapackint &info);
void Rlarrj(mplapackint const n, mpf_class *d, mpf_class *e2, mplapackint const ifirst, mplapackint const ilast, mpf_class const rtol, mplapackint const offset, mpf_class *w, mpf_class *werr, mpf_class *work, mplapackint *iwork, mpf_class const pivmin, mpf_class const spdiam, mplapackint &info);
void Rlarrr(mplapackint const n, mpf_class *d, mpf_class *e, mplapackint &info);
void Rlarscl2(mplapackint const m, mplapackint const n, mpf_class *d, mpf_class *x, mplapackint const ldx);
void Rlartg(mpf_class const f, mpf_class const g, mpf_class &cs, mpf_class &sn, mpf_class &r);
void Rlartgp(mpf_class const f, mpf_class const g, mpf_class &cs, mpf_class &sn, mpf_class &r);
void Rlartgs(mpf_class const x, mpf_class const y, mpf_class const sigma, mpf_class cs, mpf_class sn);
void Rlartv(mplapackint const n, mpf_class *x, mplapackint const incx, mpf_class *y, mplapackint const incy, mpf_class *c, mpf_class *s, mplapackint const incc);
void Rlaruv(mplapackint *iseed, mplapackint const n, mpf_class *x);
void Rlarz(const char *side, mplapackint const m, mplapackint const n, mplapackint const l, mpf_class *v, mplapackint const incv, mpf_class const tau, mpf_class *c, mplapackint const ldc, mpf_class *work);
void Rlarzb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mpf_class *v, mplapackint const ldv, mpf_class *t, mplapackint const ldt, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const ldwork);
void Rlarzt(const char *direct, const char *storev, mplapackint const n, mplapackint const k, mpf_class *v, mplapackint const ldv, mpf_class *tau, mpf_class *t, mplapackint const ldt);
void Rlas2(mpf_class const f, mpf_class const g, mpf_class const h, mpf_class &ssmin, mpf_class &ssmax);
void Rlascl(const char *type, mplapackint const kl, mplapackint const ku, mpf_class const cfrom, mpf_class const cto, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &info);
void Rlascl2(mplapackint const m, mplapackint const n, mpf_class *d, mpf_class *x, mplapackint const ldx);
void Rlasd0(mplapackint const n, mplapackint const sqre, mpf_class *d, mpf_class *e, mpf_class *u, mplapackint const ldu, mpf_class *vt, mplapackint const ldvt, mplapackint const smlsiz, mplapackint *iwork, mpf_class *work, mplapackint &info);
void Rlasd1(mplapackint const nl, mplapackint const nr, mplapackint const sqre, mpf_class *d, mpf_class &alpha, mpf_class &beta, mpf_class *u, mplapackint const ldu, mpf_class *vt, mplapackint const ldvt, mplapackint *idxq, mplapackint *iwork, mpf_class *work, mplapackint &info);
void Rlasd2(mplapackint const nl, mplapackint const nr, mplapackint const sqre, mplapackint &k, mpf_class *d, mpf_class *z, mpf_class const alpha, mpf_class const beta, mpf_class *u, mplapackint const ldu, mpf_class *vt, mplapackint const ldvt, mpf_class *dsigma, mpf_class *u2, mplapackint const ldu2, mpf_class *vt2, mplapackint const ldvt2, mplapackint *idxp, mplapackint *idx, mplapackint *idxc, mplapackint *idxq, mplapackint *coltyp, mplapackint &info);
void Rlasd3(mplapackint const nl, mplapackint const nr, mplapackint const sqre, mplapackint const k, mpf_class *d, mpf_class *q, mplapackint const ldq, mpf_class *dsigma, mpf_class *u, mplapackint const ldu, mpf_class *u2, mplapackint const ldu2, mpf_class *vt, mplapackint const ldvt, mpf_class *vt2, mplapackint const ldvt2, mplapackint *idxc, mplapackint *ctot, mpf_class *z, mplapackint &info);
void Rlasd4(mplapackint const n, mplapackint const i, mpf_class *d, mpf_class *z, mpf_class *delta, mpf_class const rho, mpf_class &sigma, mpf_class *work, mplapackint &info);
void Rlasd5(mplapackint const i, mpf_class *d, mpf_class *z, mpf_class *delta, mpf_class const rho, mpf_class &dsigma, mpf_class *work);
void Rlasd6(mplapackint const icompq, mplapackint const nl, mplapackint const nr, mplapackint const sqre, mpf_class *d, mpf_class *vf, mpf_class *vl, mpf_class &alpha, mpf_class &beta, mplapackint *idxq, mplapackint *perm, mplapackint givptr, mplapackint *givcol, mplapackint const ldgcol, mpf_class *givnum, mplapackint const ldgnum, mpf_class *poles, mpf_class *difl, mpf_class *difr, mpf_class *z, mplapackint k, mpf_class c, mpf_class s, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rlasd7(mplapackint const icompq, mplapackint const nl, mplapackint const nr, mplapackint const sqre, mplapackint &k, mpf_class *d, mpf_class *z, mpf_class *zw, mpf_class *vf, mpf_class *vfw, mpf_class *vl, mpf_class *vlw, mpf_class const alpha, mpf_class const beta, mpf_class *dsigma, mplapackint *idx, mplapackint *idxp, mplapackint *idxq, mplapackint *perm, mplapackint &givptr, mplapackint *givcol, mplapackint const ldgcol, mpf_class *givnum, mplapackint const ldgnum, mpf_class &c, mpf_class &s, mplapackint &info);
void Rlasd8(mplapackint const icompq, mplapackint const k, mpf_class *d, mpf_class *z, mpf_class *vf, mpf_class *vl, mpf_class *difl, mpf_class *difr, mplapackint const lddifr, mpf_class *dsigma, mpf_class *work, mplapackint &info);
void Rlasda(mplapackint const icompq, mplapackint const smlsiz, mplapackint const n, mplapackint const sqre, mpf_class *d, mpf_class *e, mpf_class *u, mplapackint const ldu, mpf_class *vt, mplapackint *k, mpf_class *difl, mpf_class *difr, mpf_class *z, mpf_class *poles, mplapackint *givptr, mplapackint *givcol, mplapackint const ldgcol, mplapackint *perm, mpf_class *givnum, mpf_class *c, mpf_class *s, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rlasdq(const char *uplo, mplapackint const sqre, mplapackint const n, mplapackint const ncvt, mplapackint const nru, mplapackint const ncc, mpf_class *d, mpf_class *e, mpf_class *vt, mplapackint const ldvt, mpf_class *u, mplapackint const ldu, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rlasdt(mplapackint const n, mplapackint &lvl, mplapackint &nd, mplapackint *inode, mplapackint *ndiml, mplapackint *ndimr, mplapackint const msub);
void Rlaset(const char *uplo, mplapackint const m, mplapackint const n, mpf_class const alpha, mpf_class const beta, mpf_class *a, mplapackint const lda);
void Rlasq1(mplapackint const n, mpf_class *d, mpf_class *e, mpf_class *work, mplapackint &info);
void Rlasq2(mplapackint const n, mpf_class *z, mplapackint &info);
void Rlasq3(mplapackint const i0, mplapackint &n0, mpf_class *z, mplapackint &pp, mpf_class &dmin, mpf_class &sigma, mpf_class &desig, mpf_class &qmax, mplapackint &nfail, mplapackint &iter, mplapackint &ndiv, bool const ieee, mplapackint &ttype, mpf_class dmin1, mpf_class &dmin2, mpf_class dn, mpf_class dn1, mpf_class dn2, mpf_class g, mpf_class &tau);
void Rlasq4(mplapackint const i0, mplapackint const n0, mpf_class *z, mplapackint const pp, mplapackint const n0in, mpf_class const dmin, mpf_class const dmin1, mpf_class const dmin2, mpf_class const dn, mpf_class const dn1, mpf_class const dn2, mpf_class &tau, mplapackint &ttype, mpf_class &g);
void Rlasq5(mplapackint const i0, mplapackint const n0, mpf_class *z, mplapackint const pp, mpf_class &tau, mpf_class const sigma, mpf_class &dmin, mpf_class &dmin1, mpf_class &dmin2, mpf_class &dn, mpf_class &dnm1, mpf_class &dnm2, bool const ieee, mpf_class const eps);
void Rlasq6(mplapackint const i0, mplapackint const n0, mpf_class *z, mplapackint const pp, mpf_class &dmin, mpf_class &dmin1, mpf_class &dmin2, mpf_class &dn, mpf_class &dnm1, mpf_class &dnm2);
void Rlasr(const char *side, const char *pivot, const char *direct, mplapackint const m, mplapackint const n, mpf_class *c, mpf_class *s, mpf_class *a, mplapackint const lda);
void Rlasrt(const char *id, mplapackint const n, mpf_class *d, mplapackint &info);
void Rlassq(mplapackint const n, mpf_class *x, mplapackint const incx, mpf_class &scale, mpf_class &sumsq);
void Rlasv2(mpf_class const f, mpf_class const g, mpf_class const h, mpf_class &ssmin, mpf_class &ssmax, mpf_class &snr, mpf_class &csr, mpf_class &snl, mpf_class &csl);
void Rlaswlq(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const ldt, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rlaswp(mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint const k1, mplapackint const k2, mplapackint *ipiv, mplapackint const incx);
void Rlasy2(bool const ltranl, bool const ltranr, mplapackint const isgn, mplapackint const n1, mplapackint const n2, mpf_class *tl, mplapackint const ldtl, mpf_class *tr, mplapackint const ldtr, mpf_class *b, mplapackint const ldb, mpf_class &scale, mpf_class *x, mplapackint const ldx, mpf_class &xnorm, mplapackint &info);
void Rlasyf(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *w, mplapackint const ldw, mplapackint &info);
void Rlasyf_aa(const char *uplo, mplapackint const j1, mplapackint const m, mplapackint const nb, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *h, mplapackint const ldh, mpf_class *work);
void Rlasyf_rk(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, mpf_class *a, mplapackint const lda, mpf_class *e, mplapackint *ipiv, mpf_class *w, mplapackint const ldw, mplapackint &info);
void Rlasyf_rook(const char *uplo, mplapackint const n, mplapackint const nb, mplapackint &kb, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *w, mplapackint const ldw, mplapackint &info);
void Rlatbs(const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint const n, mplapackint const kd, mpf_class *ab, mplapackint const ldab, mpf_class *x, mpf_class &scale, mpf_class *cnorm, mplapackint &info);
void Rlatdf(mplapackint const ijob, mplapackint const n, mpf_class *z, mplapackint const ldz, mpf_class *rhs, mpf_class rdsum, mpf_class rdscal, mplapackint *ipiv, mplapackint *jpiv);
void Rlatps(const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint const n, mpf_class *ap, mpf_class *x, mpf_class &scale, mpf_class *cnorm, mplapackint &info);
void Rlatrd(const char *uplo, mplapackint const n, mplapackint const nb, mpf_class *a, mplapackint const lda, mpf_class *e, mpf_class *tau, mpf_class *w, mplapackint const ldw);
void Rlatrs(const char *uplo, const char *trans, const char *diag, const char *normin, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *x, mpf_class &scale, mpf_class *cnorm, mplapackint &info);
void Rlatrz(mplapackint const m, mplapackint const n, mplapackint const l, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work);
void Rlatsqr(mplapackint const m, mplapackint const n, mplapackint const mb, mplapackint const nb, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const ldt, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rlauu2(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &info);
void Rlauum(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &info);
void Ropgtr(const char *uplo, mplapackint const n, mpf_class *ap, mpf_class *tau, mpf_class *q, mplapackint const ldq, mpf_class *work, mplapackint &info);
void Ropmtr(const char *side, const char *uplo, const char *trans, mplapackint const m, mplapackint const n, mpf_class *ap, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rorbdb5(mplapackint const m1, mplapackint const m2, mplapackint const n, mpf_class *x1, mplapackint const incx1, mpf_class *x2, mplapackint const incx2, mpf_class *q1, mplapackint const ldq1, mpf_class *q2, mplapackint const ldq2, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorbdb6(mplapackint const m1, mplapackint const m2, mplapackint const n, mpf_class *x1, mplapackint const incx1, mpf_class *x2, mplapackint const incx2, mpf_class *q1, mplapackint const ldq1, mpf_class *q2, mplapackint const ldq2, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorg2l(mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint &info);
void Rorg2r(mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint &info);
void Rorgbr(const char *vect, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorghr(mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorgl2(mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint &info);
void Rorglq(mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorgql(mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorgqr(mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorgr2(mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint &info);
void Rorgrq(mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorgtr(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorhr_col(mplapackint const m, mplapackint const n, mplapackint const nb, mpf_class *a, mplapackint const lda, mpf_class *t, mplapackint const ldt, mpf_class *d, mplapackint &info);
void Rorm22(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const n1, mplapackint const n2, mpf_class *q, mplapackint const ldq, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorm2l(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rorm2r(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rormbr(const char *vect, const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rormhr(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const ilo, mplapackint const ihi, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rorml2(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rormlq(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rormql(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rormqr(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rormr2(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rormr3(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint &info);
void Rormrq(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rormrz(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rormtr(const char *side, const char *uplo, const char *trans, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *c, mplapackint const ldc, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rpbequ(const char *uplo, mplapackint const n, mplapackint const kd, mpf_class *ab, mplapackint const ldab, mpf_class *s, mpf_class &scond, mpf_class &amax, mplapackint &info);
void Rpbstf(const char *uplo, mplapackint const n, mplapackint const kd, mpf_class *ab, mplapackint const ldab, mplapackint &info);
void Rpbsv(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, mpf_class *ab, mplapackint const ldab, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rpbtf2(const char *uplo, mplapackint const n, mplapackint const kd, mpf_class *ab, mplapackint const ldab, mplapackint &info);
void Rpbtrf(const char *uplo, mplapackint const n, mplapackint const kd, mpf_class *ab, mplapackint const ldab, mplapackint &info);
void Rpbtrs(const char *uplo, mplapackint const n, mplapackint const kd, mplapackint const nrhs, mpf_class *ab, mplapackint const ldab, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rpocon(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class const anorm, mpf_class &rcond, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rpoequ(mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *s, mpf_class &scond, mpf_class &amax, mplapackint &info);
void Rpoequb(mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *s, mpf_class &scond, mpf_class &amax, mplapackint &info);
void Rporfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *af, mplapackint const ldaf, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rposv(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rposvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *af, mplapackint const ldaf, char *equed, mpf_class *s, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rpotf2(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &info);
void Rpotrf(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &info);
void Rpotrf2(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &info);
void Rpotri(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &info);
void Rpotrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rppcon(const char *uplo, mplapackint const n, mpf_class *ap, mpf_class const anorm, mpf_class &rcond, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rppequ(const char *uplo, mplapackint const n, mpf_class *ap, mpf_class *s, mpf_class &scond, mpf_class &amax, mplapackint &info);
void Rpprfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *ap, mpf_class *afp, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rppsv(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *ap, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rppsvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *ap, mpf_class *afp, char *equed, mpf_class *s, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rpptrf(const char *uplo, mplapackint const n, mpf_class *ap, mplapackint &info);
void Rpptrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *ap, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rptcon(mplapackint const n, mpf_class *d, mpf_class *e, mpf_class const anorm, mpf_class &rcond, mpf_class *work, mplapackint &info);
void Rptrfs(mplapackint const n, mplapackint const nrhs, mpf_class *d, mpf_class *e, mpf_class *df, mpf_class *ef, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint &info);
void Rptsv(mplapackint const n, mplapackint const nrhs, mpf_class *d, mpf_class *e, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rptsvx(const char *fact, mplapackint const n, mplapackint const nrhs, mpf_class *d, mpf_class *e, mpf_class *df, mpf_class *ef, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint &info);
void Rpttrf(mplapackint const n, mpf_class *d, mpf_class *e, mplapackint &info);
void Rpttrs(mplapackint const n, mplapackint const nrhs, mpf_class *d, mpf_class *e, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rptts2(mplapackint const n, mplapackint const nrhs, mpf_class *d, mpf_class *e, mpf_class *b, mplapackint const ldb);
void Rrscl(mplapackint const n, mpf_class const sa, mpf_class *sx, mplapackint const incx);
void Rsbev(const char *jobz, const char *uplo, mplapackint const n, mplapackint const kd, mpf_class *ab, mplapackint const ldab, mpf_class *w, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint &info);
void Rsbevd(const char *jobz, const char *uplo, mplapackint const n, mplapackint const kd, mpf_class *ab, mplapackint const ldab, mpf_class *w, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rsbtrd(const char *vect, const char *uplo, mplapackint const n, mplapackint const kd, mpf_class *ab, mplapackint const ldab, mpf_class *d, mpf_class *e, mpf_class *q, mplapackint const ldq, mpf_class *work, mplapackint &info);
void Rsfrk(const char *transr, const char *uplo, const char *trans, mplapackint const n, mplapackint const k, mpf_class const alpha, mpf_class *a, mplapackint const lda, mpf_class const beta, mpf_class *c);
void Rspcon(const char *uplo, mplapackint const n, mpf_class *ap, mplapackint *ipiv, mpf_class const anorm, mpf_class &rcond, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rspev(const char *jobz, const char *uplo, mplapackint const n, mpf_class *ap, mpf_class *w, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint &info);
void Rspevd(const char *jobz, const char *uplo, mplapackint const n, mpf_class *ap, mpf_class *w, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rsprfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *ap, mpf_class *afp, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rspsv(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *ap, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rspsvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *ap, mpf_class *afp, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rsptrd(const char *uplo, mplapackint const n, mpf_class *ap, mpf_class *d, mpf_class *e, mpf_class *tau, mplapackint &info);
void Rsptrf(const char *uplo, mplapackint const n, mpf_class *ap, mplapackint *ipiv, mplapackint &info);
void Rsptrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *ap, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rstedc(const char *compz, mplapackint const n, mpf_class *d, mpf_class *e, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rsteqr(const char *compz, mplapackint const n, mpf_class *d, mpf_class *e, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint &info);
void Rsterf(mplapackint const n, mpf_class *d, mpf_class *e, mplapackint &info);
void Rstev(const char *jobz, mplapackint const n, mpf_class *d, mpf_class *e, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint &info);
void Rstevd(const char *jobz, mplapackint const n, mpf_class *d, mpf_class *e, mpf_class *z, mplapackint const ldz, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rsycon(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class const anorm, mpf_class &rcond, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rsyconv(const char *uplo, const char *way, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *e, mplapackint &info);
void Rsyconvf(const char *uplo, const char *way, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *e, mplapackint *ipiv, mplapackint &info);
void Rsyconvf_rook(const char *uplo, const char *way, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *e, mplapackint *ipiv, mplapackint &info);
void Rsyequb(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *s, mpf_class &scond, mpf_class &amax, mpf_class *work, mplapackint &info);
void Rsyev(const char *jobz, const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *w, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsyevd(const char *jobz, const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *w, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rsygs2(mplapackint const itype, const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rsygst(mplapackint const itype, const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rsyrfs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *af, mplapackint const ldaf, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint *iwork, mplapackint &info);
void Rsysv(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsysv_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsysv_aa_2stage(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *tb, mplapackint const ltb, mplapackint *ipiv, mplapackint *ipiv2, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsysv_rk(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *e, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsysv_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsysvx(const char *fact, const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *af, mplapackint const ldaf, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *x, mplapackint const ldx, mpf_class &rcond, mpf_class *ferr, mpf_class *berr, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint &info);
void Rsyswapr(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint const i1, mplapackint const i2);
void Rsytd2(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *d, mpf_class *e, mpf_class *tau, mplapackint &info);
void Rsytf2(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rsytf2_rk(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *e, mplapackint *ipiv, mplapackint &info);
void Rsytf2_rook(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mplapackint &info);
void Rsytrd(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *d, mpf_class *e, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsytrf(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsytrf_aa(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsytrf_aa_2stage(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tb, mplapackint const ltb, mplapackint *ipiv, mplapackint *ipiv2, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsytrf_rk(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *e, mplapackint *ipiv, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsytrf_rook(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsytri(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *work, mplapackint &info);
void Rsytri2(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsytri2x(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *work, mplapackint const nb, mplapackint &info);
void Rsytri_3(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *e, mplapackint *ipiv, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsytri_3x(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *e, mplapackint *ipiv, mpf_class *work, mplapackint const nb, mplapackint &info);
void Rsytri_rook(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *work, mplapackint &info);
void Rsytrs(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rsytrs2(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint &info);
void Rsytrs_3(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *e, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rsytrs_aa(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rsytrs_aa_2stage(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *tb, mplapackint const ltb, mplapackint *ipiv, mplapackint *ipiv2, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rsytrs_rook(const char *uplo, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mplapackint *ipiv, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rtbtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const kd, mplapackint const nrhs, mpf_class *ab, mplapackint const ldab, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rtgevc(const char *side, const char *howmny, bool *select, mplapackint const n, mpf_class *s, mplapackint const lds, mpf_class *p, mplapackint const ldp, mpf_class *vl, mplapackint const ldvl, mpf_class *vr, mplapackint const ldvr, mplapackint const mm, mplapackint &m, mpf_class *work, mplapackint &info);
void Rtgex2(bool const wantq, bool const wantz, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *q, mplapackint const ldq, mpf_class *z, mplapackint const ldz, mplapackint const j1, mplapackint const n1, mplapackint const n2, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rtgexc(bool const wantq, bool const wantz, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *q, mplapackint const ldq, mpf_class *z, mplapackint const ldz, mplapackint &ifst, mplapackint &ilst, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rtgsen(mplapackint const ijob, bool const wantq, bool const wantz, bool *select, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *alphar, mpf_class *alphai, mpf_class *beta, mpf_class *q, mplapackint const ldq, mpf_class *z, mplapackint const ldz, mplapackint &m, mpf_class &pl, mpf_class &pr, mpf_class *dif, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rtgsja(const char *jobu, const char *jobv, const char *jobq, mplapackint const m, mplapackint const p, mplapackint const n, mplapackint const k, mplapackint const l, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class const tola, mpf_class const tolb, mpf_class *alpha, mpf_class *beta, mpf_class *u, mplapackint const ldu, mpf_class *v, mplapackint const ldv, mpf_class *q, mplapackint const ldq, mpf_class *work, mplapackint &ncycle, mplapackint &info);
void Rtgsy2(const char *trans, mplapackint const ijob, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *c, mplapackint const ldc, mpf_class *d, mplapackint const ldd, mpf_class *e, mplapackint const lde, mpf_class *f, mplapackint const ldf, mpf_class &scale, mpf_class const rdsum, mpf_class const rdscal, mplapackint *iwork, mplapackint &pq, mplapackint &info);
void Rtgsyl(const char *trans, mplapackint const ijob, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *c, mplapackint const ldc, mpf_class *d, mplapackint const ldd, mpf_class *e, mplapackint const lde, mpf_class *f, mplapackint const ldf, mpf_class &scale, mpf_class &dif, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint &info);
void Rtplqt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const mb, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *t, mplapackint const ldt, mpf_class *work, mplapackint &info);
void Rtplqt2(mplapackint const m, mplapackint const n, mplapackint const l, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *t, mplapackint const ldt, mplapackint &info);
void Rtpmlqt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const mb, mpf_class *v, mplapackint const ldv, mpf_class *t, mplapackint const ldt, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint &info);
void Rtpmqrt(const char *side, const char *trans, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mplapackint const nb, mpf_class *v, mplapackint const ldv, mpf_class *t, mplapackint const ldt, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint &info);
void Rtpqrt(mplapackint const m, mplapackint const n, mplapackint const l, mplapackint const nb, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *t, mplapackint const ldt, mpf_class *work, mplapackint &info);
void Rtpqrt2(mplapackint const m, mplapackint const n, mplapackint const l, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *t, mplapackint const ldt, mplapackint &info);
void Rtprfb(const char *side, const char *trans, const char *direct, const char *storev, mplapackint const m, mplapackint const n, mplapackint const k, mplapackint const l, mpf_class *v, mplapackint const ldv, mpf_class *t, mplapackint const ldt, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *work, mplapackint const ldwork);
void Rtptrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, mpf_class *ap, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rtpttr(const char *uplo, mplapackint const n, mpf_class *ap, mpf_class *a, mplapackint const lda, mplapackint &info);
void Rtrevc3(const char *side, const char *howmny, bool *select, mplapackint const n, mpf_class *t, mplapackint const ldt, mpf_class *vl, mplapackint const ldvl, mpf_class *vr, mplapackint const ldvr, mplapackint const mm, mplapackint &m, mpf_class *work, mplapackint const lwork, mplapackint &info);
void Rtrexc(const char *compq, mplapackint const n, mpf_class *t, mplapackint const ldt, mpf_class *q, mplapackint const ldq, mplapackint &ifst, mplapackint &ilst, mpf_class *work, mplapackint &info);
void Rtrsen(const char *job, const char *compq, bool *select, mplapackint const n, mpf_class *t, mplapackint const ldt, mpf_class *q, mplapackint const ldq, mpf_class *wr, mpf_class *wi, mplapackint &m, mpf_class &s, mpf_class &sep, mpf_class *work, mplapackint const lwork, mplapackint *iwork, mplapackint const liwork, mplapackint &info);
void Rtrsna(const char *job, const char *howmny, bool *select, mplapackint const n, mpf_class *t, mplapackint const ldt, mpf_class *vl, mplapackint const ldvl, mpf_class *vr, mplapackint const ldvr, mpf_class *s, mpf_class *sep, mplapackint const mm, mplapackint &m, mpf_class *work, mplapackint const ldwork, mplapackint *iwork, mplapackint &info);
void Rtrsyl(const char *trana, const char *tranb, mplapackint const isgn, mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mpf_class *c, mplapackint const ldc, mpf_class &scale, mplapackint &info);
void Rtrti2(const char *uplo, const char *diag, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &info);
void Rtrtri(const char *uplo, const char *diag, mplapackint const n, mpf_class *a, mplapackint const lda, mplapackint &info);
void Rtrtrs(const char *uplo, const char *trans, const char *diag, mplapackint const n, mplapackint const nrhs, mpf_class *a, mplapackint const lda, mpf_class *b, mplapackint const ldb, mplapackint &info);
void Rtrttp(const char *uplo, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *ap, mplapackint &info);
void Rtzrzf(mplapackint const m, mplapackint const n, mpf_class *a, mplapackint const lda, mpf_class *tau, mpf_class *work, mplapackint const lwork, mplapackint &info);
#endif
